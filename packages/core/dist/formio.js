/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(function webpackUniversalModuleDefinition(root, factory) {
	if(typeof exports === 'object' && typeof module === 'object')
		module.exports = factory();
	else if(typeof define === 'function' && define.amd)
		define([], factory);
	else if(typeof exports === 'object')
		exports["Formio"] = factory();
	else
		root["Formio"] = factory();
})(self, function() {
return /******/ (function() { // webpackBootstrap
/******/ 	var __webpack_modules__ = ({

/***/ "./lib/Formio.js":
/*!***********************!*\
  !*** ./lib/Formio.js ***!
  \***********************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval("\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.Formio = exports.FormioPathType = void 0;\nvar fetch_ponyfill_1 = __importDefault(__webpack_require__(/*! fetch-ponyfill */ \"./node_modules/fetch-ponyfill/build/fetch-browser.js\"));\nvar lodash_1 = __webpack_require__(/*! @formio/lodash */ \"./node_modules/@formio/lodash/lib/index.js\");\nvar formUtil_1 = __webpack_require__(/*! ./util/formUtil */ \"./lib/util/formUtil.js\");\nvar eventemitter3_1 = __importDefault(__webpack_require__(/*! eventemitter3 */ \"./node_modules/eventemitter3/index.js\"));\nvar _a = fetch_ponyfill_1.default(), fetch = _a.fetch, Headers = _a.Headers;\nvar providers_1 = __importDefault(__webpack_require__(/*! ./providers */ \"./lib/providers/index.js\"));\nvar Plugins_1 = __importDefault(__webpack_require__(/*! ./Plugins */ \"./lib/Plugins.js\"));\n/**\n * The different path types for a project.\n */\nvar FormioPathType;\n(function (FormioPathType) {\n    FormioPathType[\"Subdirectories\"] = \"Subdirectories\";\n    FormioPathType[\"Subdomains\"] = \"Subdomains\";\n})(FormioPathType = exports.FormioPathType || (exports.FormioPathType = {}));\n/**\n * The Formio interface class. This is a minimalistic API library that allows you to work with the Form.io API's within JavaScript.\n *\n * ## Usage\n * Creating an instance of Formio is simple, and takes only a path (URL String). The path can be different, depending on the desired output.\n * The Formio instance can also access higher level operations, depending on how granular of a path you start with.\n *\n * ```ts\n * var formio = new Formio(<endpoint>, [options]);\n * ```\n *\n * Where **endpoint** is any valid API endpoint within Form.io. These URL's can provide a number of different methods depending on the granularity of the endpoint. This allows you to use the same interface but have access to different methods depending on how granular the endpoint url is.\n * **options** is defined within the {link Formio.constructor} documentation.\n *\n * Here is an example of how this library can be used to load a form JSON from the Form.io API's\n *\n * ```ts\n * const formio = new Formio('https://examples.form.io/example');\n * formio.loadForm().then((form) => {\n *   console.log(form);\n * });\n * ```\n */\nvar Formio = /** @class */ (function () {\n    /* eslint-disable max-statements */\n    /**\n     * @constructor\n     * @param {string} path - A project, form, and submission API Url.\n     * @param {FormioOptions} options - Available options to configure the Javascript API.\n     */\n    function Formio(path, options) {\n        var _this = this;\n        if (options === void 0) { options = {}; }\n        this.path = path;\n        this.options = options;\n        /**\n         * The base API url of the Form.io Platform. Example: https://api.form.io\n         */\n        this.base = '';\n        /**\n         * The Projects Endpoint derived from the provided source.\n         *\n         * @example https://api.form.io/project\n         */\n        this.projectsUrl = '';\n        /**\n         * A specific project endpoint derived from the provided source.\n         *\n         * @example https://examples.form.io\n         */\n        this.projectUrl = '';\n        /**\n         * The Project ID found within the provided source.\n         */\n        this.projectId = '';\n        /**\n         * A specific Role URL provided the source.\n         *\n         * @example https://examples.form.io/role/2342343234234234\n         */\n        this.roleUrl = '';\n        /**\n         * The roles endpoint derived from the provided source.\n         *\n         * @example https://examples.form.io/role\n         */\n        this.rolesUrl = '';\n        /**\n         * The roleID derieved from the provided source.\n         */\n        this.roleId = '';\n        /**\n         * A specific form url derived from the provided source.\n         *\n         * @example https://examples.form.io/example\n         */\n        this.formUrl = '';\n        /**\n         * The forms url derived from the provided source.\n         *\n         * @example https://example.form.io/form\n         */\n        this.formsUrl = '';\n        /**\n         * The Form ID derived from the provided source.\n         */\n        this.formId = '';\n        /**\n         * The submissions URL derived from the provided source.\n         *\n         * @example https://examples.form.io/example/submission\n         */\n        this.submissionsUrl = '';\n        /**\n         * A specific submissions URL derived from a provided source.\n         *\n         * @example https://examples.form.io/example/submission/223423423423\n         */\n        this.submissionUrl = '';\n        /**\n         * The submission ID provided a submission url.\n         */\n        this.submissionId = '';\n        /**\n         * The actions url provided a form url as the source.\n         *\n         * @example https://examples.form.io/example/action\n         */\n        this.actionsUrl = '';\n        /**\n         * The Action ID derived from a provided Action url.\n         */\n        this.actionId = '';\n        /**\n         * A specific action api endoint.\n         */\n        this.actionUrl = '';\n        this.vsUrl = '';\n        this.vId = '';\n        this.vUrl = '';\n        /**\n         * The query string derived from the provided src url.\n         */\n        this.query = '';\n        /**\n         * If this is a non-project url, such is the case for Open Source API.\n         */\n        this.noProject = false;\n        // Ensure we have an instance of Formio.\n        if (!(this instanceof Formio)) {\n            return new Formio(path);\n        }\n        if (options.hasOwnProperty('base') && options.base) {\n            this.base = options.base;\n        }\n        else if (Formio.baseUrl) {\n            this.base = Formio.baseUrl;\n        }\n        else if (window && window.location) {\n            this.base = window.location.href.match(/http[s]?:\\/\\/api./)[0];\n        }\n        if (!path) {\n            // Allow user to create new projects if this was instantiated without\n            // a url\n            this.projectUrl = Formio.projectUrl || this.base + \"/project\";\n            this.projectsUrl = this.base + \"/project\";\n            this.projectId = '';\n            this.query = '';\n            return;\n        }\n        if (options.hasOwnProperty('project') && options.project) {\n            this.projectUrl = options.project;\n        }\n        var project = this.projectUrl || Formio.projectUrl;\n        var projectRegEx = /(^|\\/)(project)($|\\/[^/]+)/;\n        var isProjectUrl = (path.search(projectRegEx) !== -1);\n        // The baseURL is the same as the projectUrl, and does not contain \"/project/MONGO_ID\" in\n        // its domain. This is almost certainly against the Open Source server.\n        if (project && this.base === project && !isProjectUrl) {\n            this.noProject = true;\n            this.projectUrl = this.base;\n        }\n        // Normalize to an absolute path.\n        if ((path.indexOf('http') !== 0) && (path.indexOf('//') !== 0)) {\n            path = this.base + path;\n        }\n        var hostparts = this.getUrlParts(path);\n        var hostName = '';\n        var parts = [];\n        if (hostparts) {\n            hostName = hostparts[1] + hostparts[2];\n            path = hostparts.length > 3 ? hostparts[3] : '';\n            var queryparts = path.split('?');\n            if (queryparts.length > 1) {\n                path = queryparts[0];\n                this.query = \"?\" + queryparts[1];\n            }\n        }\n        // Register a specific path.\n        var registerPath = function (name, base) {\n            _this[name + \"sUrl\"] = base + \"/\" + name;\n            var regex = new RegExp(\"/\" + name + \"/([^/]+)\");\n            if (path && path.search(regex) !== -1) {\n                parts = path.match(regex);\n                _this[name + \"Url\"] = parts ? (base + parts[0]) : '';\n                _this[name + \"Id\"] = (parts.length > 1) ? parts[1] : '';\n                base += parts[0];\n            }\n            return base;\n        };\n        // Register an array of items.\n        var registerItems = function (items, base, staticBase) {\n            for (var i in items) {\n                if (items.hasOwnProperty(i)) {\n                    var item = items[i];\n                    if (Array.isArray(item)) {\n                        registerItems(item, base, true);\n                    }\n                    else {\n                        var newBase = registerPath(item, base);\n                        base = staticBase ? base : newBase;\n                    }\n                }\n            }\n        };\n        if (!this.projectUrl || (this.projectUrl === this.base)) {\n            // If a project uses Subdirectories path type, we need to specify a projectUrl\n            if (!this.projectUrl && !isProjectUrl && Formio.pathType === 'Subdirectories') {\n                var regex = \"^\" + hostName.replace(/\\//g, '\\\\/') + \".[^/]+\";\n                var match = project.match(new RegExp(regex));\n                this.projectUrl = match ? match[0] : hostName;\n            }\n            else {\n                this.projectUrl = hostName;\n            }\n        }\n        // Check if we have a specified path type.\n        var isNotSubdomainType = false;\n        if (Formio.pathType) {\n            isNotSubdomainType = Formio.pathType !== 'Subdomains';\n        }\n        if (!this.noProject) {\n            // Determine the projectUrl and projectId\n            if (isProjectUrl) {\n                // Get project id as project/:projectId.\n                registerItems(['project'], hostName);\n                path = path.replace(projectRegEx, '');\n            }\n            else if (hostName === this.base) {\n                // Get project id as first part of path (subdirectory).\n                if (hostparts && hostparts.length > 3 && path.split('/').length > 1) {\n                    var pathParts = path.split('/');\n                    pathParts.shift(); // Throw away the first /.\n                    var projectId = pathParts.shift();\n                    if (projectId) {\n                        this.projectId = projectId;\n                        path = \"/\" + pathParts.join('/');\n                        this.projectUrl = hostName + \"/\" + this.projectId;\n                    }\n                }\n            }\n            else {\n                // Get project id from subdomain.\n                if (hostparts && hostparts.length > 2 && (hostparts[2].split('.').length > 2 || hostName.includes('localhost')) && !isNotSubdomainType) {\n                    this.projectUrl = hostName;\n                    this.projectId = hostparts[2].split('.')[0];\n                }\n            }\n            this.projectsUrl = this.projectsUrl || this.base + \"/project\";\n        }\n        // Configure Role urls and role ids.\n        registerItems(['role'], this.projectUrl);\n        // Configure Form urls and form ids.\n        if (/(^|\\/)(form)($|\\/)/.test(path)) {\n            registerItems(['form', ['submission', 'action', 'v']], this.projectUrl);\n        }\n        else {\n            var subRegEx = new RegExp('/(submission|action|v)($|/.*)');\n            var subs = path.match(subRegEx);\n            if ((subs && (subs.length > 1))) {\n                this.pathType = subs[1];\n            }\n            path = path.replace(subRegEx, '');\n            path = path.replace(/\\/$/, '');\n            this.formsUrl = this.projectUrl + \"/form\";\n            this.formUrl = path ? this.projectUrl + path : '';\n            this.formId = path.replace(/^\\/+|\\/+$/g, '');\n            var items = ['submission', 'action', 'v'];\n            for (var i in items) {\n                if (items.hasOwnProperty(i)) {\n                    var item = items[i];\n                    this[item + \"sUrl\"] = this.projectUrl + path + \"/\" + item;\n                    if ((this.pathType === item) && subs && (subs.length > 2) && subs[2]) {\n                        this[item + \"Id\"] = subs[2].replace(/^\\/+|\\/+$/g, '');\n                        this[item + \"Url\"] = this.projectUrl + path + subs[0];\n                    }\n                }\n            }\n        }\n        // Set the app url if it is not set.\n        if (!Formio.projectUrlSet) {\n            Formio.projectUrl = this.projectUrl;\n        }\n    }\n    /* eslint-enable max-statements */\n    /**\n     * Deletes a remote resource of any provided type.\n     *\n     * @param {string} type - The type of resource to delete. \"submission\", \"form\", etc.\n     * @param {object} options - The options passed to {@link Formio.request}\n     * @return {Promise<Response>}\n     */\n    Formio.prototype.delete = function (type, opts) {\n        var _id = type + \"Id\";\n        var _url = type + \"Url\";\n        if (!this[_id]) {\n            return Promise.reject('Nothing to delete');\n        }\n        Formio.cache = {};\n        return this.makeRequest(type, this[_url], 'delete', null, opts);\n    };\n    /**\n     * Returns the index (array of records) for any provided type.\n     *\n     * @param {string} type - The type of resource to fetch the index of. \"submission\", \"form\", etc.\n     * @param {object} query - A query object to pass to the request.\n     * @param {object} query.params - A map (key-value pairs) of URL query parameters to add to the url.\n     * @param {object} options - Options to pass to {@link Formio.request}\n     * @return {Promise<Response>}\n     */\n    Formio.prototype.index = function (type, query, opts) {\n        var _url = type + \"Url\";\n        query = query || '';\n        if (query && lodash_1.isObject(query)) {\n            query = \"?\" + Formio.serialize(query.params);\n        }\n        return this.makeRequest(type, this[_url] + query, 'get', null, opts);\n    };\n    /**\n     * Save a document record using \"upsert\". If the document does not exist, it will be created, if the _id is provided,\n     * it will be updated.\n     *\n     * @param {string} type - The type of resource to fetch the index of. \"submission\", \"form\", etc.\n     * @param {object} data - The resource data object.\n     * @param {object} options - Options to pass to {@link Formio.request}\n     * @return {Promise<object>}\n     */\n    Formio.prototype.save = function (type, data, opts) {\n        var _id = type + \"Id\";\n        var _url = type + \"Url\";\n        var method = (this[_id] || data._id) ? 'put' : 'post';\n        var reqUrl = this[_id] ? this[_url] : this[type + \"sUrl\"];\n        if (!this[_id] && data._id && (method === 'put') && !reqUrl.includes(data._id)) {\n            reqUrl += \"/\" + data._id;\n        }\n        Formio.cache = {};\n        return this.makeRequest(type, reqUrl + this.query, method, data, opts);\n    };\n    /**\n     * @summary Load (GET) a document record.\n     *\n     * @param {string} type - The type of resource to fetch the index of. \"submission\", \"form\", etc.\n     * @param {object} query - A query object to pass to the request.\n     * @param {object} query.params - A map (key-value pairs) of URL query parameters to add to the url.\n     * @param {object} options - Options to pass to {@link Formio.request}\n     * @return {Promise<object>}\n     */\n    Formio.prototype.load = function (type, query, opts) {\n        var _id = type + \"Id\";\n        var _url = type + \"Url\";\n        if (query && lodash_1.isObject(query)) {\n            query = Formio.serialize(query.params);\n        }\n        if (query) {\n            query = this.query ? (this.query + \"&\" + query) : (\"?\" + query);\n        }\n        else {\n            query = this.query;\n        }\n        if (!this[_id]) {\n            return Promise.reject(\"Missing \" + _id);\n        }\n        return this.makeRequest(type, this[_url] + query, 'get', null, opts);\n    };\n    /**\n     * @summary Call {@link Formio.makeRequest} for this Formio instance.\n     *\n     * @param {string} type - The request resource type. \"submission\", \"form\", etc.\n     * @param {string} url - The URL to request.\n     * @param {string} method - The request method. GET, PUT, POST, DELETE, or PATCH\n     * @param {object} data - The data to pass to the request (for PUT, POST, and PATCH methods)\n     * @param {object} options - An object of options to pass to the request method.\n     * @param {boolean} options.ignoreCache - To ignore internal caching of the request.\n     * @param {object} options.headers - An object of headers to pass along to the request.\n     * @param {boolean} options.noToken - If set to true, this will not include the Form.io x-jwt-token along with the request.\n     * @param {string} options.namespace - The Form.io namespace to prepend to all LocalStorage variables such as formioToken.\n     * @param {boolean} options.getHeaders - Set this if you wish to include the response headers with the return of this method.\n     * @return {Promise<Response>}\n     */\n    Formio.prototype.makeRequest = function (type, url, method, data, opts) {\n        return Formio.makeRequest(this, type, url, method, data, opts);\n    };\n    /**\n     * @summary Loads a project.\n     *\n     * ```ts\n     * const formio = new Formio('https://examples.form.io');\n     * formio.loadProject().then((project) => {\n     *   console.log(project);\n     * });\n     * ```\n     *\n     * @param {object} query - Query parameters to pass to {@link Formio#load}.\n     * @param {object} options - Options to pass to {@link Formio.request}\n     * @return {Promise<Object>}\n     */\n    Formio.prototype.loadProject = function (query, opts) {\n        return this.load('project', query, opts);\n    };\n    /**\n     * Saves or Updates a project.\n     *\n     * ### Create a new project\n     * ```ts\n     * const formio = new Formio();\n     * formio.saveProject({\n     *   title: 'My Project',\n     *   path: 'myproject',\n     *   name: 'myproject'\n     * });\n     * ```\n     *\n     * ### Update an existing project\n     * ```ts\n     * const formio = new Formio('https://examples.form.io');\n     * formio.loadProject().then((project) => {\n     *   project.title = 'Title changed';\n     *   formio.saveProject(project).then(() => {\n     *     console.log('Done saving project!');\n     *   });\n     * });\n     * ```\n     *\n     * @param {object} data - The project JSON to create or update.\n     * @param {object} options - Options to pass to {@link Formio.request}\n     * @return {Promise<Object>}\n     */\n    Formio.prototype.saveProject = function (data, opts) {\n        return this.save('project', data, opts);\n    };\n    /**\n     * Deletes a project\n     *\n     * ```ts\n     * const formio = new Formio('https://examples.form.io');\n     * formio.deleteProject();\n     * ```\n     *\n     * @param {object} options - Options to pass to {@link Formio.request}\n     * @return {Promise<Object>}\n     */\n    Formio.prototype.deleteProject = function (opts) {\n        return this.delete('project', opts);\n    };\n    /**\n     * Loads a list of all projects.\n     *\n     * ```ts\n     * Formio.loadProjects().then((projects) => {\n     *   console.log(projects);\n     * });\n     * ```\n     *\n     * @param {object} query - Query parameters similar to {@link Formio#load}.\n     * @param {object} options - Options to pass to {@link Formio.request}\n     * @return {*}\n     */\n    Formio.loadProjects = function (query, opts) {\n        query = query || '';\n        if (lodash_1.isObject(query)) {\n            query = \"?\" + Formio.serialize(query.params);\n        }\n        return Formio.makeStaticRequest(Formio.baseUrl + \"/project\" + query, 'GET', null, opts);\n    };\n    /**\n     * Loads a role within a project.\n     *\n     * ```ts\n     * const formio = new Formio('https://examples.form.io/role/234234234234');\n     * formio.loadRole().then((role) => {\n     *   console.log(role);\n     * });\n     * ```\n     *\n     * @param {object} options - Options to pass to {@link Formio.request}\n     * @return {Promise<Object>}\n     */\n    Formio.prototype.loadRole = function (opts) {\n        return this.load('role', null, opts);\n    };\n    /**\n     * Create a new or Update an existing role within a project.\n     *\n     * ### Create new Role example\n     * ```ts\n     * const formio = new Formio('https://examples.form.io');\n     * formio.saveRole({\n     *   title: 'Employee',\n     *   description: 'A person who belongs to a company.'\n     * }).then((role) => {\n     *   console.log(role);\n     * });\n     * ```\n     *\n     * ### Update existing role example\n     * ```ts\n     * const formio = new Formio('https://examples.form.io/role/234234234234234');\n     * formio.loadRole().then((role) => {\n     *   role.title = 'Manager';\n     *   formio.saveRole(role).then(() => {\n     *     console.log('DONE');\n     *   });\n     * });\n     * ```\n     *\n     * @param {object} role - The Role JSON to create or update.\n     * @param {object} options - Options to pass to {@link Formio.request}\n     * @return {Promise<Object>}\n     */\n    Formio.prototype.saveRole = function (data, opts) {\n        return this.save('role', data, opts);\n    };\n    /**\n     * Deletes a role within a project.\n     *\n     * @param {object} options - Options to pass to {@link Formio.request}\n     * @return {Promise<Response>}\n     */\n    Formio.prototype.deleteRole = function (opts) {\n        return this.delete('role', opts);\n    };\n    /**\n     * Load all roles within a project.\n     *\n     * ```ts\n     * const formio = new Formio('https://examples.form.io');\n     * formio.loadRoles().then((roles) => {\n     *   console.log(roles);\n     * });\n     * ```\n     *\n     * @param {object} options - Options to pass to {@link Formio.request}\n     * @return {Promise<Response>}\n     */\n    Formio.prototype.loadRoles = function (opts) {\n        return this.index('roles', null, opts);\n    };\n    /**\n     * Loads a form.\n     *\n     * ```ts\n     * const formio = new Formio('https://examples.form.io/example');\n     * formio.loadForm().then((form) => {\n     *   console.log(form);\n     * });\n     * ```\n     *\n     * @param {object} query - Query parameters similar to {@link Formio#load}.\n     * @param {object} options - Options to pass to {@link Formio.request}\n     * @return {Promise<object>}\n     */\n    Formio.prototype.loadForm = function (query, opts) {\n        var _this = this;\n        return this.load('form', query, opts)\n            .then(function (currentForm) {\n            // Check to see if there isn't a number in vId.\n            if (!currentForm.revisions || isNaN(parseInt(_this.vId))) {\n                return currentForm;\n            }\n            // If a submission already exists but form is marked to load current version of form.\n            if (currentForm.revisions === 'current' && _this.submissionId) {\n                return currentForm;\n            }\n            // If they specified a revision form, load the revised form components.\n            if (query && lodash_1.isObject(query)) {\n                query = Formio.serialize(query.params);\n            }\n            if (query) {\n                query = _this.query ? (_this.query + \"&\" + query) : (\"?\" + query);\n            }\n            else {\n                query = _this.query;\n            }\n            return _this.makeRequest('form', _this.vUrl + query, 'get', null, opts)\n                .then(function (revisionForm) {\n                currentForm._vid = revisionForm._vid;\n                currentForm.components = revisionForm.components;\n                currentForm.settings = revisionForm.settings;\n                // Using object.assign so we don't cross polinate multiple form loads.\n                return Object.assign({}, currentForm);\n            })\n                // If we couldn't load the revision, just return the original form.\n                .catch(function () { return Object.assign({}, currentForm); });\n        });\n    };\n    /**\n     * Create or Update a specific form.\n     *\n     * ### Create form example\n     * ```ts\n     * const formio = new Formio('https://examples.form.io');\n     * formio.saveForm({\n     *   title: 'Employee',\n     *   type: 'resource',\n     *   path: 'employee',\n     *   name: 'employee',\n     *   components: [\n     *     {\n     *       type: 'textfield',\n     *       key: 'firstName',\n     *       label: 'First Name'\n     *     },\n     *     {\n     *       type: 'textfield',\n     *       key: 'lastName',\n     *       label: 'Last Name'\n     *     }\n     *   ]\n     * });\n     * ```\n     *\n     * ### Update a form example\n     * ```ts\n     * const formio = new Formio('https://examples.form.io/example');\n     * formio.loadForm().then((form) => {\n     *   form.title = 'Changed Title';\n     *   formio.saveForm(form).then(() => {\n     *     console.log('DONE!!!');\n     *   });\n     * });\n     * ```\n     *\n     * @param {object} data - The Form JSON to create or update.\n     * @param {object} options - Options to pass to {@link Formio.request}\n     * @return {Promise<Object>}\n     */\n    Formio.prototype.saveForm = function (data, opts) {\n        return this.save('form', data, opts);\n    };\n    /**\n     * Deletes a form.\n     *\n     * ```ts\n     * const formio = new Formio('https://examples.form.io/example');\n     * formio.deleteForm().then(() => {\n     *   console.log('Deleted!');\n     * });\n     * ```\n     *\n     * @param {object} options - Options to pass to {@link Formio.request}\n     * @return {Promise<Response>}\n     */\n    Formio.prototype.deleteForm = function (opts) {\n        return this.delete('form', opts);\n    };\n    /**\n     * Loads all forms within a project.\n     *\n     * ```ts\n     * const formio = new Formio('https://examples.form.io');\n     * formio.loadForms().then((forms) => {\n     *   console.log(forms);\n     * });\n     * ```\n     *\n     * @param {object} query - Query parameters similar to {@link Formio#load}.\n     * @param {object} options - Options to pass to {@link Formio.request}\n     * @return {Promise<Response>}\n     */\n    Formio.prototype.loadForms = function (query, opts) {\n        return this.index('forms', query, opts);\n    };\n    /**\n     * Loads a specific submissionn.\n     *\n     * ```ts\n     * const formio = new Formio('https://examples.form.io/example/submission/23423423423423423');\n     * formio.loadSubmission().then((submission) => {\n     *   console.log(submission);\n     * });\n     * ```\n     *\n     * @param {object} query - Query parameters similar to {@link Formio#load}.\n     * @param {object} options - Options to pass to {@link Formio.request}\n     * @return {Promise<object>}\n     */\n    Formio.prototype.loadSubmission = function (query, opts) {\n        var _this = this;\n        return this.load('submission', query, opts)\n            .then(function (submission) {\n            _this.vId = submission._fvid;\n            _this.vUrl = _this.formUrl + \"/v/\" + _this.vId;\n            return submission;\n        });\n    };\n    /**\n     * Creates a new or Updates an existing submission.\n     *\n     * ### Create a new submission\n     * ```ts\n     * const formio = new Formio('https://examples.form.io/example');\n     * formio.saveSubmission({\n     *   data: {\n     *     firstName: 'Joe',\n     *     lastName: 'Smith'\n     *   }\n     * }).then((submission) => {\n     *   // This will now be the complete submission object saved on the server.\n     *   console.log(submission);\n     * });\n     * ```\n     *\n     * ### Update an existing submission\n     * ```ts\n     * const formio = new Formio('https://examples.form.io/example/submission/23423423423423423');\n     * formio.loadSubmission().then((submission) => {\n     *   submission.data.lastName = 'Thompson';\n     *   formio.saveSubmission(submission).then(() => {\n     *     console.log('DONE');\n     *   });\n     * });\n     * ```\n     *\n     * @param {object} data - The submission JSON object.\n     * @param {object} options - Options to pass to {@link Formio.request}\n     * @return {Promise<Object>}\n     */\n    Formio.prototype.saveSubmission = function (data, opts) {\n        if (!isNaN(parseInt(this.vId))) {\n            data._fvid = this.vId;\n        }\n        return this.save('submission', data, opts);\n    };\n    /**\n     * Deletes a submission.\n     *\n     * @param {object} options - Options to pass to {@link Formio.request}\n     * @return {Promise<Response>}\n     */\n    Formio.prototype.deleteSubmission = function (opts) {\n        return this.delete('submission', opts);\n    };\n    /**\n     * Loads all submissions within a form.\n     *\n     * ```ts\n     * const formio = new Formio('https://examples.form.io/example');\n     * formio.loadSubmissions({\n     *   params: {\n     *     limit: 25,\n     *     'data.lastName__regex': 'smith'\n     *   }\n     * }).then((submissions) => {\n     *   // Should print out 25 submissions where the last name contains \"smith\".\n     *   console.log(submissions);\n     * });\n     * ```\n     *\n     * @param {object} query - Query parameters similar to {@link Formio#load}.\n     * @param {object} options - Options to pass to {@link Formio.request}\n     * @return {Promise<Response>}\n     */\n    Formio.prototype.loadSubmissions = function (query, opts) {\n        return this.index('submissions', query, opts);\n    };\n    /**\n     * Loads a form action.\n     *\n     * ```ts\n     * const formio = new Formio('https://examples.form.io/example/action/234234234234');\n     * formio.loadAction().then((action) => {\n     *   console.log(action);\n     * });\n     * ```\n     *\n     * @param {object} query - Query parameters similar to {@link Formio#load}.\n     * @param {object} options - Options to pass to {@link Formio.request}\n     * @return {Promise<Object>}\n     */\n    Formio.prototype.loadAction = function (query, opts) {\n        return this.load('action', query, opts);\n    };\n    /**\n     * Create a new or update an existing action.\n     *\n     * ### Create a new action for a form.\n     * ```ts\n     * const formio = new Formio('https://examples.form.io/example');\n     * formio.saveAction({\n     *   data: {\n     *     name: 'webhook',\n     *     title: 'Webhook Action',\n     *     method: ['create', 'update', 'delete'],\n     *     handler: ['after'],\n     *     condition: {},\n     *     settings: {\n     *       url: 'https://example.com',\n     *       headers: [{}],\n     *       block: false,\n     *       forwardHeaders: false\n     *     }\n     *   }\n     * }).then((action) => {\n     *   console.log(action);\n     * });\n     * ```\n     *\n     * ### Update an action\n     * ```ts\n     * const formio = new Formio('https://examples.form.io/example/action/234234234234');\n     * formio.loadAction().then((action) => {\n     *   action.title = 'Updated title';\n     *   formio.saveAction(action).then(() => {\n     *     console.log('Done!');\n     *   });\n     * });\n     * ```\n     *\n     * @param {object} data - The action JSON\n     * @param {object} options - Options to pass to {@link Formio.request}\n     * @return {Promise<Object>}\n     */\n    Formio.prototype.saveAction = function (data, opts) {\n        return this.save('action', data, opts);\n    };\n    /**\n     * Delete an action\n     *\n     * ```ts\n     * const formio = new Formio('https://examples.form.io/example/action/234234234234');\n     * formio.deleteAction().then(() => {\n     *   console.log('Action was deleted.');\n     * });\n     * ```\n     *\n     * @param {object} options - Options to pass to {@link Formio.request}\n     * @return {Promise<Response>}\n     */\n    Formio.prototype.deleteAction = function (opts) {\n        return this.delete('action', opts);\n    };\n    /**\n     * Loads all actions within a form.\n     *\n     * ```ts\n     * const formio = new Formio('https://examples.form.io/example');\n     * formio.loadActions().then((actions) => {\n     *   console.log(actions);\n     * });\n     * ```\n     *\n     * @param {object} query - Query parameters similar to {@link Formio#load}.\n     * @param {object} options - Options to pass to {@link Formio.request}\n     * @return {Promise<Response>}\n     */\n    Formio.prototype.loadActions = function (query, opts) {\n        return this.index('actions', query, opts);\n    };\n    /**\n     * Returns a list of available actions\n     *\n     * @return {Promise<Response>}\n     */\n    Formio.prototype.availableActions = function () {\n        return this.makeRequest('availableActions', this.formUrl + \"/actions\");\n    };\n    /**\n     * Returns the action information for a specific action, such as \"save\".\n     *\n     * ```ts\n     * const formio = new Formio('https://examples.form.io/example/actions/save');\n     * formio.actionInfo().then((info) => {\n     *   console.log(info);\n     * });\n     * ```\n     *\n     * @param {string} name - The name of the action you would like to get information for. i.e. \"save\", \"webhook\", etc.\n     * @return {Promise<Response>}\n     */\n    Formio.prototype.actionInfo = function (name) {\n        return this.makeRequest('actionInfo', this.formUrl + \"/actions/\" + name);\n    };\n    /**\n     * Determine if a string ID is a valid MongoID.\n     *\n     * @param {string} id - The id that should be tested if it is avalid id.\n     * @return {boolean} - true if it is a valid MongoId, false otherwise.\n     */\n    Formio.prototype.isObjectId = function (id) {\n        var checkForHexRegExp = new RegExp('^[0-9a-fA-F]{24}$');\n        return checkForHexRegExp.test(id);\n    };\n    /**\n     * Get the project ID of project.\n     *\n     * ```ts\n     * const formio = new Formio('https://examples.form.io');\n     * formio.getProjectId().then((projectId) => {\n     *   console.log(projectId);\n     * };\n     * ```\n     *\n     * @return {Promise<string>}\n     */\n    Formio.prototype.getProjectId = function () {\n        if (!this.projectId) {\n            return Promise.resolve('');\n        }\n        if (this.isObjectId(this.projectId)) {\n            return Promise.resolve(this.projectId);\n        }\n        else {\n            return this.loadProject().then(function (project) {\n                return project._id;\n            });\n        }\n    };\n    /**\n     * Get the ID of a form.\n     *\n     * ```ts\n     * const formio = new Formio('https://examples.form.io/example');\n     * formio.getFormId().then((formId) => {\n     *   console.log(formId);\n     * });\n     * ```\n     *\n     * @return {Promise<string>}\n     */\n    Formio.prototype.getFormId = function () {\n        if (!this.formId) {\n            return Promise.resolve('');\n        }\n        if (this.isObjectId(this.formId)) {\n            return Promise.resolve(this.formId);\n        }\n        else {\n            return this.loadForm().then(function (form) {\n                return form._id;\n            });\n        }\n    };\n    /**\n     * Instance method for {@link Formio.currentUser}\n     *\n     * @param {object} options - Options to pass to {@link Formio.request}\n     * @return {Promise<object>}\n     */\n    Formio.prototype.currentUser = function (options) {\n        return Formio.currentUser(this, options);\n    };\n    /**\n     * Instance method for {@link Formio.accessInfo}\n     *\n     * @return {Promise<Response>}\n     */\n    Formio.prototype.accessInfo = function () {\n        return Formio.accessInfo(this);\n    };\n    /**\n     * Returns the JWT token for this instance.\n     *\n     * @param {object} options - The following options are provided.\n     * @param {string} options.namespace - The localStorage namespace to use when retrieving tokens from storage.\n     * @return {string} - The JWT token for this user.\n     */\n    Formio.prototype.getToken = function (options) {\n        return Formio.getToken(Object.assign({ formio: this }, this.options, options));\n    };\n    /**\n     * Sets the JWT token for this instance.\n     *\n     * @param {string} token - The JWT token to set.\n     * @param {object} options - The following options are provided.\n     * @param {string} options.namespace - The localStorage namespace to use when retrieving tokens from storage.\n     * @return {string} - The JWT token that was set.\n     */\n    Formio.prototype.setToken = function (token, options) {\n        return Formio.setToken(token, Object.assign({ formio: this }, this.options, options));\n    };\n    /**\n     * Returns a temporary authentication token for single purpose token generation.\n     *\n     * @param {number|string} expire - The amount of seconds to wait before this temp token expires.\n     * @param {string} allowed - The allowed path string inn the format GET:/path\n     * @param {object} options - The options passed to {@link Formio#getToken}\n     */\n    Formio.prototype.getTempToken = function (expire, allowed, options) {\n        var token = Formio.getToken(options);\n        if (!token) {\n            return Promise.reject('You must be authenticated to generate a temporary auth token.');\n        }\n        var authUrl = Formio.authUrl || this.projectUrl;\n        return this.makeRequest('tempToken', authUrl + \"/token\", 'GET', null, {\n            ignoreCache: true,\n            header: new Headers({\n                'x-expire': expire,\n                'x-allow': allowed\n            })\n        });\n    };\n    /**\n     * Get a PDF download url for a submission, which will generate a new PDF of the submission. This method will first\n     * fetch a temporary download token, and then append this to the download url for this form.\n     *\n     * ```ts\n     * const formio = new Formio('https://examples.form.io/example/submission/324234234234234');\n     * formio.getDownloadUrl().then((url) => {\n     *   console.log(url);\n     * });\n     * ```\n     *\n     * @param {object} [form] - The form JSON to fetch a download url for.\n     * @return {Promise<string>} - The download url.\n     */\n    Formio.prototype.getDownloadUrl = function (form) {\n        var _this = this;\n        if (!this.submissionId) {\n            return Promise.resolve('');\n        }\n        if (!form) {\n            // Make sure to load the form first.\n            return this.loadForm().then(function (_form) {\n                if (!_form) {\n                    return '';\n                }\n                return _this.getDownloadUrl(_form);\n            });\n        }\n        var apiUrl = \"/project/\" + form.project;\n        apiUrl += \"/form/\" + form._id;\n        apiUrl += \"/submission/\" + this.submissionId;\n        apiUrl += '/download';\n        var download = this.base + apiUrl;\n        return new Promise(function (resolve, reject) {\n            _this.getTempToken(3600, \"GET:\" + apiUrl).then(function (tempToken) {\n                download += \"?token=\" + tempToken.key;\n                resolve(download);\n            }, function () {\n                resolve(download);\n            }).catch(reject);\n        });\n    };\n    /**\n     * Upload a file to the Form.io platform.\n     *\n     * @param {string} storage - The storage type for this file. i.e. \"url\", \"s3\", \"dropbox\", etc.\n     * @param {File} file - The file object to upload.\n     * @param {string} fileName - The filename to give to the file once it is uploaded.\n     * @param {string} dir - The directory name to place the file.\n     * @param {function} progressCallback - Called when the progress of the file updates.\n     * @param {string} url - Used for IndexDB uploads (offline file uploads) to provide the url of the upload destination.\n     * @param {object} options - Options used to pass to each upload provider for upload configurations.\n     * @param {string} fileKey - Custom file key to pass to custom upload providers.\n     * @return {*}\n     */\n    Formio.prototype.uploadFile = function (storage, file, fileName, dir, progressCallback, url, options, fileKey, groupPermissions, groupId, uploadStartCallback, abortCallback) {\n        var _this = this;\n        var requestArgs = {\n            provider: storage,\n            method: 'upload',\n            file: file,\n            fileName: fileName,\n            dir: dir\n        };\n        fileKey = fileKey || 'file';\n        var request = Plugins_1.default.pluginWait('preRequest', requestArgs)\n            .then(function () {\n            return Plugins_1.default.pluginGet('fileRequest', requestArgs)\n                .then(function (result) {\n                if (storage && lodash_1.isNil(result)) {\n                    var Provider = providers_1.default.getProvider('storage', storage);\n                    if (Provider) {\n                        var provider = new Provider(_this);\n                        if (uploadStartCallback) {\n                            uploadStartCallback();\n                        }\n                        return provider.uploadFile(file, fileName, dir, progressCallback, url, options, fileKey, groupPermissions, groupId, abortCallback);\n                    }\n                    else {\n                        throw ('Storage provider not found');\n                    }\n                }\n                return result || { url: '' };\n            });\n        });\n        return Plugins_1.default.pluginAlter('wrapFileRequestPromise', request, requestArgs);\n    };\n    /**\n     * Download a file.\n     *\n     * @param file\n     * @param options\n     * @return {*}\n     */\n    Formio.prototype.downloadFile = function (file, options) {\n        var _this = this;\n        var requestArgs = {\n            method: 'download',\n            file: file\n        };\n        var request = Plugins_1.default.pluginWait('preRequest', requestArgs)\n            .then(function () {\n            return Plugins_1.default.pluginGet('fileRequest', requestArgs)\n                .then(function (result) {\n                if (file.storage && lodash_1.isNil(result)) {\n                    var Provider = providers_1.default.getProvider('storage', file.storage);\n                    if (Provider) {\n                        var provider = new Provider(_this);\n                        return provider.downloadFile(file, options);\n                    }\n                    else {\n                        throw ('Storage provider not found');\n                    }\n                }\n                return result || { url: '' };\n            });\n        });\n        return Plugins_1.default.pluginAlter('wrapFileRequestPromise', request, requestArgs);\n    };\n    /**\n     * Deletes a file from the provider.\n     *\n     * @param file\n     * @param options\n     */\n    Formio.prototype.deleteFile = function (file, options) {\n        var _this = this;\n        var requestArgs = {\n            method: 'delete',\n            file: file\n        };\n        var request = Plugins_1.default.pluginWait('preRequest', requestArgs)\n            .then(function () {\n            return Plugins_1.default.pluginGet('fileRequest', requestArgs)\n                .then(function (result) {\n                if (file.storage && lodash_1.isNil(result)) {\n                    var Provider = providers_1.default.getProvider('storage', file.storage);\n                    if (Provider) {\n                        var provider = new Provider(_this);\n                        return provider.deleteFile(file, options);\n                    }\n                    else {\n                        throw ('Storage provider not found');\n                    }\n                }\n                return result || { url: '' };\n            });\n        });\n        return Plugins_1.default.pluginAlter('wrapFileRequestPromise', request, requestArgs);\n    };\n    /**\n     * Returns the user permissions to a form and submission.\n     *\n     * @param user - The user or current user if undefined. For anonymous, use \"null\"\n     * @param form - The form or current form if undefined. For no form check, use \"null\"\n     * @param submission - The submisison or \"index\" if undefined.\n     *\n     * @return {{create: boolean, read: boolean, edit: boolean, delete: boolean}}\n     */\n    Formio.prototype.userPermissions = function (user, form, submission) {\n        return Promise.all([\n            (form !== undefined) ? Promise.resolve(form) : this.loadForm(),\n            (user !== undefined) ? Promise.resolve(user) : this.currentUser(),\n            (submission !== undefined || !this.submissionId) ? Promise.resolve(submission) : this.loadSubmission(),\n            this.accessInfo()\n        ]).then(function (results) {\n            var form = results.shift();\n            var user = results.shift() || { _id: false, roles: [] };\n            var submission = results.shift();\n            var access = results.shift();\n            var permMap = {\n                create: 'create',\n                read: 'read',\n                update: 'edit',\n                delete: 'delete'\n            };\n            var perms = {\n                user: user,\n                form: form,\n                access: access,\n                create: false,\n                read: false,\n                edit: false,\n                delete: false\n            };\n            for (var roleName in access.roles) {\n                if (access.roles.hasOwnProperty(roleName)) {\n                    var role = access.roles[roleName];\n                    if (role.default && (user._id === false)) {\n                        // User is anonymous. Add the anonymous role.\n                        user.roles.push(role._id);\n                    }\n                    else if (role.admin && user.roles.indexOf(role._id) !== -1) {\n                        perms.create = true;\n                        perms.read = true;\n                        perms.delete = true;\n                        perms.edit = true;\n                        return perms;\n                    }\n                }\n            }\n            if (form && form.submissionAccess) {\n                for (var i = 0; i < form.submissionAccess.length; i++) {\n                    var permission = form.submissionAccess[i];\n                    var _a = permission.type.split('_'), perm = _a[0], scope = _a[1];\n                    if (['create', 'read', 'update', 'delete'].includes(perm)) {\n                        if (lodash_1.intersection(permission.roles, user.roles).length) {\n                            perms[permMap[perm]] = (scope === 'all') || (!submission || (user._id === submission.owner));\n                        }\n                    }\n                }\n            }\n            // check for Group Permissions\n            if (submission) {\n                // we would anyway need to loop through components for create permission, so we'll do that for all of them\n                formUtil_1.eachComponent(form.components, function (component, path) {\n                    if (component && component.defaultPermission) {\n                        var value = lodash_1.get(submission.data, path);\n                        // make it work for single-select Group and multi-select Group\n                        var groups = Array.isArray(value) ? value : [value];\n                        groups.forEach(function (group) {\n                            if (group && group._id && // group id is present\n                                user.roles.indexOf(group._id) > -1 // user has group id in his roles\n                            ) {\n                                if (component.defaultPermission === 'read') {\n                                    perms[permMap.read] = true;\n                                }\n                                if (component.defaultPermission === 'create') {\n                                    perms[permMap.create] = true;\n                                    perms[permMap.read] = true;\n                                }\n                                if (component.defaultPermission === 'write') {\n                                    perms[permMap.create] = true;\n                                    perms[permMap.read] = true;\n                                    perms[permMap.update] = true;\n                                }\n                                if (component.defaultPermission === 'admin') {\n                                    perms[permMap.create] = true;\n                                    perms[permMap.read] = true;\n                                    perms[permMap.update] = true;\n                                    perms[permMap.delete] = true;\n                                }\n                            }\n                        });\n                    }\n                });\n            }\n            return perms;\n        });\n    };\n    /**\n     * `Determine if the current user can submit a form.\n     * @return {*}\n     */\n    Formio.prototype.canSubmit = function () {\n        var _this = this;\n        return this.userPermissions().then(function (perms) {\n            // If there is user and they cannot create, then check anonymous user permissions.\n            if (!perms.create && Formio.getUser()) {\n                return _this.userPermissions(null).then(function (anonPerms) {\n                    if (anonPerms.create) {\n                        Formio.setUser(null);\n                        return true;\n                    }\n                    return false;\n                });\n            }\n            return perms.create;\n        });\n    };\n    Formio.prototype.getUrlParts = function (url) {\n        return Formio.getUrlParts(url, this);\n    };\n    Formio.getUrlParts = function (url, formio) {\n        var base = (formio && formio.base) ? formio.base : Formio.baseUrl;\n        var regex = '^(http[s]?:\\\\/\\\\/)';\n        if (base && url.indexOf(base) === 0) {\n            regex += \"(\" + base.replace(/^http[s]?:\\/\\//, '') + \")\";\n        }\n        else {\n            regex += '([^/]+)';\n        }\n        regex += '($|\\\\/.*)';\n        return url.match(new RegExp(regex));\n    };\n    Formio.serialize = function (obj, _interpolate) {\n        var str = [];\n        var interpolate = function (item) {\n            return _interpolate ? _interpolate(item) : item;\n        };\n        for (var p in obj) {\n            if (obj.hasOwnProperty(p)) {\n                str.push(encodeURIComponent(p) + \"=\" + encodeURIComponent(interpolate(obj[p])));\n            }\n        }\n        return str.join('&');\n    };\n    Formio.getRequestArgs = function (formio, type, url, method, data, opts) {\n        method = (method || 'GET').toUpperCase();\n        if (!opts || !lodash_1.isObject(opts)) {\n            opts = {};\n        }\n        var requestArgs = {\n            url: url,\n            method: method,\n            data: data || null,\n            opts: opts\n        };\n        if (type) {\n            requestArgs.type = type;\n        }\n        if (formio) {\n            requestArgs.formio = formio;\n        }\n        return requestArgs;\n    };\n    Formio.makeStaticRequest = function (url, method, data, opts) {\n        var requestArgs = Formio.getRequestArgs(null, '', url, method, data, opts);\n        var request = Plugins_1.default.pluginWait('preRequest', requestArgs)\n            .then(function () { return Plugins_1.default.pluginGet('staticRequest', requestArgs)\n            .then(function (result) {\n            if (lodash_1.isNil(result)) {\n                return Formio.request(requestArgs.url, requestArgs.method, requestArgs.data, requestArgs.opts.header, requestArgs.opts);\n            }\n            return result;\n        }); });\n        return Plugins_1.default.pluginAlter('wrapStaticRequestPromise', request, requestArgs);\n    };\n    /**\n     * Make an API request and wrap that request with the Form.io Request plugin system.  This is very similar to the\n     * {Formio.request} method with a difference being that it will pass the request through the Form.io request plugin.\n     *\n     * @param {Formio} formio - An instance of the Formio class.\n     * @param {string} type - The request resource type. \"submission\", \"form\", etc.\n     * @param {string} url - The URL to request.\n     * @param {string} method - The request method. GET, PUT, POST, DELETE, or PATCH\n     * @param {object} data - The data to pass to the request (for PUT, POST, and PATCH methods)\n     * @param {object} options - An object of options to pass to the request method.\n     * @param {boolean} options.ignoreCache - To ignore internal caching of the request.\n     * @param {object} options.headers - An object of headers to pass along to the request.\n     * @param {boolean} options.noToken - If set to true, this will not include the Form.io x-jwt-token along with the request.\n     * @param {string} options.namespace - The Form.io namespace to prepend to all LocalStorage variables such as formioToken.\n     * @param {boolean} options.getHeaders - Set this if you wish to include the response headers with the return of this method.\n     * @return {Promise<Response>}\n     */\n    Formio.makeRequest = function (formio, type, url, method, data, opts) {\n        if (!formio) {\n            return Formio.makeStaticRequest(url, method, data, opts);\n        }\n        var requestArgs = Formio.getRequestArgs(formio, type, url, method, data, opts);\n        requestArgs.opts = requestArgs.opts || {};\n        requestArgs.opts.formio = formio;\n        //for Formio requests default Accept and Content-type headers\n        if (!requestArgs.opts.headers) {\n            requestArgs.opts.headers = {};\n        }\n        requestArgs.opts.headers = lodash_1.defaults(requestArgs.opts.headers, {\n            'Accept': 'application/json',\n            'Content-type': 'application/json'\n        });\n        var request = Plugins_1.default.pluginWait('preRequest', requestArgs)\n            .then(function () { return Plugins_1.default.pluginGet('request', requestArgs)\n            .then(function (result) {\n            if (lodash_1.isNil(result)) {\n                return Formio.request(requestArgs.url, requestArgs.method, requestArgs.data, requestArgs.opts.header, requestArgs.opts);\n            }\n            return result;\n        }); });\n        return Plugins_1.default.pluginAlter('wrapRequestPromise', request, requestArgs);\n    };\n    /**\n     * Execute an API request to any external system. This is a wrapper around the Web fetch method.\n     *\n     * ```ts\n     * Formio.request('https://examples.form.io').then((form) => {\n     *   console.log(form);\n     * });\n     * ```\n     *\n     * @param {string} url - The URL to request.\n     * @param {string} method - The request method. GET, PUT, POST, DELETE, or PATCH\n     * @param {object} data - The data to pass to the request (for PUT, POST, and PATCH methods)\n     * @param {Headers} header - An object of headers to pass to the request.\n     * @param {object} options - An object of options to pass to the request method.\n     * @param {boolean} options.ignoreCache - To ignore internal caching of the request.\n     * @param {object} options.headers - An object of headers to pass along to the request.\n     * @param {boolean} options.noToken - If set to true, this will not include the Form.io x-jwt-token along with the request.\n     * @param {string} options.namespace - The Form.io namespace to prepend to all LocalStorage variables such as formioToken.\n     * @param {boolean} options.getHeaders - Set this if you wish to include the response headers with the return of this method.\n     * @return {Promise<Response>|*}\n     */\n    Formio.request = function (url, method, data, header, opts) {\n        if (!url) {\n            return Promise.reject('No url provided');\n        }\n        method = (method || 'GET').toUpperCase();\n        // For reverse compatibility, if they provided the ignoreCache parameter,\n        // then change it back to the options format where that is a parameter.\n        if (lodash_1.isBoolean(opts)) {\n            opts = { ignoreCache: opts };\n        }\n        if (!opts || !lodash_1.isObject(opts)) {\n            opts = {};\n        }\n        // Generate a cachekey.\n        var cacheKey = btoa(encodeURI(url));\n        // Get the cached promise to save multiple loads.\n        if (!opts.ignoreCache && method === 'GET' && Formio.cache.hasOwnProperty(cacheKey)) {\n            return Promise.resolve(Formio.cloneResponse(Formio.cache[cacheKey]));\n        }\n        // Set up and fetch request\n        var headers = header || new Headers(opts.headers || {\n            'Accept': 'application/json',\n            'Content-type': 'application/json'\n        });\n        var token = Formio.getToken(opts);\n        if (token && !opts.noToken) {\n            headers.append('x-jwt-token', token);\n        }\n        // The fetch-ponyfill can't handle a proper Headers class anymore. Change it back to an object.\n        var headerObj = {};\n        headers.forEach(function (value, name) {\n            headerObj[name] = value;\n        });\n        var options = {\n            method: method,\n            headers: headerObj,\n            mode: 'cors'\n        };\n        if (data) {\n            options.body = JSON.stringify(data);\n        }\n        // Allow plugins to alter the options.\n        options = Plugins_1.default.pluginAlter('requestOptions', options, url);\n        if (options.namespace || Formio.namespace) {\n            opts.namespace = options.namespace || Formio.namespace;\n        }\n        var requestToken = options.headers['x-jwt-token'];\n        var result = Plugins_1.default.pluginAlter('wrapFetchRequestPromise', Formio.fetch(url, options), { url: url, method: method, data: data, opts: opts }).then(function (response) {\n            // Allow plugins to respond.\n            response = Plugins_1.default.pluginAlter('requestResponse', response, Formio, data);\n            if (!response.ok) {\n                if (response.status === 440) {\n                    Formio.setToken(null, opts);\n                    Formio.events.emit('formio.sessionExpired', response.body);\n                }\n                else if (response.status === 401) {\n                    Formio.events.emit('formio.unauthorized', response.body);\n                }\n                else if (response.status === 416) {\n                    Formio.events.emit('formio.rangeIsNotSatisfiable', response.body);\n                }\n                // Parse and return the error as a rejected promise to reject this promise\n                return (response.headers.get('content-type').includes('application/json')\n                    ? response.json()\n                    : response.text())\n                    .then(function (error) {\n                    return Promise.reject(error);\n                });\n            }\n            // Handle fetch results\n            var token = response.headers.get('x-jwt-token');\n            // In some strange cases, the fetch library will return an x-jwt-token without sending\n            // one to the server. This has even been debugged on the server to verify that no token\n            // was introduced with the request, but the response contains a token. This is an Invalid\n            // case where we do not send an x-jwt-token and get one in return for any GET request.\n            var tokenIntroduced = false;\n            if ((method === 'GET') &&\n                !requestToken &&\n                token &&\n                !opts.external &&\n                !url.includes('token=') &&\n                !url.includes('x-jwt-token=')) {\n                console.warn('Token was introduced in request.');\n                tokenIntroduced = true;\n            }\n            if (response.status >= 200 &&\n                response.status < 300 &&\n                token &&\n                token !== '' &&\n                !tokenIntroduced) {\n                Formio.setToken(token, opts);\n            }\n            // 204 is no content. Don't try to .json() it.\n            if (response.status === 204) {\n                return {};\n            }\n            var getResult = response.headers.get('content-type').includes('application/json')\n                ? response.json()\n                : response.text();\n            return getResult.then(function (result) {\n                // Add some content-range metadata to the result here\n                var range = response.headers.get('content-range');\n                if (range && lodash_1.isObject(result)) {\n                    range = range.split('/');\n                    if (range[0] !== '*') {\n                        var skipLimit = range[0].split('-');\n                        result.skip = Number(skipLimit[0]);\n                        result.limit = skipLimit[1] - skipLimit[0] + 1;\n                    }\n                    result.serverCount = range[1] === '*' ? range[1] : Number(range[1]);\n                }\n                if (!opts.getHeaders) {\n                    return result;\n                }\n                var headers = {};\n                response.headers.forEach(function (item, key) {\n                    headers[key] = item;\n                });\n                // Return the result with the headers.\n                return {\n                    result: result,\n                    headers: headers,\n                };\n            });\n        })\n            .then(function (result) {\n            if (opts.getHeaders) {\n                return result;\n            }\n            // Cache the response.\n            if (method === 'GET') {\n                Formio.cache[cacheKey] = result;\n            }\n            return Formio.cloneResponse(result);\n        })\n            .catch(function (err) {\n            if (err === 'Bad Token') {\n                Formio.setToken(null, opts);\n                Formio.events.emit('formio.badToken', err);\n            }\n            if (err.message) {\n                err.message = \"Could not connect to API server (\" + err.message + \")\";\n                err.networkError = true;\n            }\n            if (method === 'GET') {\n                delete Formio.cache[cacheKey];\n            }\n            return Promise.reject(err);\n        });\n        return result;\n    };\n    Object.defineProperty(Formio, \"token\", {\n        // Needed to maintain reverse compatability...\n        get: function () {\n            return Formio.tokens.formioToken || '';\n        },\n        // Needed to maintain reverse compatability...\n        set: function (token) {\n            Formio.tokens.formioToken = token || '';\n        },\n        enumerable: false,\n        configurable: true\n    });\n    /**\n     * Sets the JWT in storage to be used within an application.\n     *\n     * @param {string} token - The JWT token to set.\n     * @param {object} options - Options as follows\n     * @param {string} options.namespace - The namespace to save the token within. i.e. \"formio\"\n     * @param {Formio} options.formio - The Formio instance.\n     * @return {Promise<object>|void}\n     */\n    Formio.setToken = function (token, opts) {\n        if (token === void 0) { token = ''; }\n        if (opts === void 0) { opts = {}; }\n        token = token || '';\n        opts = (typeof opts === 'string') ? { namespace: opts } : opts || {};\n        var tokenName = (opts.namespace || Formio.namespace || 'formio') + \"Token\";\n        if (!Formio.tokens) {\n            Formio.tokens = {};\n        }\n        if (!token) {\n            if (!opts.fromUser) {\n                opts.fromToken = true;\n                Formio.setUser(null, opts);\n            }\n            // iOS in private browse mode will throw an error but we can't detect ahead of time that we are in private mode.\n            try {\n                localStorage.removeItem(tokenName);\n            }\n            catch (err) {\n                console.log(\"Error removing token: \" + err.message);\n            }\n            Formio.tokens[tokenName] = token;\n            return Promise.resolve(null);\n        }\n        if (Formio.tokens[tokenName] !== token) {\n            Formio.tokens[tokenName] = token;\n            // iOS in private browse mode will throw an error but we can't detect ahead of time that we are in private mode.\n            try {\n                localStorage.setItem(tokenName, token);\n            }\n            catch (err) {\n                console.log(\"Error setting token: \" + err.message);\n            }\n        }\n        // Return or updates the current user\n        return Formio.currentUser(opts.formio, opts);\n    };\n    /**\n     * Returns the token set within the application for the user.\n     *\n     * @param {object} options - The options as follows.\n     * @param {string} options.namespace - The namespace of the token you wish to fetch.\n     * @param {boolean} options.decode - If you would like the token returned as decoded JSON.\n     * @return {*}\n     */\n    Formio.getToken = function (options) {\n        options = (typeof options === 'string') ? { namespace: options } : options || {};\n        var tokenName = (options.namespace || Formio.namespace || 'formio') + \"Token\";\n        var decodedTokenName = options.decode ? tokenName + \"Decoded\" : tokenName;\n        if (!Formio.tokens) {\n            Formio.tokens = {};\n        }\n        if (Formio.tokens[decodedTokenName]) {\n            return Formio.tokens[decodedTokenName];\n        }\n        try {\n            Formio.tokens[tokenName] = localStorage.getItem(tokenName) || '';\n            return Formio.tokens[tokenName];\n        }\n        catch (e) {\n            console.log(\"Error retrieving token: \" + e.message);\n            return '';\n        }\n    };\n    /**\n     * Sets the current user within the application cache.\n     *\n     * @param {object} user - JSON object of the user you wish to set.\n     * @param {object} options - Options as follows\n     * @param {string} options.namespace - The namespace of the tokens\n     */\n    Formio.setUser = function (user, opts) {\n        if (opts === void 0) { opts = {}; }\n        var userName = (opts.namespace || Formio.namespace || 'formio') + \"User\";\n        if (!user) {\n            if (!opts.fromToken) {\n                opts.fromUser = true;\n                Formio.setToken(null, opts);\n            }\n            // Emit an event on the cleared user.\n            Formio.events.emit('formio.user', null);\n            // iOS in private browse mode will throw an error but we can't detect ahead of time that we are in private mode.\n            try {\n                return localStorage.removeItem(userName);\n            }\n            catch (err) {\n                console.log(\"Error removing token: \" + err.message);\n                return;\n            }\n        }\n        // iOS in private browse mode will throw an error but we can't detect ahead of time that we are in private mode.\n        try {\n            localStorage.setItem(userName, JSON.stringify(user));\n        }\n        catch (err) {\n            console.log(\"Error setting token: \" + err.message);\n        }\n        // Emit an event on the authenticated user.\n        Formio.events.emit('formio.user', user);\n    };\n    /**\n     * Returns the user JSON.\n     *\n     * @param {object} options - Options as follows\n     * @param {string} namespace - The namespace of the tokens stored within this application.\n     * @return {object} - The user object.\n     */\n    Formio.getUser = function (options) {\n        options = options || {};\n        var userName = (options.namespace || Formio.namespace || 'formio') + \"User\";\n        try {\n            return JSON.parse((localStorage.getItem(userName) || null));\n        }\n        catch (e) {\n            console.log(\"Error getting user: \" + e.message);\n            return {};\n        }\n    };\n    /**\n     * Sets the BaseURL for the application.\n     *\n     * @description Every application developed using the JavaScript SDK must set both the {@link Formio.setBaseUrl} and\n     * {@link Formio.setProjectUrl} methods. These two functions ensure that every URL passed into the constructor of this\n     * class can determine the \"project\" context for which the application is running.\n     *\n     * Any Open Source server applications will set both the {@link Formio.setBaseUrl} and {@link Formio.setProjectUrl}\n     * values will be the same value.\n     *\n     * ```ts\n     * Formio.setBaseUrl('https://yourwebsite.com/forms');\n     * Formio.setProjectUrl('https://yourwebsite.com/forms/project');\n     *\n     * // Now the Formio constructor will know what is the \"project\" and what is the form alias name. Without setBaseUrl\n     * // and setProjectUrl, this would throw an error.\n     *\n     * const formio = new Formio('https://yourwebsite.com/forms/project/user');\n     * formio.loadForm().then((form) => {\n     *   console.log(form);\n     * });\n     * ```\n     *\n     * @param {string} url - The URL of the Base API url.\n     */\n    Formio.setBaseUrl = function (url) {\n        Formio.baseUrl = url;\n        if (!Formio.projectUrlSet) {\n            Formio.projectUrl = url;\n        }\n    };\n    /**\n     * Returns the current base url described at {@link Formio.setBaseUrl}\n     *\n     * @return {string} - The base url of the application.\n     */\n    Formio.getBaseUrl = function () {\n        return Formio.baseUrl;\n    };\n    Formio.setApiUrl = function (url) {\n        return Formio.setBaseUrl(url);\n    };\n    Formio.getApiUrl = function () {\n        return Formio.getBaseUrl();\n    };\n    Formio.setAppUrl = function (url) {\n        console.warn('Formio.setAppUrl() is deprecated. Use Formio.setProjectUrl instead.');\n        Formio.projectUrl = url;\n        Formio.projectUrlSet = true;\n    };\n    /**\n     * Sets the Project Url for the application. This is an important method that needs to be set for all applications. It\n     * is documented @ {@link Formio.setBaseUrl}.\n     *\n     * @param {string} url - The project api url.\n     */\n    Formio.setProjectUrl = function (url) {\n        Formio.projectUrl = url;\n        Formio.projectUrlSet = true;\n    };\n    /**\n     * The Auth URL can be set to customize the authentication requests made from an application. By default, this is\n     * just the same value as {@link Formio.projectUrl}\n     *\n     * @param {string} url - The authentication url\n     */\n    Formio.setAuthUrl = function (url) {\n        Formio.authUrl = url;\n    };\n    Formio.getAppUrl = function () {\n        console.warn('Formio.getAppUrl() is deprecated. Use Formio.getProjectUrl instead.');\n        return Formio.projectUrl;\n    };\n    /**\n     * Returns the Project url described at {@link Formio.setProjectUrl}\n     *\n     * @return {string|string} - The Project Url.\n     */\n    Formio.getProjectUrl = function () {\n        return Formio.projectUrl;\n    };\n    /**\n     * Clears the runtime internal API cache.\n     *\n     * @description By default, the Formio class will cache all API requests in memory so that any subsequent requests\n     * using GET method will return the cached results as long as the API URl is the same as what was cached previously.\n     * This cache can be cleared using this method as follows.\n     *\n     * ```ts\n     * Formio.clearCache();\n     * ```\n     *\n     * Or, if you just wish to clear a single request, then the {@link Formio.request#options.ignoreCache} option can be\n     * provided when making an API request as follows.\n     *\n     * ```ts\n     * Formio.loadForm({}, {\n     *   ignoreCache: true\n     * }).then((form) => {\n     *   console.log(form);\n     * });\n     * ```\n     *\n     * Both of the following will ensure that a new request is made to the API server and that the results will not be\n     * from the cached result.\n     */\n    Formio.clearCache = function () {\n        Formio.cache = {};\n    };\n    /**\n     * Return the access information about a Project, such as the Role ID's for that project, and if the server is\n     * configured to do so, the Form and Resource access configurations that the authenticated user has access to.\n     *\n     * @description This is useful for an application to determine the UI for a specific user to identify which forms they have\n     * access to submit or read.\n     *\n     * @param {Formio} formio - The Formio instance.\n     * @return {Promise<Response>}\n     */\n    Formio.accessInfo = function (formio) {\n        var projectUrl = formio ? formio.projectUrl : Formio.projectUrl;\n        return Formio.makeRequest(formio, 'accessInfo', projectUrl + \"/access\");\n    };\n    /**\n     * Returns an array of roles for the project, which includes the ID's and names of those roles.\n     *\n     * @param {Formio} formio - The Formio instance.\n     * @return {Promise<Response>}\n     */\n    Formio.projectRoles = function (formio) {\n        var projectUrl = formio ? formio.projectUrl : Formio.projectUrl;\n        return Formio.makeRequest(formio, 'projectRoles', projectUrl + \"/role\");\n    };\n    /**\n     * Return the currentUser object. This will fetch the user from the server and respond with the Submission JSON\n     * of that user object.\n     *\n     * @param {Formio} formio - The Formio instance\n     * @param {object} options - The options passed to {@link Formio.getUser}\n     * @return {Promise<R>|*}\n     */\n    Formio.currentUser = function (formio, options) {\n        if (options === void 0) { options = {}; }\n        var authUrl = Formio.authUrl;\n        if (!authUrl) {\n            authUrl = formio ? formio.projectUrl : (Formio.projectUrl || Formio.baseUrl);\n        }\n        authUrl += '/current';\n        var user = Formio.getUser(options);\n        if (user) {\n            return Plugins_1.default.pluginAlter('wrapStaticRequestPromise', Promise.resolve(user), {\n                url: authUrl,\n                method: 'GET',\n                options: options\n            });\n        }\n        var token = Formio.getToken(options);\n        if ((!options || !options.external) && !token) {\n            return Plugins_1.default.pluginAlter('wrapStaticRequestPromise', Promise.resolve(null), {\n                url: authUrl,\n                method: 'GET',\n                options: options\n            });\n        }\n        return Formio.makeRequest(formio, 'currentUser', authUrl, 'GET', null, options)\n            .then(function (response) {\n            Formio.setUser(response, options);\n            return response;\n        });\n    };\n    /**\n     * Performs a logout of the Form.io application. This will reset all cache, as well as make a request to the logout\n     * endpoint of the Form.io api platform.\n     *\n     * @param {Formio} formio - A Formio instance.\n     * @param {object} options - Options passed to both {@link Formio.setToken} as well as {@link Formio.setUser}\n     * @return {Promise<Response>}\n     */\n    Formio.logout = function (formio, options) {\n        if (options === void 0) { options = {}; }\n        options.formio = formio;\n        var projectUrl = Formio.authUrl ? Formio.authUrl : (formio ? formio.projectUrl : Formio.baseUrl);\n        return Formio.makeRequest(formio, 'logout', projectUrl + \"/logout\")\n            .then(function (result) {\n            Formio.setToken(null, options);\n            Formio.setUser(null, options);\n            Formio.clearCache();\n            return result;\n        })\n            .catch(function (err) {\n            Formio.setToken(null, options);\n            Formio.setUser(null, options);\n            Formio.clearCache();\n            throw err;\n        });\n    };\n    /**\n     * Returns the query passed to a page in JSON object format.\n     *\n     * @description For example, lets say you visit your application using\n     * the url as follows.\n     *\n     * ```\n     *   https://yourapplication.com/?token=23423423423&username=Joe\n     * ```\n     *\n     * The following code will provide your application with the following.\n     *\n     * ```ts\n     * const query Formio.pageQuery();\n     * console.log(query.token); // Will print 23423423423\n     * console.log(query.username); // Will print Joe\n     * ```\n     *\n     * @return {{}} - A JSON object representation of the query that was passed to the URL of an application.\n     */\n    Formio.pageQuery = function () {\n        var pageQuery = {};\n        pageQuery.paths = [];\n        var hashes = location.hash.substr(1).replace(/\\?/g, '&').split('&');\n        var parts = [];\n        location.search.substr(1).split('&').forEach(function (item) {\n            parts = item.split('=');\n            if (parts.length > 1) {\n                pageQuery[parts[0]] = parts[1] && decodeURIComponent(parts[1]);\n            }\n        });\n        hashes.forEach(function (item) {\n            parts = item.split('=');\n            if (parts.length > 1) {\n                pageQuery[parts[0]] = parts[1] && decodeURIComponent(parts[1]);\n            }\n            else if (item.indexOf('/') === 0) {\n                pageQuery.paths = item.substr(1).split('/');\n            }\n        });\n        return pageQuery;\n    };\n    /**\n     * Much like {@link Formio.currentUser}, but instead automatically injects the Bearer tokens into the headers to\n     * perform a Token swap of the OAuth token which will then return the JWT token for that user.\n     *\n     * @param {Formio} formio - The Formio instance\n     * @param {string} token - An OAuth Bearer token to use for a token swap between the OAuth provider and Form.io\n     * @return {Promise<R>|*}\n     */\n    Formio.oAuthCurrentUser = function (formio, token) {\n        return Formio.currentUser(formio, {\n            external: true,\n            headers: {\n                Authorization: \"Bearer \" + token\n            }\n        });\n    };\n    /**\n     * Perform a SAML initialization.\n     *\n     * @description Typically, you would use the {@link Formio.ssoInit} method to perform this function\n     * since this method is an alias for the following.\n     *\n     * ```ts\n     * Formio.samlInit();\n     * Formio.ssoInit('saml');  // This is the exact same thing as calling Formio.samlInit\n     * ```\n     *\n     * This method will return false if the process is just starting. The code below is a typical block of code that is\n     * used to automatically trigger the SAML authentication process within your application using a Button component.\n     *\n     * ```ts\n     * if (Formio.pageQuery().saml) {\n     *   const sso = Formio.samlInit();\n     *   if (sso) {\n     *     sso.then((user) => {\n     *       // The SSO user is now loaded!\n     *       console.log(user);\n     *     });\n     *   }\n     * }\n     * ```\n     *\n     * You can then place the following code withiin the \"Custom\" action of a Button component on your form.\n     *\n     * ```ts\n     * Formio.samlInit();\n     * ```\n     *\n     * Now when you click on this button, it will start the handshake process with SAML, and once it returns, will pass\n     * a \"saml\" query parameter back to your application which will execute the code to load the current user from SAML.\n     *\n     * @param {object} options - Options to pass to the SAML initialization process.\n     * @param {string} options.relay - The URL that will be used as the authentication \"relay\" that occurs during a SAML handshake process.\n     * @return {boolean|Promise<Object>|void}\n     */\n    Formio.samlInit = function (options) {\n        if (options === void 0) { options = {}; }\n        var query = Formio.pageQuery();\n        if (query.saml) {\n            Formio.setUser(null);\n            var retVal = Formio.setToken(query.saml);\n            var uri = window.location.toString();\n            uri = uri.substring(0, uri.indexOf('?'));\n            if (window.location.hash) {\n                uri += window.location.hash;\n            }\n            window.history.replaceState({}, document.title, uri);\n            return retVal;\n        }\n        // Set the relay if not provided.\n        if (!options.relay) {\n            options.relay = window.location.href;\n        }\n        // go to the saml sso endpoint for this project.\n        var authUrl = Formio.authUrl || Formio.projectUrl;\n        window.location.href = authUrl + \"/saml/sso?relay=\" + encodeURI(options.relay);\n        return false;\n    };\n    /**\n     * Perform an Okta Authentication process using the {@link https://developer.okta.com/code/javascript/okta_auth_sdk|Okta SDK}.\n     *\n     * @description This method does require that you first include the Okta JavaScript SDK within your application as follows.\n     *\n     * First you need to include the Okta Authentication script.\n     *\n     * ```html\n     * <script src=\"https://ok1static.oktacdn.com/assets/js/sdk/okta-auth-js/2.0.1/okta-auth-js.min.js\" type=\"text/javascript\"></script>\n     * ```\n     *\n     * Then you can call this method as follows.\n     *\n     * ```ts\n     * Formio.oktaInit();\n     * ```\n     *\n     * @param {object} options - Options that are passed directly to the {@link https://github.com/okta/okta-auth-js#configuration-reference|Okta SDK constructor}\n     * @param {constructor} options.OktaAuth - If the OktaAuth constructor is not provided global to the application, it can be provided to this method using this property.\n     * @param {Formio} options.formio - The Formio instance.\n     * @param {Array<string>} options.scopes - Scopes that are passed to the {@link https://github.com/okta/okta-auth-js#tokengetwithredirectoptions|getWithRedirect} method from the Okta SDK.\n     * @return {Promise<Object>}\n     */\n    Formio.oktaInit = function (options) {\n        if (options === void 0) { options = {}; }\n        if (typeof OktaAuth !== undefined) {\n            options.OktaAuth = OktaAuth;\n        }\n        if (typeof options.OktaAuth === undefined) {\n            var errorMessage = 'Cannot find OktaAuth. Please include the Okta JavaScript SDK within your application. See https://developer.okta.com/code/javascript/okta_auth_sdk for an example.';\n            console.warn(errorMessage);\n            return Promise.reject(errorMessage);\n        }\n        return new Promise(function (resolve, reject) {\n            var Okta = options.OktaAuth;\n            delete options.OktaAuth;\n            var authClient = new Okta(options);\n            authClient.tokenManager.get('accessToken')\n                .then(function (accessToken) {\n                if (accessToken) {\n                    resolve(Formio.oAuthCurrentUser(options.formio, accessToken.accessToken));\n                }\n                else if (location.hash) {\n                    authClient.token.parseFromUrl()\n                        .then(function (token) {\n                        authClient.tokenManager.add('accessToken', token);\n                        resolve(Formio.oAuthCurrentUser(options.formio, token.accessToken));\n                    })\n                        .catch(function (err) {\n                        console.warn(err);\n                        reject(err);\n                    });\n                }\n                else {\n                    authClient.token.getWithRedirect({\n                        responseType: 'token',\n                        scopes: options.scopes\n                    });\n                    resolve(false);\n                }\n            })\n                .catch(function (error) {\n                reject(error);\n            });\n        });\n    };\n    /**\n     * A common static method to trigger any SSO processes. This method is really just an alias for other static methods.\n     *\n     * @param {('saml'|'okta')} type - The type of SSO to trigger. 'saml' is an alias for {@link Formio.samlInit}, and 'okta' is an alias for {@link Formio.oktaInit}.\n     * @param {object} options - Options to pass to the specific sso methods\n     * @return {*|Promise<Object>|boolean|void}\n     */\n    Formio.ssoInit = function (type, options) {\n        if (options === void 0) { options = {}; }\n        switch (type) {\n            case 'saml':\n                return Formio.samlInit(options);\n            case 'okta':\n                return Formio.oktaInit(options);\n            default:\n                console.warn('Unknown SSO type');\n                return Promise.reject('Unknown SSO type');\n        }\n    };\n    /**\n     * Lazy load a remote library dependency.\n     *\n     * @description This is useful for components that wish to lazy load a required library\n     * by adding that library to the <scripts> section of the HTML webpage, and then provide a promise that will resolve\n     * when the library becomes available for use.\n     *\n     * @example Load Google Maps API.\n     * ```ts\n     * Formio.requireLibrary('googleMaps', 'google.maps.Map', 'https://maps.googleapis.com/maps/api/js?key=YOUR_API_KEY&callback=initMap', true).then(() => {\n     *   // Once the promise resolves, the following can now be used within your application.\n     *   const map = new google.maps.Map(document.getElementById(\"map\"), {...});\n     * });\n     * ```\n     *\n     * @param {string} name - The internal name to give to the library you are loading. This is useful for caching the library for later use.\n     * @param {string} property - The name of the global property that will be added to the global namespace once the library has been loaded. This is used to check to see if the property exists before resolving the promise that the library is ready for use.\n     * @param {string} src - The URL of the library to lazy load.\n     * @param {boolean} polling - Determines if polling should be used to determine if they library is ready to use. If set to false, then it will rely on a global callback called ${name}Callback where \"name\" is the first property passed to this method. When this is called, that will indicate when the library is ready. In most cases, you will want to pass true to this parameter to initiate a polling method to check for the library availability in the global context.\n     * @return {Promise<object>} - A promise that will resolve when the plugin is ready to be used.\n     */\n    Formio.requireLibrary = function (name, property, src, polling) {\n        if (polling === void 0) { polling = false; }\n        if (!Formio.libraries.hasOwnProperty(name)) {\n            Formio.libraries[name] = {};\n            Formio.libraries[name].ready = new Promise(function (resolve, reject) {\n                Formio.libraries[name].resolve = resolve;\n                Formio.libraries[name].reject = reject;\n            });\n            var callbackName = name + \"Callback\";\n            if (!polling && !window[callbackName]) {\n                window[callbackName] = function () { return Formio.libraries[name].resolve(); };\n            }\n            // See if the plugin already exists.\n            var plugin = lodash_1.get(window, property);\n            if (plugin) {\n                Formio.libraries[name].resolve(plugin);\n            }\n            else {\n                src = Array.isArray(src) ? src : [src];\n                src.forEach(function (lib) {\n                    var attrs = {};\n                    var elementType = '';\n                    if (typeof lib === 'string') {\n                        lib = {\n                            type: 'script',\n                            src: lib,\n                        };\n                    }\n                    switch (lib.type) {\n                        case 'script':\n                            elementType = 'script';\n                            attrs = {\n                                src: lib.src,\n                                type: 'text/javascript',\n                                defer: true,\n                                async: true,\n                                referrerpolicy: 'origin',\n                            };\n                            break;\n                        case 'styles':\n                            elementType = 'link';\n                            attrs = {\n                                href: lib.src,\n                                rel: 'stylesheet',\n                            };\n                            break;\n                    }\n                    // Add the script to the top of the page.\n                    var element = document.createElement(elementType);\n                    if (element.setAttribute) {\n                        for (var attr in attrs) {\n                            element.setAttribute(attr, attrs[attr]);\n                        }\n                    }\n                    var head = document.head;\n                    if (head) {\n                        head.appendChild(element);\n                    }\n                });\n                // if no callback is provided, then check periodically for the script.\n                if (polling) {\n                    var interval_1 = setInterval(function () {\n                        var plugin = lodash_1.get(window, property);\n                        if (plugin) {\n                            clearInterval(interval_1);\n                            Formio.libraries[name].resolve(plugin);\n                        }\n                    }, 200);\n                }\n            }\n        }\n        return Formio.libraries[name].ready;\n    };\n    /**\n     * Determines if a lazy loaded library is ready to be used.\n     *\n     * @description Example: Let's assume that the example provided at {@link Formio.requireLibrary} was used elsewhere in your application.\n     * You could now use the following within a separate place that will also resolve once the library is ready to be used.\n     *\n     * ```js\n     * Formio.libraryReady('googleMaps').then(() => {\n     *   // Once the promise resolves, the following can now be used within your application.\n     *   const map = new google.maps.Map(document.getElementById(\"map\"), {...});\n     * });\n     * ```\n     *\n     * @param {string} name - The name of the library to check.\n     * @return {Promise<object>} - A promise that will resolve when the library is ready to be used.\n     */\n    Formio.libraryReady = function (name) {\n        if (Formio.libraries.hasOwnProperty(name) &&\n            Formio.libraries[name].ready) {\n            return Formio.libraries[name].ready;\n        }\n        return Promise.reject(name + \" library was not required.\");\n    };\n    /**\n     * Clones the response from the API so that it cannot be mutated.\n     *\n     * @param response\n     */\n    Formio.cloneResponse = function (response) {\n        var copy = lodash_1.fastCloneDeep(response);\n        if (Array.isArray(response)) {\n            copy.skip = response.skip;\n            copy.limit = response.limit;\n            copy.serverCount = response.serverCount;\n        }\n        return copy;\n    };\n    /**\n     * Sets the project path type.\n     *\n     * @param type\n     */\n    Formio.setPathType = function (type) {\n        if (typeof type === 'string') {\n            Formio.pathType = type;\n        }\n    };\n    /**\n     * Gets the project path type.\n     */\n    Formio.getPathType = function () {\n        return Formio.pathType;\n    };\n    /**\n     * The base API url of the Form.io Platform. Example: https://api.form.io\n     */\n    Formio.baseUrl = 'https://api.form.io';\n    /**\n     * The project API url of the Form.io Project. Example: https://examples.form.io\n     */\n    Formio.projectUrl = '';\n    /**\n     * The project url to use for Authentication.\n     */\n    Formio.authUrl = '';\n    /**\n     * Set to true if the project url has been established with ```Formio.setProjectUrl()```\n     */\n    Formio.projectUrlSet = false;\n    /**\n     * The Form.io API Cache. This ensures that requests to the same API endpoint are cached.\n     */\n    Formio.cache = {};\n    /**\n     * The namespace used to save the Form.io Token's and variables within an application.\n     */\n    Formio.namespace = '';\n    /**\n     * Handles events fired within this SDK library.\n     */\n    Formio.events = new eventemitter3_1.default();\n    /**\n     * Stores all of the libraries lazy loaded with ```Formio.requireLibrary``` method.\n     */\n    Formio.libraries = {};\n    /**\n     * A direct interface to the Form.io fetch polyfill.\n     */\n    Formio.fetch = fetch;\n    /**\n     * A direct interface to the Form.io fetch Headers polyfill.\n     */\n    Formio.Headers = Headers;\n    /**\n     * All of the auth tokens for this session.\n     */\n    Formio.tokens = {};\n    /**\n     * The version of this library.\n     */\n    Formio.version = '---VERSION---';\n    // Add Plugin methods.\n    Formio.plugins = Plugins_1.default.plugins;\n    Formio.deregisterPlugin = Plugins_1.default.deregisterPlugin;\n    Formio.registerPlugin = Plugins_1.default.registerPlugin;\n    Formio.getPlugin = Plugins_1.default.getPlugin;\n    Formio.pluginWait = Plugins_1.default.pluginWait;\n    Formio.pluginGet = Plugins_1.default.pluginGet;\n    Formio.pluginAlter = Plugins_1.default.pluginAlter;\n    return Formio;\n}());\nexports.Formio = Formio;\n// Adds Formio to the Plugins Interface.\nPlugins_1.default.Formio = Formio;\n\n\n//# sourceURL=webpack://Formio/./lib/Formio.js?");

/***/ }),

/***/ "./lib/Plugins.js":
/*!************************!*\
  !*** ./lib/Plugins.js ***!
  \************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval("\nvar __spreadArray = (this && this.__spreadArray) || function (to, from) {\n    for (var i = 0, il = from.length, j = to.length; i < il; i++, j++)\n        to[j] = from[i];\n    return to;\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nvar lodash_1 = __webpack_require__(/*! @formio/lodash */ \"./node_modules/@formio/lodash/lib/index.js\");\n/**\n * The Form.io Plugins allow external systems to \"hook\" into the default behaviors of the JavaScript SDK.\n */\nvar Plugins = /** @class */ (function () {\n    function Plugins() {\n    }\n    /**\n     * Returns the plugin identity.\n     *\n     * @param value\n     */\n    Plugins.identity = function (value) {\n        return value;\n    };\n    /**\n     * De-registers a plugin.\n     * @param plugin The plugin you wish to deregister.\n     */\n    Plugins.deregisterPlugin = function (plugin) {\n        var beforeLength = Plugins.plugins.length;\n        Plugins.plugins = Plugins.plugins.filter(function (p) {\n            if (p !== plugin && p.__name !== plugin) {\n                return true;\n            }\n            (p.deregister || lodash_1.noop).call(plugin, Plugins.Formio);\n            return false;\n        });\n        return beforeLength !== Plugins.plugins.length;\n    };\n    /**\n     * Registers a new plugin.\n     *\n     * @param plugin The Plugin object.\n     * @param name The name of the plugin you wish to register.\n     */\n    Plugins.registerPlugin = function (plugin, name) {\n        Plugins.plugins.push(plugin);\n        Plugins.plugins.sort(function (a, b) { return (b.priority || 0) - (a.priority || 0); });\n        plugin.__name = name;\n        (plugin.init || lodash_1.noop).call(plugin, Plugins.Formio);\n    };\n    /**\n     * Returns a plugin provided the name of the plugin.\n     * @param name The name of the plugin you would like to get.\n     */\n    Plugins.getPlugin = function (name) {\n        for (var _i = 0, _a = Plugins.plugins; _i < _a.length; _i++) {\n            var plugin = _a[_i];\n            if (plugin.__name === name) {\n                return plugin;\n            }\n        }\n        return null;\n    };\n    /**\n     * Wait for a plugin function to complete.\n     * @param pluginFn - A function within the plugin.\n     * @param args\n     */\n    Plugins.pluginWait = function (pluginFn) {\n        var args = [];\n        for (var _i = 1; _i < arguments.length; _i++) {\n            args[_i - 1] = arguments[_i];\n        }\n        return Promise.all(Plugins.plugins.map(function (plugin) {\n            var _a;\n            return (_a = (plugin[pluginFn] || lodash_1.noop)).call.apply(_a, __spreadArray([plugin], args));\n        }));\n    };\n    /**\n     * Gets a value from a Plugin\n     * @param pluginFn\n     * @param args\n     */\n    Plugins.pluginGet = function (pluginFn) {\n        var args = [];\n        for (var _i = 1; _i < arguments.length; _i++) {\n            args[_i - 1] = arguments[_i];\n        }\n        var callPlugin = function (index) {\n            var _a;\n            var plugin = Plugins.plugins[index];\n            if (!plugin) {\n                return Promise.resolve(null);\n            }\n            return Promise.resolve((_a = (plugin[pluginFn] || lodash_1.noop)).call.apply(_a, __spreadArray([plugin], args)))\n                .then(function (result) {\n                if (!lodash_1.isNil(result)) {\n                    return result;\n                }\n                return callPlugin(index + 1);\n            });\n        };\n        return callPlugin(0);\n    };\n    /**\n     * Allows a Plugin to alter the behavior of the JavaScript library.\n     *\n     * @param pluginFn\n     * @param value\n     * @param args\n     */\n    Plugins.pluginAlter = function (pluginFn, value) {\n        var args = [];\n        for (var _i = 2; _i < arguments.length; _i++) {\n            args[_i - 2] = arguments[_i];\n        }\n        return Plugins.plugins.reduce(function (value, plugin) {\n            return (plugin[pluginFn] || Plugins.identity).apply(void 0, __spreadArray([value], args));\n        }, value);\n    };\n    /**\n     * An array of Form.io Plugins.\n     */\n    Plugins.plugins = [];\n    return Plugins;\n}());\nexports.default = Plugins;\n\n\n//# sourceURL=webpack://Formio/./lib/Plugins.js?");

/***/ }),

/***/ "./lib/providers/Providers.js":
/*!************************************!*\
  !*** ./lib/providers/Providers.js ***!
  \************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval("\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nvar storage_1 = __importDefault(__webpack_require__(/*! ./storage */ \"./lib/providers/storage/index.js\"));\nvar lodash_1 = __webpack_require__(/*! @formio/lodash */ \"./node_modules/@formio/lodash/lib/index.js\");\nvar Providers = /** @class */ (function () {\n    function Providers() {\n    }\n    Providers.addProvider = function (type, name, provider) {\n        Providers.providers[type] = Providers.providers[type] || {};\n        Providers.providers[type][name] = provider;\n    };\n    Providers.addProviders = function (type, providers) {\n        Providers.providers[type] = lodash_1.merge(Providers.providers[type], providers);\n    };\n    Providers.getProvider = function (type, name) {\n        if (Providers.providers[type] && Providers.providers[type][name]) {\n            return Providers.providers[type][name];\n        }\n    };\n    Providers.getProviders = function (type) {\n        if (Providers.providers[type]) {\n            return Providers.providers[type];\n        }\n    };\n    Providers.providers = {\n        storage: storage_1.default,\n    };\n    return Providers;\n}());\nexports.default = Providers;\n\n\n//# sourceURL=webpack://Formio/./lib/providers/Providers.js?");

/***/ }),

/***/ "./lib/providers/index.js":
/*!********************************!*\
  !*** ./lib/providers/index.js ***!
  \********************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval("\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nvar Providers_1 = __importDefault(__webpack_require__(/*! ./Providers */ \"./lib/providers/Providers.js\"));\nexports.default = Providers_1.default;\n\n\n//# sourceURL=webpack://Formio/./lib/providers/index.js?");

/***/ }),

/***/ "./lib/providers/storage/azure.js":
/*!****************************************!*\
  !*** ./lib/providers/storage/azure.js ***!
  \****************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval("\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nvar xhr_1 = __importDefault(__webpack_require__(/*! ./xhr */ \"./lib/providers/storage/xhr.js\"));\nvar azure = function (formio) { return ({\n    uploadFile: function (file, fileName, dir, progressCallback, url, options, fileKey, groupPermissions, groupId, abortCallback) {\n        return xhr_1.default.upload(formio, 'azure', function (xhr, response) {\n            xhr.openAndSetHeaders('PUT', response.url);\n            xhr.setRequestHeader('Content-Type', file.type);\n            xhr.setRequestHeader('x-ms-blob-type', 'BlockBlob');\n            return file;\n        }, file, fileName, dir, progressCallback, groupPermissions, groupId, abortCallback).then(function () {\n            return {\n                storage: 'azure',\n                name: xhr_1.default.path([dir, fileName]),\n                size: file.size,\n                type: file.type,\n                groupPermissions: groupPermissions,\n                groupId: groupId\n            };\n        });\n    },\n    downloadFile: function (file) {\n        return formio.makeRequest('file', formio.formUrl + \"/storage/azure?name=\" + xhr_1.default.trim(file.name), 'GET');\n    }\n}); };\nazure.title = 'Azure File Services';\nexports.default = azure;\n\n\n//# sourceURL=webpack://Formio/./lib/providers/storage/azure.js?");

/***/ }),

/***/ "./lib/providers/storage/base64.js":
/*!*****************************************!*\
  !*** ./lib/providers/storage/base64.js ***!
  \*****************************************/
/***/ (function(__unused_webpack_module, exports) {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nvar base64 = function () { return ({\n    title: 'Base64',\n    name: 'base64',\n    uploadFile: function (file, fileName) {\n        var _this = this;\n        var reader = new FileReader();\n        return new Promise(function (resolve, reject) {\n            reader.onload = function (event) {\n                var url = event.target.result;\n                resolve({\n                    storage: 'base64',\n                    name: fileName,\n                    url: url,\n                    size: file.size,\n                    type: file.type,\n                });\n            };\n            reader.onerror = function () {\n                return reject(_this);\n            };\n            reader.readAsDataURL(file);\n        });\n    },\n    downloadFile: function (file) {\n        // Return the original as there is nothing to do.\n        return Promise.resolve(file);\n    }\n}); };\nbase64.title = 'Base64';\nexports.default = base64;\n\n\n//# sourceURL=webpack://Formio/./lib/providers/storage/base64.js?");

/***/ }),

/***/ "./lib/providers/storage/dropbox.js":
/*!******************************************!*\
  !*** ./lib/providers/storage/dropbox.js ***!
  \******************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nvar xhr_1 = __webpack_require__(/*! ./xhr */ \"./lib/providers/storage/xhr.js\");\nvar dropbox = function (formio) { return ({\n    uploadFile: function (file, fileName, dir, progressCallback, url, options, fileKey, groupPermissions, groupId, abortCallback) {\n        return new Promise((function (resolve, reject) {\n            // Send the file with data.\n            var xhr = new XMLHttpRequest();\n            if (typeof progressCallback === 'function') {\n                xhr.upload.onprogress = progressCallback;\n            }\n            if (typeof abortCallback === 'function') {\n                abortCallback(function () { return xhr.abort(); });\n            }\n            var fd = new FormData();\n            fd.append('name', fileName);\n            fd.append('dir', dir);\n            fd.append('file', file);\n            // Fire on network error.\n            xhr.onerror = function (err) {\n                err.networkError = true;\n                reject(err);\n            };\n            xhr.onload = function () {\n                if (xhr.status >= 200 && xhr.status < 300) {\n                    var response = JSON.parse(xhr.response);\n                    response.storage = 'dropbox';\n                    response.size = file.size;\n                    response.type = file.type;\n                    response.groupId = groupId;\n                    response.groupPermissions = groupPermissions;\n                    response.url = response.path_lower;\n                    resolve(response);\n                }\n                else {\n                    reject(xhr.response || 'Unable to upload file');\n                }\n            };\n            xhr.onabort = reject;\n            xhr.open('POST', formio.formUrl + \"/storage/dropbox\");\n            xhr_1.setXhrHeaders(formio, xhr);\n            var token = formio.getToken();\n            if (token) {\n                xhr.setRequestHeader('x-jwt-token', token);\n            }\n            xhr.send(fd);\n        }));\n    },\n    downloadFile: function (file) {\n        var token = formio.getToken();\n        file.url =\n            formio.formUrl + \"/storage/dropbox?path_lower=\" + file.path_lower + (token ? \"&x-jwt-token=\" + token : '');\n        return Promise.resolve(file);\n    }\n}); };\ndropbox.title = 'Dropbox';\nexports.default = dropbox;\n\n\n//# sourceURL=webpack://Formio/./lib/providers/storage/dropbox.js?");

/***/ }),

/***/ "./lib/providers/storage/index.js":
/*!****************************************!*\
  !*** ./lib/providers/storage/index.js ***!
  \****************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval("\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nvar base64_1 = __importDefault(__webpack_require__(/*! ./base64 */ \"./lib/providers/storage/base64.js\"));\nvar dropbox_1 = __importDefault(__webpack_require__(/*! ./dropbox */ \"./lib/providers/storage/dropbox.js\"));\nvar s3_1 = __importDefault(__webpack_require__(/*! ./s3 */ \"./lib/providers/storage/s3.js\"));\nvar azure_1 = __importDefault(__webpack_require__(/*! ./azure */ \"./lib/providers/storage/azure.js\"));\nvar url_1 = __importDefault(__webpack_require__(/*! ./url */ \"./lib/providers/storage/url.js\"));\nvar indexeddb_1 = __importDefault(__webpack_require__(/*! ./indexeddb */ \"./lib/providers/storage/indexeddb.js\"));\nexports.default = {\n    base64: base64_1.default,\n    dropbox: dropbox_1.default,\n    s3: s3_1.default,\n    url: url_1.default,\n    azure: azure_1.default,\n    indexeddb: indexeddb_1.default,\n};\n\n\n//# sourceURL=webpack://Formio/./lib/providers/storage/index.js?");

/***/ }),

/***/ "./lib/providers/storage/indexeddb.js":
/*!********************************************!*\
  !*** ./lib/providers/storage/indexeddb.js ***!
  \********************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nvar uuid_1 = __webpack_require__(/*! uuid */ \"./node_modules/uuid/dist/esm-browser/index.js\");\nvar indexeddb = function () { return ({\n    title: 'indexedDB',\n    name: 'indexeddb',\n    uploadFile: function (file, fileName, dir, progressCallback, url, options) {\n        var _this = this;\n        if (!('indexedDB' in window)) {\n            console.log('This browser doesn\\'t support IndexedDB');\n            return;\n        }\n        return new Promise(function (resolve) {\n            var request = indexedDB.open(options.indexeddb, 3);\n            request.onsuccess = function (event) {\n                var db = event.target.result;\n                resolve(db);\n            };\n            request.onupgradeneeded = function (e) {\n                var db = e.target.result;\n                db.createObjectStore(options.indexeddbTable);\n            };\n        }).then(function (db) {\n            var reader = new FileReader();\n            return new Promise(function (resolve, reject) {\n                reader.onload = function () {\n                    var blobObject = new Blob([file], { type: file.type });\n                    var id = uuid_1.v4(blobObject);\n                    var data = {\n                        id: id,\n                        data: blobObject,\n                        name: file.name,\n                        size: file.size,\n                        type: file.type,\n                        url: url,\n                    };\n                    var trans = db.transaction([options.indexeddbTable], 'readwrite');\n                    var addReq = trans.objectStore(options.indexeddbTable).put(data, id);\n                    addReq.onerror = function (e) {\n                        console.log('error storing data');\n                        console.error(e);\n                    };\n                    trans.oncomplete = function () {\n                        resolve({\n                            storage: 'indexeddb',\n                            name: file.name,\n                            size: file.size,\n                            type: file.type,\n                            url: url,\n                            id: id,\n                        });\n                    };\n                };\n                reader.onerror = function () {\n                    return reject(_this);\n                };\n                reader.readAsDataURL(file);\n            });\n        });\n    },\n    downloadFile: function (file, options) {\n        var _this = this;\n        return new Promise(function (resolve) {\n            var request = indexedDB.open(options.indexeddb, 3);\n            request.onsuccess = function (event) {\n                var db = event.target.result;\n                resolve(db);\n            };\n        }).then(function (db) {\n            return new Promise(function (resolve, reject) {\n                var trans = db.transaction([options.indexeddbTable], 'readonly');\n                var store = trans.objectStore(options.indexeddbTable).get(file.id);\n                store.onsuccess = function () {\n                    trans.oncomplete = function () {\n                        var result = store.result;\n                        var dbFile = new File([store.result.data], file.name, {\n                            type: store.result.type,\n                        });\n                        var reader = new FileReader();\n                        reader.onload = function (event) {\n                            result.url = event.target.result;\n                            result.storage = file.storage;\n                            resolve(result);\n                        };\n                        reader.onerror = function () {\n                            return reject(_this);\n                        };\n                        reader.readAsDataURL(dbFile);\n                    };\n                };\n                store.onerror = function () {\n                    return reject(_this);\n                };\n            });\n        });\n    },\n    deleteFile: function (file, options) {\n        var _this = this;\n        return new Promise(function (resolve) {\n            var request = indexedDB.open(options.indexeddb, 3);\n            request.onsuccess = function (event) {\n                var db = event.target.result;\n                resolve(db);\n            };\n        }).then(function (db) {\n            return new Promise(function (resolve, reject) {\n                var trans = db.transaction([options.indexeddbTable], 'readwrite');\n                var store = trans.objectStore(options.indexeddbTable).delete(file.id);\n                store.onsuccess = function () {\n                    trans.oncomplete = function () {\n                        var result = store.result;\n                        resolve(result);\n                    };\n                };\n                store.onerror = function () {\n                    return reject(_this);\n                };\n            });\n        });\n    }\n}); };\nindexeddb.title = 'IndexedDB';\nexports.default = indexeddb;\n\n\n//# sourceURL=webpack://Formio/./lib/providers/storage/indexeddb.js?");

/***/ }),

/***/ "./lib/providers/storage/s3.js":
/*!*************************************!*\
  !*** ./lib/providers/storage/s3.js ***!
  \*************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval("\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nvar xhr_1 = __importDefault(__webpack_require__(/*! ./xhr */ \"./lib/providers/storage/xhr.js\"));\nvar s3 = function (formio) { return ({\n    uploadFile: function (file, fileName, dir, progressCallback, url, options, fileKey, groupPermissions, groupId, abortCallback) {\n        return xhr_1.default.upload(formio, 's3', function (xhr, response) {\n            response.data.fileName = fileName;\n            response.data.key = xhr_1.default.path([response.data.key, dir, fileName]);\n            if (response.signed) {\n                xhr.openAndSetHeaders('PUT', response.signed);\n                xhr.setRequestHeader('Content-Type', file.type);\n                return file;\n            }\n            else {\n                var fd = new FormData();\n                for (var key in response.data) {\n                    fd.append(key, response.data[key]);\n                }\n                fd.append('file', file);\n                xhr.openAndSetHeaders('POST', response.url);\n                return fd;\n            }\n        }, file, fileName, dir, progressCallback, groupPermissions, groupId, abortCallback).then(function (response) {\n            return {\n                storage: 's3',\n                name: fileName,\n                bucket: response.bucket,\n                key: response.data.key,\n                url: xhr_1.default.path([response.url, response.data.key]),\n                acl: response.data.acl,\n                size: file.size,\n                type: file.type\n            };\n        });\n    },\n    downloadFile: function (file) {\n        if (file.acl !== 'public-read') {\n            return formio.makeRequest('file', formio.formUrl + \"/storage/s3?bucket=\" + xhr_1.default.trim(file.bucket) + \"&key=\" + xhr_1.default.trim(file.key), 'GET');\n        }\n        else {\n            return Promise.resolve(file);\n        }\n    }\n}); };\ns3.title = 'S3';\nexports.default = s3;\n\n\n//# sourceURL=webpack://Formio/./lib/providers/storage/s3.js?");

/***/ }),

/***/ "./lib/providers/storage/url.js":
/*!**************************************!*\
  !*** ./lib/providers/storage/url.js ***!
  \**************************************/
/***/ (function(__unused_webpack_module, exports) {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nvar url = function (formio) {\n    var xhrRequest = function (url, name, query, data, options, progressCallback, abortCallback) {\n        return new Promise(function (resolve, reject) {\n            var xhr = new XMLHttpRequest();\n            var json = (typeof data === 'string');\n            var fd = new FormData();\n            if (typeof progressCallback === 'function') {\n                xhr.upload.onprogress = progressCallback;\n            }\n            if (typeof abortCallback === 'function') {\n                abortCallback(function () { return xhr.abort(); });\n            }\n            if (!json) {\n                for (var key in data) {\n                    fd.append(key, data[key]);\n                }\n            }\n            xhr.onload = function () {\n                if (xhr.status >= 200 && xhr.status < 300) {\n                    // Need to test if xhr.response is decoded or not.\n                    var respData = {};\n                    try {\n                        respData = (typeof xhr.response === 'string') ? JSON.parse(xhr.response) : {};\n                        respData = (respData && respData.data) ? respData.data : respData;\n                    }\n                    catch (err) {\n                        respData = {};\n                    }\n                    // Get the url of the file.\n                    var respUrl = respData.hasOwnProperty('url') ? respData.url : xhr.responseURL + \"/\" + name;\n                    // If they provide relative url, then prepend the url.\n                    if (respUrl && respUrl[0] === '/') {\n                        respUrl = \"\" + url + respUrl;\n                    }\n                    resolve({ url: respUrl, data: respData });\n                }\n                else {\n                    reject(xhr.response || 'Unable to upload file');\n                }\n            };\n            xhr.onerror = function () { return reject(xhr); };\n            xhr.onabort = function () { return reject(xhr); };\n            var requestUrl = url + (url.indexOf('?') > -1 ? '&' : '?');\n            for (var key in query) {\n                requestUrl += key + \"=\" + query[key] + \"&\";\n            }\n            if (requestUrl[requestUrl.length - 1] === '&') {\n                requestUrl = requestUrl.substr(0, requestUrl.length - 1);\n            }\n            xhr.open('POST', requestUrl);\n            if (json) {\n                xhr.setRequestHeader('Content-Type', 'application/json');\n            }\n            var token = formio.getToken();\n            if (token) {\n                xhr.setRequestHeader('x-jwt-token', token);\n            }\n            //Overrides previous request props\n            if (options) {\n                var parsedOptions = typeof options === 'string' ? JSON.parse(options) : options;\n                for (var prop in parsedOptions) {\n                    xhr[prop] = parsedOptions[prop];\n                }\n            }\n            xhr.send(json ? data : fd);\n        });\n    };\n    return {\n        title: 'Url',\n        name: 'url',\n        uploadFile: function (file, fileName, dir, progressCallback, url, options, fileKey, groupPermissions, groupId, abortCallback) {\n            var uploadRequest = function (form) {\n                var _a;\n                return xhrRequest(url, fileName, {\n                    baseUrl: encodeURIComponent(formio.projectUrl),\n                    project: form ? form.project : '',\n                    form: form ? form._id : ''\n                }, (_a = {},\n                    _a[fileKey] = file,\n                    _a.name = name,\n                    _a.dir = dir,\n                    _a), options, progressCallback, abortCallback).then(function (response) {\n                    // Store the project and form url along with the metadata.\n                    response.data = response.data || {};\n                    response.data.baseUrl = formio.projectUrl;\n                    response.data.project = form ? form.project : '';\n                    response.data.form = form ? form._id : '';\n                    return {\n                        storage: 'url',\n                        name: name,\n                        url: response.url,\n                        size: file.size,\n                        type: file.type,\n                        data: response.data\n                    };\n                });\n            };\n            if (file.private && formio.formId) {\n                return formio.loadForm().then(function (form) { return uploadRequest(form); });\n            }\n            else {\n                return uploadRequest();\n            }\n        },\n        deleteFile: function (fileInfo) {\n            return new Promise(function (resolve, reject) {\n                var xhr = new XMLHttpRequest();\n                xhr.open('DELETE', fileInfo.url, true);\n                xhr.onload = function () {\n                    if (xhr.status >= 200 && xhr.status < 300) {\n                        resolve('File deleted');\n                    }\n                    else {\n                        reject(xhr.response || 'Unable to delete file');\n                    }\n                };\n                xhr.send(null);\n            });\n        },\n        downloadFile: function (file) {\n            if (file.private) {\n                if (formio.submissionId && file.data) {\n                    file.data.submission = formio.submissionId;\n                }\n                return xhrRequest(file.url, file.name, {}, JSON.stringify(file)).then(function (response) { return response.data; });\n            }\n            // Return the original as there is nothing to do.\n            return Promise.resolve(file);\n        }\n    };\n};\nurl.title = 'Url';\nexports.default = url;\n\n\n//# sourceURL=webpack://Formio/./lib/providers/storage/url.js?");

/***/ }),

/***/ "./lib/providers/storage/xhr.js":
/*!**************************************!*\
  !*** ./lib/providers/storage/xhr.js ***!
  \**************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.setXhrHeaders = void 0;\nvar lodash_1 = __webpack_require__(/*! @formio/lodash */ \"./node_modules/@formio/lodash/lib/index.js\");\nvar setXhrHeaders = function (formio, xhr) {\n    var headers = formio.options.headers;\n    if (headers) {\n        var ValidHeaders = {\n            'Content-Disposition': true,\n        };\n        for (var header in headers) {\n            if (ValidHeaders[header]) {\n                xhr.setRequestHeader(header, headers[header]);\n            }\n        }\n    }\n};\nexports.setXhrHeaders = setXhrHeaders;\nvar XHR = {\n    trim: function (text) {\n        return lodash_1.trim(text, '/');\n    },\n    path: function (items) {\n        return items.filter(function (item) { return !!item; }).map(XHR.trim).join('/');\n    },\n    upload: function (formio, type, xhrCb, file, fileName, dir, progressCallback, groupPermissions, groupId, abortCallback) {\n        return new Promise((function (resolve, reject) {\n            // Send the pre response to sign the upload.\n            var pre = new XMLHttpRequest();\n            // This only fires on a network error.\n            pre.onerror = function (err) {\n                err.networkError = true;\n                reject(err);\n            };\n            pre.onabort = reject;\n            pre.onload = function () {\n                if (pre.status >= 200 && pre.status < 300) {\n                    var response_1 = JSON.parse(pre.response);\n                    // Send the file with data.\n                    var xhr_1 = new XMLHttpRequest();\n                    if (typeof progressCallback === 'function') {\n                        xhr_1.upload.onprogress = progressCallback;\n                    }\n                    if (typeof abortCallback === 'function') {\n                        abortCallback(function () { return xhr_1.abort(); });\n                    }\n                    xhr_1.openAndSetHeaders = function (method, url, async, user, password) {\n                        if (async === void 0) { async = true; }\n                        if (user === void 0) { user = null; }\n                        if (password === void 0) { password = null; }\n                        xhr_1.open(method, url, async, user, password);\n                        exports.setXhrHeaders(formio, xhr_1);\n                    };\n                    // Fire on network error.\n                    xhr_1.onerror = function (err) {\n                        err.networkError = true;\n                        reject(err);\n                    };\n                    // Fire on network abort.\n                    xhr_1.onabort = function (err) {\n                        err.networkError = true;\n                        reject(err);\n                    };\n                    // Fired when the response has made it back from the server.\n                    xhr_1.onload = function () {\n                        if (xhr_1.status >= 200 && xhr_1.status < 300) {\n                            resolve(response_1);\n                        }\n                        else {\n                            reject(xhr_1.response || 'Unable to upload file');\n                        }\n                    };\n                    // Set the onabort error callback.\n                    xhr_1.onabort = reject;\n                    // Get the request and send it to the server.\n                    xhr_1.send(xhrCb(xhr_1, response_1));\n                }\n                else {\n                    reject(pre.response || 'Unable to sign file');\n                }\n            };\n            pre.open('POST', formio.formUrl + \"/storage/\" + type);\n            pre.setRequestHeader('Accept', 'application/json');\n            pre.setRequestHeader('Content-Type', 'application/json; charset=UTF-8');\n            var token = formio.getToken();\n            if (token) {\n                pre.setRequestHeader('x-jwt-token', token);\n            }\n            pre.send(JSON.stringify({\n                name: XHR.path([dir, fileName]),\n                size: file.size,\n                type: file.type,\n                groupPermissions: groupPermissions,\n                groupId: groupId,\n            }));\n        }));\n    }\n};\nexports.default = XHR;\n\n\n//# sourceURL=webpack://Formio/./lib/providers/storage/xhr.js?");

/***/ }),

/***/ "./lib/util/Evaluator.js":
/*!*******************************!*\
  !*** ./lib/util/Evaluator.js ***!
  \*******************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval("\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nvar __spreadArray = (this && this.__spreadArray) || function (to, from) {\n    for (var i = 0, il = from.length, j = to.length; i < il; i++, j++)\n        to[j] = from[i];\n    return to;\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.Evaluator = exports.BaseEvaluator = void 0;\nvar _ = __importStar(__webpack_require__(/*! @formio/lodash */ \"./node_modules/@formio/lodash/lib/index.js\"));\n// BaseEvaluator is for extending.\nvar BaseEvaluator = /** @class */ (function () {\n    function BaseEvaluator() {\n    }\n    BaseEvaluator.evaluator = function (func) {\n        var params = [];\n        for (var _i = 1; _i < arguments.length; _i++) {\n            params[_i - 1] = arguments[_i];\n        }\n        if (Evaluator.noeval) {\n            console.warn('No evaluations allowed for this renderer.');\n            return _.noop;\n        }\n        if (typeof func === 'function') {\n            return func;\n        }\n        if (typeof params[0] === 'object') {\n            params = _.keys(params[0]);\n        }\n        return new (Function.bind.apply(Function, __spreadArray(__spreadArray([void 0], params), [func])))();\n    };\n    ;\n    BaseEvaluator.interpolateString = function (rawTemplate, data) {\n        return rawTemplate.replace(/({{\\s*(.*?)\\s*}})/g, function (match, $1, $2) {\n            // If this is a function call and we allow evals.\n            if ($2.indexOf('(') !== -1) {\n                return $2.replace(/([^\\(]+)\\(([^\\)]+)\\s*\\);?/, function (evalMatch, funcName, args) {\n                    funcName = _.trim(funcName);\n                    var func = _.get(data, funcName);\n                    if (func) {\n                        if (args) {\n                            args = args.split(',').map(function (arg) {\n                                arg = _.trim(arg);\n                                if ((arg.indexOf('\"') === 0) || (arg.indexOf(\"'\") === 0)) {\n                                    return arg.substring(1, arg.length - 1);\n                                }\n                                return _.get(data, arg);\n                            });\n                        }\n                        return Evaluator.evaluate(func, args, '', false, data);\n                    }\n                    return '';\n                });\n            }\n            else {\n                return _.get(data, $2);\n            }\n        });\n    };\n    BaseEvaluator.interpolate = function (rawTemplate, data) {\n        if (typeof rawTemplate === 'function') {\n            try {\n                return rawTemplate(data);\n            }\n            catch (err) {\n                console.warn('Error interpolating template', err, data);\n                return err.message;\n            }\n        }\n        return Evaluator.interpolateString(String(rawTemplate), data);\n    };\n    ;\n    /**\n     * Evaluate a method.\n     *\n     * @param func\n     * @param args\n     * @return {*}\n     */\n    BaseEvaluator.evaluate = function (func, args, ret, interpolate, context) {\n        if (args === void 0) { args = {}; }\n        if (ret === void 0) { ret = ''; }\n        if (interpolate === void 0) { interpolate = false; }\n        if (context === void 0) { context = {}; }\n        var returnVal = null;\n        var component = args.component ? args.component : { key: 'unknown' };\n        if (!args.form && args.instance) {\n            args.form = _.get(args.instance, 'root._form', {});\n        }\n        var componentKey = component.key;\n        if (typeof func === 'string') {\n            if (ret) {\n                func += \";return \" + ret;\n            }\n            if (interpolate) {\n                func = BaseEvaluator.interpolate(func, args);\n            }\n            try {\n                func = Evaluator.evaluator(func, args, context);\n                args = _.values(args);\n            }\n            catch (err) {\n                console.warn(\"An error occured within the custom function for \" + componentKey, err);\n                returnVal = null;\n                func = false;\n            }\n        }\n        if (typeof func === 'function') {\n            try {\n                returnVal = Evaluator.execute(func, args, context);\n            }\n            catch (err) {\n                returnVal = null;\n                console.warn(\"An error occured within custom function for \" + componentKey, err);\n            }\n        }\n        else if (func) {\n            console.warn(\"Unknown function type for \" + componentKey);\n        }\n        return returnVal;\n    };\n    /**\n     * Execute a function.\n     *\n     * @param func\n     * @param args\n     * @returns\n     */\n    BaseEvaluator.execute = function (func, args, context) {\n        if (context === void 0) { context = {}; }\n        if (Evaluator.noeval) {\n            console.warn('No evaluations allowed for this renderer.');\n            return _.noop;\n        }\n        return Array.isArray(args) ? func.apply(context, args) : func.call(context, args);\n    };\n    ;\n    BaseEvaluator.templateSettings = {\n        interpolate: /{{([\\s\\S]+?)}}/g,\n    };\n    BaseEvaluator.noeval = false;\n    return BaseEvaluator;\n}());\nexports.BaseEvaluator = BaseEvaluator;\n// The extendable evaluator\nvar Evaluator = /** @class */ (function (_super) {\n    __extends(Evaluator, _super);\n    function Evaluator() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * Allow external modules the ability to extend the Evaluator.\n     * @param evaluator\n     */\n    Evaluator.registerEvaluator = function (evaluator) {\n        Object.keys(evaluator).forEach(function (key) {\n            Evaluator[key] = evaluator[key];\n        });\n    };\n    return Evaluator;\n}(BaseEvaluator));\nexports.Evaluator = Evaluator;\n\n\n//# sourceURL=webpack://Formio/./lib/util/Evaluator.js?");

/***/ }),

/***/ "./lib/util/formUtil.js":
/*!******************************!*\
  !*** ./lib/util/formUtil.js ***!
  \******************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval("\nvar __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.uniqueName = exports.guid = exports.eachComponent = void 0;\nvar Evaluator_1 = __webpack_require__(/*! ./Evaluator */ \"./lib/util/Evaluator.js\");\nvar lodash_1 = __webpack_require__(/*! @formio/lodash */ \"./node_modules/@formio/lodash/lib/index.js\");\n/**\n * Iterate through each component within a form.\n *\n * @param {Object} components\n *   The components to iterate.\n * @param {Function} fn\n *   The iteration function to invoke for each component.\n * @param {Boolean} includeAll\n *   Whether or not to include layout components.\n * @param {String} path\n *   The current data path of the element. Example: data.user.firstName\n * @param {Object} parent\n *   The parent object.\n */\nfunction eachComponent(components, fn, includeAll, path, parent) {\n    if (!components)\n        return;\n    path = path || '';\n    components.forEach(function (component) {\n        if (!component) {\n            return;\n        }\n        var hasColumns = component.columns && Array.isArray(component.columns);\n        var hasRows = component.rows && Array.isArray(component.rows);\n        var hasComps = component.components && Array.isArray(component.components);\n        var noRecurse = false;\n        var newPath = component.key ? (path ? (path + \".\" + component.key) : component.key) : '';\n        // Keep track of parent references.\n        if (parent) {\n            // Ensure we don't create infinite JSON structures.\n            component.parent = __assign({}, parent);\n            delete component.parent.components;\n            delete component.parent.componentMap;\n            delete component.parent.columns;\n            delete component.parent.rows;\n        }\n        // there's no need to add other layout components here because we expect that those would either have columns, rows or components\n        var layoutTypes = ['htmlelement', 'content'];\n        var isLayoutComponent = hasColumns || hasRows || hasComps || layoutTypes.indexOf(component.type) > -1;\n        if (includeAll || component.tree || !isLayoutComponent) {\n            noRecurse = fn(component, newPath, components);\n        }\n        var subPath = function () {\n            if (component.key &&\n                !['panel', 'table', 'well', 'columns', 'fieldset', 'tabs', 'form'].includes(component.type) &&\n                (['datagrid', 'container', 'editgrid', 'address', 'dynamicWizard'].includes(component.type) ||\n                    component.tree)) {\n                return newPath;\n            }\n            else if (component.key &&\n                component.type === 'form') {\n                return newPath + \".data\";\n            }\n            return path;\n        };\n        if (!noRecurse) {\n            if (hasColumns) {\n                component.columns.forEach(function (column) {\n                    return eachComponent(column.components, fn, includeAll, subPath(), parent ? component : null);\n                });\n            }\n            else if (hasRows) {\n                component.rows.forEach(function (row) {\n                    if (Array.isArray(row)) {\n                        row.forEach(function (column) {\n                            return eachComponent(column.components, fn, includeAll, subPath(), parent ? component : null);\n                        });\n                    }\n                });\n            }\n            else if (hasComps) {\n                eachComponent(component.components, fn, includeAll, subPath(), parent ? component : null);\n            }\n        }\n    });\n}\nexports.eachComponent = eachComponent;\nfunction guid() {\n    return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function (c) {\n        var r = Math.random() * 16 | 0;\n        var v = c === 'x'\n            ? r\n            : (r & 0x3 | 0x8);\n        return v.toString(16);\n    });\n}\nexports.guid = guid;\n/**\n * Make a filename guaranteed to be unique.\n * @param name\n * @param template\n * @param evalContext\n * @returns {string}\n */\nfunction uniqueName(name, template, evalContext) {\n    template = template || '{{fileName}}-{{guid}}';\n    //include guid in template anyway, to prevent overwriting issue if filename matches existing file\n    if (!template.includes('{{guid}}')) {\n        template = template + \"-{{guid}}\";\n    }\n    var parts = name.split('.');\n    var fileName = parts.slice(0, parts.length - 1).join('.');\n    var extension = parts.length > 1\n        ? \".\" + lodash_1.last(parts)\n        : '';\n    //allow only 100 characters from original name to avoid issues with filename length restrictions\n    fileName = fileName.substr(0, 100);\n    evalContext = Object.assign(evalContext || {}, {\n        fileName: fileName,\n        guid: guid()\n    });\n    //only letters, numbers, dots, dashes, underscores and spaces are allowed. Anything else will be replaced with dash\n    var uniqueName = (\"\" + Evaluator_1.Evaluator.interpolate(template, evalContext) + extension).replace(/[^0-9a-zA-Z.\\-_ ]/g, '-');\n    return uniqueName;\n}\nexports.uniqueName = uniqueName;\n\n\n//# sourceURL=webpack://Formio/./lib/util/formUtil.js?");

/***/ }),

/***/ "./node_modules/@formio/lodash/lib/array.js":
/*!**************************************************!*\
  !*** ./node_modules/@formio/lodash/lib/array.js ***!
  \**************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval("\nvar __spreadArray = (this && this.__spreadArray) || function (to, from) {\n    for (var i = 0, il = from.length, j = to.length; i < il; i++, j++)\n        to[j] = from[i];\n    return to;\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.intersection = exports.map = exports.head = exports.last = exports.filter = exports.findEach = exports.matches = exports.findIndex = exports.find = exports.each = exports.dropRight = exports.drop = exports.difference = exports.concat = exports.compact = exports.chunk = void 0;\nvar lang_1 = __webpack_require__(/*! ./lang */ \"./node_modules/@formio/lodash/lib/lang.js\");\nvar object_1 = __webpack_require__(/*! ./object */ \"./node_modules/@formio/lodash/lib/object.js\");\n// https://github.com/you-dont-need/You-Dont-Need-Lodash-Underscore#_chunk\nfunction chunk(input, size) {\n    return input.reduce(function (arr, item, idx) {\n        return idx % size === 0\n            ? __spreadArray(__spreadArray([], arr), [[item]]) : __spreadArray(__spreadArray([], arr.slice(0, -1)), [__spreadArray(__spreadArray([], arr.slice(-1)[0]), [item])]);\n    }, []);\n}\nexports.chunk = chunk;\n;\n// https://github.com/you-dont-need/You-Dont-Need-Lodash-Underscore#_compact\nfunction compact(input) {\n    return input.filter(Boolean);\n}\nexports.compact = compact;\n/**\n * @link https://lodash.com/docs/4.17.15#concat\n * @param input\n * @param args\n * @returns\n */\nfunction concat(input) {\n    var args = [];\n    for (var _i = 1; _i < arguments.length; _i++) {\n        args[_i - 1] = arguments[_i];\n    }\n    return input.concat.apply(input, args);\n}\nexports.concat = concat;\n// https://github.com/you-dont-need/You-Dont-Need-Lodash-Underscore#_difference\nfunction difference() {\n    var arrays = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n        arrays[_i] = arguments[_i];\n    }\n    return arrays.reduce(function (a, b) {\n        return a.filter(function (value) {\n            return !b.includes(value);\n        });\n    });\n}\nexports.difference = difference;\n// https://github.com/you-dont-need/You-Dont-Need-Lodash-Underscore#_drop\nfunction drop(arr, index) {\n    if (index === void 0) { index = 1; }\n    return (index > 0) ? arr.slice(index) : arr;\n}\nexports.drop = drop;\n// https://github.com/you-dont-need/You-Dont-Need-Lodash-Underscore#_dropright\nfunction dropRight(arr, index) {\n    if (index === void 0) { index = 1; }\n    return (index > 0) ? arr.slice(0, -index) : arr;\n}\nexports.dropRight = dropRight;\n/**\n * Iterate through a collection or array.\n * @param collection\n * @param _each\n */\nfunction each(collection, _each) {\n    var isArray = Array.isArray(collection);\n    for (var i in collection) {\n        if (collection.hasOwnProperty(i)) {\n            if (_each(collection[i], isArray ? Number(i) : i) === true) {\n                break;\n            }\n            ;\n        }\n    }\n}\nexports.each = each;\n/**\n * Perform a find operation.\n * @param arr\n * @param query\n */\nfunction find(arr, query, findIndex) {\n    if (findIndex === void 0) { findIndex = false; }\n    if (!arr) {\n        return undefined;\n    }\n    if (Array.isArray(arr) && typeof query === 'function') {\n        return findIndex ? arr.findIndex(query) : arr.find(query);\n    }\n    var found = undefined;\n    var foundIndex = 0;\n    findEach(arr, query, function (item, index) {\n        found = item;\n        foundIndex = index;\n        return true;\n    });\n    return findIndex ? foundIndex : found;\n}\nexports.find = find;\n/**\n * Find an index.\n *\n * @param arr\n * @param query\n * @returns\n */\nfunction findIndex(arr, query) {\n    return find(arr, query, true);\n}\nexports.findIndex = findIndex;\n/**\n * Returns a function to perform matches.\n * @param query\n * @returns\n */\nfunction matches(query) {\n    var keys = [];\n    var compare = {};\n    if (typeof query === 'string') {\n        keys = [query];\n        compare[query] = true;\n    }\n    else {\n        keys = Object.keys(query);\n        compare = query;\n    }\n    return function (comp) {\n        return lang_1.isEqual(object_1.pick(comp, keys), compare);\n    };\n}\nexports.matches = matches;\n/**\n * Perform a find operation on each item in an array.\n * @param arr\n * @param query\n * @param fn\n */\nfunction findEach(arr, query, fn) {\n    each(arr, function (item, index) {\n        if (matches(query)(item)) {\n            if (fn(item, index) === true) {\n                return true;\n            }\n        }\n    });\n}\nexports.findEach = findEach;\n/**\n * Perform a filter operation.\n * @param arr\n * @param fn\n */\nfunction filter(arr, fn) {\n    if (!arr) {\n        return [];\n    }\n    if (!fn) {\n        fn = function (val) { return !!val; };\n    }\n    if (Array.isArray(arr) && typeof fn === 'function') {\n        return arr.filter(fn);\n    }\n    var found = [];\n    findEach(arr, fn, function (item, index) {\n        found.push(item);\n        if (Array.isArray(item)) {\n            arr.splice(index, 1);\n        }\n        else {\n            delete arr[index];\n        }\n    });\n    return found;\n}\nexports.filter = filter;\n/**\n * Get the last item in an array.\n * @param arr\n */\nfunction last(arr) {\n    return arr[arr.length - 1];\n}\nexports.last = last;\n/**\n * https://lodash.com/docs/4.17.15#head\n * @param arr\n * @returns\n */\nfunction head(arr) {\n    return arr[0];\n}\nexports.head = head;\n/**\n * https://lodash.com/docs/4.17.15#map\n * @param arr\n * @param fn\n * @returns\n */\nfunction map(arr, fn) {\n    return arr.map(fn);\n}\nexports.map = map;\n/**\n * Get the intersection of two objects.\n * @param a\n * @param b\n */\nfunction intersection(a, b) {\n    return a.filter(function (value) { return b.includes(value); });\n}\nexports.intersection = intersection;\n\n\n//# sourceURL=webpack://Formio/./node_modules/@formio/lodash/lib/array.js?");

/***/ }),

/***/ "./node_modules/@formio/lodash/lib/function.js":
/*!*****************************************************!*\
  !*** ./node_modules/@formio/lodash/lib/function.js ***!
  \*****************************************************/
/***/ (function(__unused_webpack_module, exports) {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.debounce = void 0;\n/**\n * Debounc the call of a function for a given amount of time.\n *\n * @param func\n * @param wait\n * @returns\n */\nfunction debounce(func, wait) {\n    if (wait === void 0) { wait = 100; }\n    var timeout;\n    return function () {\n        var args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            args[_i] = arguments[_i];\n        }\n        if (timeout) {\n            clearTimeout(timeout);\n        }\n        timeout = setTimeout(function () {\n            timeout = null;\n            func.apply(void 0, args);\n        }, wait);\n    };\n}\nexports.debounce = debounce;\n\n\n//# sourceURL=webpack://Formio/./node_modules/@formio/lodash/lib/function.js?");

/***/ }),

/***/ "./node_modules/@formio/lodash/lib/index.js":
/*!**************************************************!*\
  !*** ./node_modules/@formio/lodash/lib/index.js ***!
  \**************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval("\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nvar __spreadArray = (this && this.__spreadArray) || function (to, from) {\n    for (var i = 0, il = from.length, j = to.length; i < il; i++, j++)\n        to[j] = from[i];\n    return to;\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.chain = void 0;\nvar ArrayFunctions = __importStar(__webpack_require__(/*! ./array */ \"./node_modules/@formio/lodash/lib/array.js\"));\nvar Chainable = /** @class */ (function () {\n    function Chainable(val) {\n        this.chain = [];\n        this.currentValue = [];\n        this.currentValue = val;\n    }\n    Chainable.prototype.value = function () {\n        return this.chain.reduce(function (current, func) {\n            var _a;\n            return (_a = ArrayFunctions)[func.method].apply(_a, __spreadArray([current], func.args));\n        }, this.currentValue);\n    };\n    return Chainable;\n}());\nvar _loop_1 = function (method) {\n    if (ArrayFunctions.hasOwnProperty(method)) {\n        Chainable.prototype[method] = function () {\n            var args = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                args[_i] = arguments[_i];\n            }\n            this.chain.push({ method: method, args: args });\n            return this;\n        };\n    }\n};\nfor (var method in ArrayFunctions) {\n    _loop_1(method);\n}\n/**\n * Create a chainable array of methods.\n * @param val\n * @returns\n */\nfunction chain(val) {\n    return new Chainable(val);\n}\nexports.chain = chain;\nexports.default = chain;\n__exportStar(__webpack_require__(/*! ./array */ \"./node_modules/@formio/lodash/lib/array.js\"), exports);\n__exportStar(__webpack_require__(/*! ./function */ \"./node_modules/@formio/lodash/lib/function.js\"), exports);\n__exportStar(__webpack_require__(/*! ./lang */ \"./node_modules/@formio/lodash/lib/lang.js\"), exports);\n__exportStar(__webpack_require__(/*! ./math */ \"./node_modules/@formio/lodash/lib/math.js\"), exports);\n__exportStar(__webpack_require__(/*! ./object */ \"./node_modules/@formio/lodash/lib/object.js\"), exports);\n__exportStar(__webpack_require__(/*! ./string */ \"./node_modules/@formio/lodash/lib/string.js\"), exports);\n\n\n//# sourceURL=webpack://Formio/./node_modules/@formio/lodash/lib/index.js?");

/***/ }),

/***/ "./node_modules/@formio/lodash/lib/lang.js":
/*!*************************************************!*\
  !*** ./node_modules/@formio/lodash/lib/lang.js ***!
  \*************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.isRegExp = exports.isBoolean = exports.isNumber = exports.isPlainObject = exports.isObject = exports.isObjectLike = exports.isArray = exports.isNull = exports.isNil = exports.isNaN = exports.isInteger = exports.isEmpty = exports.isString = exports.isEqual = exports.noop = void 0;\nvar array_1 = __webpack_require__(/*! ./array */ \"./node_modules/@formio/lodash/lib/array.js\");\n/**\n * Gets the `toStringTag` of `value`.\n *\n * @private\n * @param {*} value The value to query.\n * @returns {string} Returns the `toStringTag`.\n */\nfunction getTag(value) {\n    if (value == null) {\n        return value === undefined ? '[object Undefined]' : '[object Null]';\n    }\n    return Object.prototype.toString.call(value);\n}\n/**\n * A no-operation function.\n */\nfunction noop() {\n    return;\n}\nexports.noop = noop;\n;\n/**\n * Determines equality of a value or complex object.\n * @param a\n * @param b\n */\nfunction isEqual(a, b) {\n    var equal = false;\n    if (a === b) {\n        return true;\n    }\n    if (a && b && (Array.isArray(a) || isObject(a))) {\n        equal = true;\n        array_1.each(a, function (val, key) {\n            if ((Array.isArray(val) || isObject(val)) && !isEqual(b[key], val)) {\n                equal = false;\n                return true;\n            }\n            if (b[key] !== val) {\n                equal = false;\n                return true;\n            }\n        });\n    }\n    return equal;\n}\nexports.isEqual = isEqual;\nfunction isString(val) {\n    return typeof val === 'string';\n}\nexports.isString = isString;\n// https://github.com/you-dont-need/You-Dont-Need-Lodash-Underscore#_isempty\nfunction isEmpty(obj) {\n    return [Object, Array].includes((obj || {}).constructor) && !Object.entries((obj || {})).length;\n}\nexports.isEmpty = isEmpty;\nfunction isInteger(val) {\n    return Number.isInteger(val);\n}\nexports.isInteger = isInteger;\nfunction isNaN(val) {\n    return Number.isNaN(val);\n}\nexports.isNaN = isNaN;\nfunction isNil(val) {\n    return val == null;\n}\nexports.isNil = isNil;\nfunction isNull(val) {\n    return val === null;\n}\nexports.isNull = isNull;\nfunction isArray(val) {\n    return Array.isArray(val);\n}\nexports.isArray = isArray;\nfunction isObjectLike(val) {\n    return typeof val === 'object' && (val !== null);\n}\nexports.isObjectLike = isObjectLike;\nfunction isObject(val) {\n    var type = typeof val;\n    return val != null && (type === 'object' || type === 'function');\n}\nexports.isObject = isObject;\nfunction isPlainObject(value) {\n    if (!isObjectLike(value) || getTag(value) != '[object Object]') {\n        return false;\n    }\n    if (Object.getPrototypeOf(value) === null) {\n        return true;\n    }\n    var proto = value;\n    while (Object.getPrototypeOf(proto) !== null) {\n        proto = Object.getPrototypeOf(proto);\n    }\n    return Object.getPrototypeOf(value) === proto;\n}\nexports.isPlainObject = isPlainObject;\nfunction isNumber(value) {\n    return typeof value === 'number' || (isObjectLike(value) && getTag(value) == '[object Number]');\n}\nexports.isNumber = isNumber;\nfunction isBoolean(value) {\n    return value === true || value === false || (isObjectLike(value) && getTag(value) == '[object Boolean]');\n}\nexports.isBoolean = isBoolean;\nfunction isRegExp(value) {\n    return isObjectLike(value) && getTag(value) == '[object RegExp]';\n}\nexports.isRegExp = isRegExp;\n\n\n//# sourceURL=webpack://Formio/./node_modules/@formio/lodash/lib/lang.js?");

/***/ }),

/***/ "./node_modules/@formio/lodash/lib/math.js":
/*!*************************************************!*\
  !*** ./node_modules/@formio/lodash/lib/math.js ***!
  \*************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.sumBy = exports.sum = exports.mod = exports.subtract = exports.round = exports.multiply = exports.minBy = exports.min = exports.meanBy = exports.mean = exports.maxBy = exports.max = exports.floor = exports.divide = exports.ceil = exports.add = void 0;\nvar lang_1 = __webpack_require__(/*! ./lang */ \"./node_modules/@formio/lodash/lib/lang.js\");\nvar object_1 = __webpack_require__(/*! ./object */ \"./node_modules/@formio/lodash/lib/object.js\");\nfunction mathOp(a, op, precision) {\n    if (precision === void 0) { precision = 0; }\n    if (!precision) {\n        return op(a);\n    }\n    precision = Math.pow(10, precision);\n    return op(a * precision) / precision;\n}\nfunction getBy(arr, fn, op) {\n    var first = arr.shift();\n    var fnString = lang_1.isString(fn);\n    return arr.reduce(function (current, item) { return op(current, fnString ? object_1.get(item, fn) : fn(item)); }, first);\n}\n/**\n * @link https://lodash.com/docs/4.17.15#add\n * @param augend\n * @param addend\n * @returns\n */\nfunction add(augend, addend) {\n    return augend + addend;\n}\nexports.add = add;\n/**\n * @link https://lodash.com/docs/4.17.15#ceil\n * @param num\n * @param precision\n * @returns\n */\nfunction ceil(num, precision) {\n    if (precision === void 0) { precision = 0; }\n    return mathOp(num, Math.ceil, precision);\n}\nexports.ceil = ceil;\n/**\n * https://lodash.com/docs/4.17.15#divide\n * @param dividend\n * @param divisor\n * @returns\n */\nfunction divide(dividend, divisor) {\n    return dividend / divisor;\n}\nexports.divide = divide;\n/**\n * @link https://lodash.com/docs/4.17.15#floor\n * @param num\n * @param precision\n * @returns\n */\nfunction floor(num, precision) {\n    if (precision === void 0) { precision = 0; }\n    return mathOp(num, Math.floor, precision);\n}\nexports.floor = floor;\n/**\n * @link https://lodash.com/docs/4.17.15#max\n * @param arr\n * @returns\n */\nfunction max(arr) {\n    return Math.max.apply(Math, arr);\n}\nexports.max = max;\n/**\n * @link https://lodash.com/docs/4.17.15#maxBy\n */\nfunction maxBy(arr, fn) {\n    return getBy(arr, fn, Math.max);\n}\nexports.maxBy = maxBy;\n/**\n * @link https://lodash.com/docs/4.17.15#mean\n * @param arr\n * @returns\n */\nfunction mean(arr) {\n    return sum(arr) / arr.length;\n}\nexports.mean = mean;\n/**\n * @link https://lodash.com/docs/4.17.15#meanBy\n * @param arr\n * @param fn\n * @returns\n */\nfunction meanBy(arr, fn) {\n    return sumBy(arr, fn) / arr.length;\n}\nexports.meanBy = meanBy;\n/**\n * @link https://lodash.com/docs/4.17.15#min\n * @param arr\n * @returns\n */\nfunction min(arr) {\n    return Math.min.apply(Math, arr);\n}\nexports.min = min;\n/**\n * @link https://lodash.com/docs/4.17.15#minBy\n * @param arr\n * @param fn\n * @returns\n */\nfunction minBy(arr, fn) {\n    return getBy(arr, fn, Math.min);\n}\nexports.minBy = minBy;\n/**\n * @link https://lodash.com/docs/4.17.15#multiply\n * @param multiplier\n * @param multiplicand\n * @returns\n */\nfunction multiply(multiplier, multiplicand) {\n    return multiplier * multiplicand;\n}\nexports.multiply = multiply;\n/**\n * @link https://lodash.com/docs/4.17.15#round\n * @param num\n * @param precision\n * @returns\n */\nfunction round(num, precision) {\n    if (precision === void 0) { precision = 0; }\n    return mathOp(num, Math.round, precision);\n}\nexports.round = round;\n/**\n * @link https://lodash.com/docs/4.17.15#subtract\n * @param a\n * @param b\n * @returns\n */\nfunction subtract(minuend, subtrahend) {\n    return minuend - subtrahend;\n}\nexports.subtract = subtract;\n/**\n * Perform a modulus operation between two numbers.\n * @param a\n * @param b\n * @returns\n */\nfunction mod(a, b) {\n    return a % b;\n}\nexports.mod = mod;\n/**\n * @link https://lodash.com/docs/4.17.15#sum\n * @param arr\n * @returns\n */\nfunction sum(arr) {\n    return arr.reduce(add, 0);\n}\nexports.sum = sum;\n/**\n * @link https://lodash.com/docs/4.17.15#sumBy\n * @param arr\n * @param fn\n * @returns\n */\nfunction sumBy(arr, fn) {\n    return getBy(arr, fn, function (a, b) { return (a + b); });\n}\nexports.sumBy = sumBy;\n\n\n//# sourceURL=webpack://Formio/./node_modules/@formio/lodash/lib/math.js?");

/***/ }),

/***/ "./node_modules/@formio/lodash/lib/object.js":
/*!***************************************************!*\
  !*** ./node_modules/@formio/lodash/lib/object.js ***!
  \***************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.pick = exports.defaults = exports.cloneDeep = exports.fastCloneDeep = exports.merge = exports.set = exports.has = exports.propertyOf = exports.property = exports.get = exports.pathParts = exports.values = exports.keys = void 0;\nvar lang_1 = __webpack_require__(/*! ./lang */ \"./node_modules/@formio/lodash/lib/lang.js\");\nvar array_1 = __webpack_require__(/*! ./array */ \"./node_modules/@formio/lodash/lib/array.js\");\n/**\n * Get the keys of an Object.\n * @param obj\n */\nfunction keys(obj) {\n    return Object.keys(obj);\n}\nexports.keys = keys;\n;\n/**\n * Return the values of an object or an array.\n * @param obj\n * @returns\n */\nfunction values(obj) {\n    return lang_1.isArray(obj) ? obj : Object.values(obj);\n}\nexports.values = values;\n/**\n * Retrieve the path parts provided a path string.\n * @param path\n */\nfunction pathParts(path) {\n    if (!path) {\n        return [];\n    }\n    if (path[0] === '[') {\n        path = path.replace(/^\\[([^\\]]+)\\]/, '$1');\n    }\n    return path.\n        replace(/\\[/g, '.').\n        replace(/\\]/g, '').\n        split('.');\n}\nexports.pathParts = pathParts;\n/**\n * Get the value from an object or an array provided a path.\n *\n * @param obj\n * @param path\n * @param def\n */\nfunction get(obj, path, def) {\n    var val = pathParts(path).reduce(function (o, k) { return (o || {})[k]; }, obj);\n    return (typeof def !== 'undefined' &&\n        typeof val === 'undefined') ? def : val;\n}\nexports.get = get;\nfunction property(path) {\n    return function (obj) { return get(obj, path); };\n}\nexports.property = property;\nfunction propertyOf(obj) {\n    return function (path) { return get(obj, path); };\n}\nexports.propertyOf = propertyOf;\n/**\n * Determine if a value is set.\n *\n * @param obj\n * @param path\n */\nfunction has(obj, path) {\n    return get(obj, path, undefined) !== undefined;\n}\nexports.has = has;\n/**\n * Sets the value of an item within an array or object.\n * @param obj\n * @param path\n * @param value\n */\nfunction set(obj, path, value) {\n    var parts = pathParts(path);\n    parts.reduce(function (o, k, i) {\n        if (!isNaN(Number(k))) {\n            k = Number(k);\n        }\n        if ((Array.isArray(o) ? (k >= o.length) : !o.hasOwnProperty(k)) ||\n            ((i < (parts.length - 1)) && !Array.isArray(o[k]) && !lang_1.isObject(o[k]))) {\n            o[k] = !isNaN(Number(parts[i + 1])) ? [] : {};\n        }\n        if (i === (parts.length - 1)) {\n            o[k] = value;\n        }\n        return o[k];\n    }, obj);\n    return obj;\n}\nexports.set = set;\n;\nfunction propertyIsOnObject(object, property) {\n    try {\n        return property in object;\n    }\n    catch (_) {\n        return false;\n    }\n}\n// Protects from prototype poisoning and unexpected merging up the prototype chain.\nfunction propertyIsUnsafe(target, key) {\n    return propertyIsOnObject(target, key) // Properties are safe to merge if they don't exist in the target yet,\n        && !(Object.hasOwnProperty.call(target, key) // unsafe if they exist up the prototype chain,\n            && Object.propertyIsEnumerable.call(target, key)); // and also unsafe if they're nonenumerable.\n}\n/**\n * Merge a single object.\n *\n * @param target\n * @param source\n * @returns\n */\nfunction mergeObject(target, source) {\n    for (var key in source) {\n        if (source.hasOwnProperty(key)) {\n            if (propertyIsUnsafe(target, key)) {\n                return;\n            }\n            if (propertyIsOnObject(target, key)) {\n                target[key] = merge(target[key], source[key]);\n            }\n            else {\n                target[key] = cloneDeep(source[key]);\n            }\n        }\n    }\n    return target;\n}\n/**\n * Merge two arrays.\n * @param target\n * @param source\n */\nfunction mergeArray(target, source) {\n    source.forEach(function (subSource, index) {\n        target[index] = merge(target[index], subSource);\n    });\n    return target;\n}\n/**\n * Merges a complex data object.\n *\n * @param a\n * @param b\n * @param options\n */\nfunction merge() {\n    var args = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n        args[_i] = arguments[_i];\n    }\n    var first = args.shift();\n    return args.reduce(function (target, source, index) {\n        if (!target || (target === source)) {\n            return cloneDeep(source);\n        }\n        else if (lang_1.isArray(source)) {\n            // If there is no target array, then make it one.\n            if (!lang_1.isArray(target)) {\n                args[index] = target = [];\n            }\n            return mergeArray(target, source);\n        }\n        else if (lang_1.isPlainObject(source)) {\n            return mergeObject(target, source);\n        }\n        else {\n            return cloneDeep(source);\n        }\n    }, first);\n}\nexports.merge = merge;\n/**\n * Performs a fast clone deep operation.\n *\n * @param obj\n */\nfunction fastCloneDeep(obj) {\n    try {\n        return JSON.parse(JSON.stringify(obj));\n    }\n    catch (err) {\n        console.log(\"Clone Failed: \" + err.message);\n        return null;\n    }\n}\nexports.fastCloneDeep = fastCloneDeep;\n/**\n * Performs a recursive cloneDeep operation.\n * @param src\n * @returns\n */\nfunction cloneDeep(src) {\n    if (Array.isArray(src)) { // for arrays\n        return src.map(cloneDeep);\n    }\n    if (src === null || typeof src !== 'object') { // for primitives / functions / non-references/pointers\n        return src;\n    }\n    return Object.fromEntries(Object.entries(src).map(function (_a) {\n        var key = _a[0], val = _a[1];\n        return ([key, cloneDeep(val)]);\n    }));\n}\nexports.cloneDeep = cloneDeep;\n/**\n * Sets the defaults of an object.\n *\n * @param obj\n * @param defs\n */\nfunction defaults(obj, defs) {\n    array_1.each(defs, function (value, key) {\n        if (!obj.hasOwnProperty(key)) {\n            obj[key] = value;\n        }\n    });\n    return obj;\n}\nexports.defaults = defaults;\n/**\n * Pick an item in an object.\n * @param object\n * @param keys\n */\nfunction pick(object, keys) {\n    return keys.reduce(function (obj, key) {\n        if (object && object.hasOwnProperty(key)) {\n            obj[key] = object[key];\n        }\n        return obj;\n    }, {});\n}\nexports.pick = pick;\n;\n\n\n//# sourceURL=webpack://Formio/./node_modules/@formio/lodash/lib/object.js?");

/***/ }),

/***/ "./node_modules/@formio/lodash/lib/string.js":
/*!***************************************************!*\
  !*** ./node_modules/@formio/lodash/lib/string.js ***!
  \***************************************************/
/***/ (function(__unused_webpack_module, exports) {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.trim = void 0;\n// From https://youmightnotneed.com/lodash/#trim\nfunction trim(str, c) {\n    if (c === void 0) { c = '\\\\s'; }\n    return str.replace(new RegExp(\"^([\" + c + \"]*)(.*?)([\" + c + \"]*)$\"), '$2');\n}\nexports.trim = trim;\n\n\n//# sourceURL=webpack://Formio/./node_modules/@formio/lodash/lib/string.js?");

/***/ }),

/***/ "./node_modules/eventemitter3/index.js":
/*!*********************************************!*\
  !*** ./node_modules/eventemitter3/index.js ***!
  \*********************************************/
/***/ (function(module) {

"use strict";
eval("\n\nvar has = Object.prototype.hasOwnProperty\n  , prefix = '~';\n\n/**\n * Constructor to create a storage for our `EE` objects.\n * An `Events` instance is a plain object whose properties are event names.\n *\n * @constructor\n * @private\n */\nfunction Events() {}\n\n//\n// We try to not inherit from `Object.prototype`. In some engines creating an\n// instance in this way is faster than calling `Object.create(null)` directly.\n// If `Object.create(null)` is not supported we prefix the event names with a\n// character to make sure that the built-in object properties are not\n// overridden or used as an attack vector.\n//\nif (Object.create) {\n  Events.prototype = Object.create(null);\n\n  //\n  // This hack is needed because the `__proto__` property is still inherited in\n  // some old browsers like Android 4, iPhone 5.1, Opera 11 and Safari 5.\n  //\n  if (!new Events().__proto__) prefix = false;\n}\n\n/**\n * Representation of a single event listener.\n *\n * @param {Function} fn The listener function.\n * @param {*} context The context to invoke the listener with.\n * @param {Boolean} [once=false] Specify if the listener is a one-time listener.\n * @constructor\n * @private\n */\nfunction EE(fn, context, once) {\n  this.fn = fn;\n  this.context = context;\n  this.once = once || false;\n}\n\n/**\n * Add a listener for a given event.\n *\n * @param {EventEmitter} emitter Reference to the `EventEmitter` instance.\n * @param {(String|Symbol)} event The event name.\n * @param {Function} fn The listener function.\n * @param {*} context The context to invoke the listener with.\n * @param {Boolean} once Specify if the listener is a one-time listener.\n * @returns {EventEmitter}\n * @private\n */\nfunction addListener(emitter, event, fn, context, once) {\n  if (typeof fn !== 'function') {\n    throw new TypeError('The listener must be a function');\n  }\n\n  var listener = new EE(fn, context || emitter, once)\n    , evt = prefix ? prefix + event : event;\n\n  if (!emitter._events[evt]) emitter._events[evt] = listener, emitter._eventsCount++;\n  else if (!emitter._events[evt].fn) emitter._events[evt].push(listener);\n  else emitter._events[evt] = [emitter._events[evt], listener];\n\n  return emitter;\n}\n\n/**\n * Clear event by name.\n *\n * @param {EventEmitter} emitter Reference to the `EventEmitter` instance.\n * @param {(String|Symbol)} evt The Event name.\n * @private\n */\nfunction clearEvent(emitter, evt) {\n  if (--emitter._eventsCount === 0) emitter._events = new Events();\n  else delete emitter._events[evt];\n}\n\n/**\n * Minimal `EventEmitter` interface that is molded against the Node.js\n * `EventEmitter` interface.\n *\n * @constructor\n * @public\n */\nfunction EventEmitter() {\n  this._events = new Events();\n  this._eventsCount = 0;\n}\n\n/**\n * Return an array listing the events for which the emitter has registered\n * listeners.\n *\n * @returns {Array}\n * @public\n */\nEventEmitter.prototype.eventNames = function eventNames() {\n  var names = []\n    , events\n    , name;\n\n  if (this._eventsCount === 0) return names;\n\n  for (name in (events = this._events)) {\n    if (has.call(events, name)) names.push(prefix ? name.slice(1) : name);\n  }\n\n  if (Object.getOwnPropertySymbols) {\n    return names.concat(Object.getOwnPropertySymbols(events));\n  }\n\n  return names;\n};\n\n/**\n * Return the listeners registered for a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @returns {Array} The registered listeners.\n * @public\n */\nEventEmitter.prototype.listeners = function listeners(event) {\n  var evt = prefix ? prefix + event : event\n    , handlers = this._events[evt];\n\n  if (!handlers) return [];\n  if (handlers.fn) return [handlers.fn];\n\n  for (var i = 0, l = handlers.length, ee = new Array(l); i < l; i++) {\n    ee[i] = handlers[i].fn;\n  }\n\n  return ee;\n};\n\n/**\n * Return the number of listeners listening to a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @returns {Number} The number of listeners.\n * @public\n */\nEventEmitter.prototype.listenerCount = function listenerCount(event) {\n  var evt = prefix ? prefix + event : event\n    , listeners = this._events[evt];\n\n  if (!listeners) return 0;\n  if (listeners.fn) return 1;\n  return listeners.length;\n};\n\n/**\n * Calls each of the listeners registered for a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @returns {Boolean} `true` if the event had listeners, else `false`.\n * @public\n */\nEventEmitter.prototype.emit = function emit(event, a1, a2, a3, a4, a5) {\n  var evt = prefix ? prefix + event : event;\n\n  if (!this._events[evt]) return false;\n\n  var listeners = this._events[evt]\n    , len = arguments.length\n    , args\n    , i;\n\n  if (listeners.fn) {\n    if (listeners.once) this.removeListener(event, listeners.fn, undefined, true);\n\n    switch (len) {\n      case 1: return listeners.fn.call(listeners.context), true;\n      case 2: return listeners.fn.call(listeners.context, a1), true;\n      case 3: return listeners.fn.call(listeners.context, a1, a2), true;\n      case 4: return listeners.fn.call(listeners.context, a1, a2, a3), true;\n      case 5: return listeners.fn.call(listeners.context, a1, a2, a3, a4), true;\n      case 6: return listeners.fn.call(listeners.context, a1, a2, a3, a4, a5), true;\n    }\n\n    for (i = 1, args = new Array(len -1); i < len; i++) {\n      args[i - 1] = arguments[i];\n    }\n\n    listeners.fn.apply(listeners.context, args);\n  } else {\n    var length = listeners.length\n      , j;\n\n    for (i = 0; i < length; i++) {\n      if (listeners[i].once) this.removeListener(event, listeners[i].fn, undefined, true);\n\n      switch (len) {\n        case 1: listeners[i].fn.call(listeners[i].context); break;\n        case 2: listeners[i].fn.call(listeners[i].context, a1); break;\n        case 3: listeners[i].fn.call(listeners[i].context, a1, a2); break;\n        case 4: listeners[i].fn.call(listeners[i].context, a1, a2, a3); break;\n        default:\n          if (!args) for (j = 1, args = new Array(len -1); j < len; j++) {\n            args[j - 1] = arguments[j];\n          }\n\n          listeners[i].fn.apply(listeners[i].context, args);\n      }\n    }\n  }\n\n  return true;\n};\n\n/**\n * Add a listener for a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @param {Function} fn The listener function.\n * @param {*} [context=this] The context to invoke the listener with.\n * @returns {EventEmitter} `this`.\n * @public\n */\nEventEmitter.prototype.on = function on(event, fn, context) {\n  return addListener(this, event, fn, context, false);\n};\n\n/**\n * Add a one-time listener for a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @param {Function} fn The listener function.\n * @param {*} [context=this] The context to invoke the listener with.\n * @returns {EventEmitter} `this`.\n * @public\n */\nEventEmitter.prototype.once = function once(event, fn, context) {\n  return addListener(this, event, fn, context, true);\n};\n\n/**\n * Remove the listeners of a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @param {Function} fn Only remove the listeners that match this function.\n * @param {*} context Only remove the listeners that have this context.\n * @param {Boolean} once Only remove one-time listeners.\n * @returns {EventEmitter} `this`.\n * @public\n */\nEventEmitter.prototype.removeListener = function removeListener(event, fn, context, once) {\n  var evt = prefix ? prefix + event : event;\n\n  if (!this._events[evt]) return this;\n  if (!fn) {\n    clearEvent(this, evt);\n    return this;\n  }\n\n  var listeners = this._events[evt];\n\n  if (listeners.fn) {\n    if (\n      listeners.fn === fn &&\n      (!once || listeners.once) &&\n      (!context || listeners.context === context)\n    ) {\n      clearEvent(this, evt);\n    }\n  } else {\n    for (var i = 0, events = [], length = listeners.length; i < length; i++) {\n      if (\n        listeners[i].fn !== fn ||\n        (once && !listeners[i].once) ||\n        (context && listeners[i].context !== context)\n      ) {\n        events.push(listeners[i]);\n      }\n    }\n\n    //\n    // Reset the array, or remove it completely if we have no more listeners.\n    //\n    if (events.length) this._events[evt] = events.length === 1 ? events[0] : events;\n    else clearEvent(this, evt);\n  }\n\n  return this;\n};\n\n/**\n * Remove all listeners, or those of the specified event.\n *\n * @param {(String|Symbol)} [event] The event name.\n * @returns {EventEmitter} `this`.\n * @public\n */\nEventEmitter.prototype.removeAllListeners = function removeAllListeners(event) {\n  var evt;\n\n  if (event) {\n    evt = prefix ? prefix + event : event;\n    if (this._events[evt]) clearEvent(this, evt);\n  } else {\n    this._events = new Events();\n    this._eventsCount = 0;\n  }\n\n  return this;\n};\n\n//\n// Alias methods names because people roll like that.\n//\nEventEmitter.prototype.off = EventEmitter.prototype.removeListener;\nEventEmitter.prototype.addListener = EventEmitter.prototype.on;\n\n//\n// Expose the prefix.\n//\nEventEmitter.prefixed = prefix;\n\n//\n// Allow `EventEmitter` to be imported as module namespace.\n//\nEventEmitter.EventEmitter = EventEmitter;\n\n//\n// Expose the module.\n//\nif (true) {\n  module.exports = EventEmitter;\n}\n\n\n//# sourceURL=webpack://Formio/./node_modules/eventemitter3/index.js?");

/***/ }),

/***/ "./node_modules/fetch-ponyfill/build/fetch-browser.js":
/*!************************************************************!*\
  !*** ./node_modules/fetch-ponyfill/build/fetch-browser.js ***!
  \************************************************************/
/***/ (function(module, exports, __webpack_require__) {

eval("var __WEBPACK_AMD_DEFINE_RESULT__;(function (global) {\n  'use strict';\n\n  function fetchPonyfill(options) {\n    var Promise = options && options.Promise || global.Promise;\n    var XMLHttpRequest = options && options.XMLHttpRequest || global.XMLHttpRequest;\n\n    return (function () {\n      var globalThis = Object.create(global, {\n        fetch: {\n          value: undefined,\n          writable: true\n        }\n      });\n\n      (function (global, factory) {\n         true ? factory(exports) :\n        0;\n      }(this, (function (exports) { 'use strict';\n\n        var global =\n          (typeof globalThis !== 'undefined' && globalThis) ||\n          (typeof self !== 'undefined' && self) ||\n          (typeof global !== 'undefined' && global);\n\n        var support = {\n          searchParams: 'URLSearchParams' in global,\n          iterable: 'Symbol' in global && 'iterator' in Symbol,\n          blob:\n            'FileReader' in global &&\n            'Blob' in global &&\n            (function() {\n              try {\n                new Blob();\n                return true\n              } catch (e) {\n                return false\n              }\n            })(),\n          formData: 'FormData' in global,\n          arrayBuffer: 'ArrayBuffer' in global\n        };\n\n        function isDataView(obj) {\n          return obj && DataView.prototype.isPrototypeOf(obj)\n        }\n\n        if (support.arrayBuffer) {\n          var viewClasses = [\n            '[object Int8Array]',\n            '[object Uint8Array]',\n            '[object Uint8ClampedArray]',\n            '[object Int16Array]',\n            '[object Uint16Array]',\n            '[object Int32Array]',\n            '[object Uint32Array]',\n            '[object Float32Array]',\n            '[object Float64Array]'\n          ];\n\n          var isArrayBufferView =\n            ArrayBuffer.isView ||\n            function(obj) {\n              return obj && viewClasses.indexOf(Object.prototype.toString.call(obj)) > -1\n            };\n        }\n\n        function normalizeName(name) {\n          if (typeof name !== 'string') {\n            name = String(name);\n          }\n          if (/[^a-z0-9\\-#$%&'*+.^_`|~!]/i.test(name) || name === '') {\n            throw new TypeError('Invalid character in header field name')\n          }\n          return name.toLowerCase()\n        }\n\n        function normalizeValue(value) {\n          if (typeof value !== 'string') {\n            value = String(value);\n          }\n          return value\n        }\n\n        // Build a destructive iterator for the value list\n        function iteratorFor(items) {\n          var iterator = {\n            next: function() {\n              var value = items.shift();\n              return {done: value === undefined, value: value}\n            }\n          };\n\n          if (support.iterable) {\n            iterator[Symbol.iterator] = function() {\n              return iterator\n            };\n          }\n\n          return iterator\n        }\n\n        function Headers(headers) {\n          this.map = {};\n\n          if (headers instanceof Headers) {\n            headers.forEach(function(value, name) {\n              this.append(name, value);\n            }, this);\n          } else if (Array.isArray(headers)) {\n            headers.forEach(function(header) {\n              this.append(header[0], header[1]);\n            }, this);\n          } else if (headers) {\n            Object.getOwnPropertyNames(headers).forEach(function(name) {\n              this.append(name, headers[name]);\n            }, this);\n          }\n        }\n\n        Headers.prototype.append = function(name, value) {\n          name = normalizeName(name);\n          value = normalizeValue(value);\n          var oldValue = this.map[name];\n          this.map[name] = oldValue ? oldValue + ', ' + value : value;\n        };\n\n        Headers.prototype['delete'] = function(name) {\n          delete this.map[normalizeName(name)];\n        };\n\n        Headers.prototype.get = function(name) {\n          name = normalizeName(name);\n          return this.has(name) ? this.map[name] : null\n        };\n\n        Headers.prototype.has = function(name) {\n          return this.map.hasOwnProperty(normalizeName(name))\n        };\n\n        Headers.prototype.set = function(name, value) {\n          this.map[normalizeName(name)] = normalizeValue(value);\n        };\n\n        Headers.prototype.forEach = function(callback, thisArg) {\n          for (var name in this.map) {\n            if (this.map.hasOwnProperty(name)) {\n              callback.call(thisArg, this.map[name], name, this);\n            }\n          }\n        };\n\n        Headers.prototype.keys = function() {\n          var items = [];\n          this.forEach(function(value, name) {\n            items.push(name);\n          });\n          return iteratorFor(items)\n        };\n\n        Headers.prototype.values = function() {\n          var items = [];\n          this.forEach(function(value) {\n            items.push(value);\n          });\n          return iteratorFor(items)\n        };\n\n        Headers.prototype.entries = function() {\n          var items = [];\n          this.forEach(function(value, name) {\n            items.push([name, value]);\n          });\n          return iteratorFor(items)\n        };\n\n        if (support.iterable) {\n          Headers.prototype[Symbol.iterator] = Headers.prototype.entries;\n        }\n\n        function consumed(body) {\n          if (body.bodyUsed) {\n            return Promise.reject(new TypeError('Already read'))\n          }\n          body.bodyUsed = true;\n        }\n\n        function fileReaderReady(reader) {\n          return new Promise(function(resolve, reject) {\n            reader.onload = function() {\n              resolve(reader.result);\n            };\n            reader.onerror = function() {\n              reject(reader.error);\n            };\n          })\n        }\n\n        function readBlobAsArrayBuffer(blob) {\n          var reader = new FileReader();\n          var promise = fileReaderReady(reader);\n          reader.readAsArrayBuffer(blob);\n          return promise\n        }\n\n        function readBlobAsText(blob) {\n          var reader = new FileReader();\n          var promise = fileReaderReady(reader);\n          reader.readAsText(blob);\n          return promise\n        }\n\n        function readArrayBufferAsText(buf) {\n          var view = new Uint8Array(buf);\n          var chars = new Array(view.length);\n\n          for (var i = 0; i < view.length; i++) {\n            chars[i] = String.fromCharCode(view[i]);\n          }\n          return chars.join('')\n        }\n\n        function bufferClone(buf) {\n          if (buf.slice) {\n            return buf.slice(0)\n          } else {\n            var view = new Uint8Array(buf.byteLength);\n            view.set(new Uint8Array(buf));\n            return view.buffer\n          }\n        }\n\n        function Body() {\n          this.bodyUsed = false;\n\n          this._initBody = function(body) {\n            /*\n              fetch-mock wraps the Response object in an ES6 Proxy to\n              provide useful test harness features such as flush. However, on\n              ES5 browsers without fetch or Proxy support pollyfills must be used;\n              the proxy-pollyfill is unable to proxy an attribute unless it exists\n              on the object before the Proxy is created. This change ensures\n              Response.bodyUsed exists on the instance, while maintaining the\n              semantic of setting Request.bodyUsed in the constructor before\n              _initBody is called.\n            */\n            this.bodyUsed = this.bodyUsed;\n            this._bodyInit = body;\n            if (!body) {\n              this._bodyText = '';\n            } else if (typeof body === 'string') {\n              this._bodyText = body;\n            } else if (support.blob && Blob.prototype.isPrototypeOf(body)) {\n              this._bodyBlob = body;\n            } else if (support.formData && FormData.prototype.isPrototypeOf(body)) {\n              this._bodyFormData = body;\n            } else if (support.searchParams && URLSearchParams.prototype.isPrototypeOf(body)) {\n              this._bodyText = body.toString();\n            } else if (support.arrayBuffer && support.blob && isDataView(body)) {\n              this._bodyArrayBuffer = bufferClone(body.buffer);\n              // IE 10-11 can't handle a DataView body.\n              this._bodyInit = new Blob([this._bodyArrayBuffer]);\n            } else if (support.arrayBuffer && (ArrayBuffer.prototype.isPrototypeOf(body) || isArrayBufferView(body))) {\n              this._bodyArrayBuffer = bufferClone(body);\n            } else {\n              this._bodyText = body = Object.prototype.toString.call(body);\n            }\n\n            if (!this.headers.get('content-type')) {\n              if (typeof body === 'string') {\n                this.headers.set('content-type', 'text/plain;charset=UTF-8');\n              } else if (this._bodyBlob && this._bodyBlob.type) {\n                this.headers.set('content-type', this._bodyBlob.type);\n              } else if (support.searchParams && URLSearchParams.prototype.isPrototypeOf(body)) {\n                this.headers.set('content-type', 'application/x-www-form-urlencoded;charset=UTF-8');\n              }\n            }\n          };\n\n          if (support.blob) {\n            this.blob = function() {\n              var rejected = consumed(this);\n              if (rejected) {\n                return rejected\n              }\n\n              if (this._bodyBlob) {\n                return Promise.resolve(this._bodyBlob)\n              } else if (this._bodyArrayBuffer) {\n                return Promise.resolve(new Blob([this._bodyArrayBuffer]))\n              } else if (this._bodyFormData) {\n                throw new Error('could not read FormData body as blob')\n              } else {\n                return Promise.resolve(new Blob([this._bodyText]))\n              }\n            };\n\n            this.arrayBuffer = function() {\n              if (this._bodyArrayBuffer) {\n                var isConsumed = consumed(this);\n                if (isConsumed) {\n                  return isConsumed\n                }\n                if (ArrayBuffer.isView(this._bodyArrayBuffer)) {\n                  return Promise.resolve(\n                    this._bodyArrayBuffer.buffer.slice(\n                      this._bodyArrayBuffer.byteOffset,\n                      this._bodyArrayBuffer.byteOffset + this._bodyArrayBuffer.byteLength\n                    )\n                  )\n                } else {\n                  return Promise.resolve(this._bodyArrayBuffer)\n                }\n              } else {\n                return this.blob().then(readBlobAsArrayBuffer)\n              }\n            };\n          }\n\n          this.text = function() {\n            var rejected = consumed(this);\n            if (rejected) {\n              return rejected\n            }\n\n            if (this._bodyBlob) {\n              return readBlobAsText(this._bodyBlob)\n            } else if (this._bodyArrayBuffer) {\n              return Promise.resolve(readArrayBufferAsText(this._bodyArrayBuffer))\n            } else if (this._bodyFormData) {\n              throw new Error('could not read FormData body as text')\n            } else {\n              return Promise.resolve(this._bodyText)\n            }\n          };\n\n          if (support.formData) {\n            this.formData = function() {\n              return this.text().then(decode)\n            };\n          }\n\n          this.json = function() {\n            return this.text().then(JSON.parse)\n          };\n\n          return this\n        }\n\n        // HTTP methods whose capitalization should be normalized\n        var methods = ['DELETE', 'GET', 'HEAD', 'OPTIONS', 'POST', 'PUT'];\n\n        function normalizeMethod(method) {\n          var upcased = method.toUpperCase();\n          return methods.indexOf(upcased) > -1 ? upcased : method\n        }\n\n        function Request(input, options) {\n          if (!(this instanceof Request)) {\n            throw new TypeError('Please use the \"new\" operator, this DOM object constructor cannot be called as a function.')\n          }\n\n          options = options || {};\n          var body = options.body;\n\n          if (input instanceof Request) {\n            if (input.bodyUsed) {\n              throw new TypeError('Already read')\n            }\n            this.url = input.url;\n            this.credentials = input.credentials;\n            if (!options.headers) {\n              this.headers = new Headers(input.headers);\n            }\n            this.method = input.method;\n            this.mode = input.mode;\n            this.signal = input.signal;\n            if (!body && input._bodyInit != null) {\n              body = input._bodyInit;\n              input.bodyUsed = true;\n            }\n          } else {\n            this.url = String(input);\n          }\n\n          this.credentials = options.credentials || this.credentials || 'same-origin';\n          if (options.headers || !this.headers) {\n            this.headers = new Headers(options.headers);\n          }\n          this.method = normalizeMethod(options.method || this.method || 'GET');\n          this.mode = options.mode || this.mode || null;\n          this.signal = options.signal || this.signal;\n          this.referrer = null;\n\n          if ((this.method === 'GET' || this.method === 'HEAD') && body) {\n            throw new TypeError('Body not allowed for GET or HEAD requests')\n          }\n          this._initBody(body);\n\n          if (this.method === 'GET' || this.method === 'HEAD') {\n            if (options.cache === 'no-store' || options.cache === 'no-cache') {\n              // Search for a '_' parameter in the query string\n              var reParamSearch = /([?&])_=[^&]*/;\n              if (reParamSearch.test(this.url)) {\n                // If it already exists then set the value with the current time\n                this.url = this.url.replace(reParamSearch, '$1_=' + new Date().getTime());\n              } else {\n                // Otherwise add a new '_' parameter to the end with the current time\n                var reQueryString = /\\?/;\n                this.url += (reQueryString.test(this.url) ? '&' : '?') + '_=' + new Date().getTime();\n              }\n            }\n          }\n        }\n\n        Request.prototype.clone = function() {\n          return new Request(this, {body: this._bodyInit})\n        };\n\n        function decode(body) {\n          var form = new FormData();\n          body\n            .trim()\n            .split('&')\n            .forEach(function(bytes) {\n              if (bytes) {\n                var split = bytes.split('=');\n                var name = split.shift().replace(/\\+/g, ' ');\n                var value = split.join('=').replace(/\\+/g, ' ');\n                form.append(decodeURIComponent(name), decodeURIComponent(value));\n              }\n            });\n          return form\n        }\n\n        function parseHeaders(rawHeaders) {\n          var headers = new Headers();\n          // Replace instances of \\r\\n and \\n followed by at least one space or horizontal tab with a space\n          // https://tools.ietf.org/html/rfc7230#section-3.2\n          var preProcessedHeaders = rawHeaders.replace(/\\r?\\n[\\t ]+/g, ' ');\n          // Avoiding split via regex to work around a common IE11 bug with the core-js 3.6.0 regex polyfill\n          // https://github.com/github/fetch/issues/748\n          // https://github.com/zloirock/core-js/issues/751\n          preProcessedHeaders\n            .split('\\r')\n            .map(function(header) {\n              return header.indexOf('\\n') === 0 ? header.substr(1, header.length) : header\n            })\n            .forEach(function(line) {\n              var parts = line.split(':');\n              var key = parts.shift().trim();\n              if (key) {\n                var value = parts.join(':').trim();\n                headers.append(key, value);\n              }\n            });\n          return headers\n        }\n\n        Body.call(Request.prototype);\n\n        function Response(bodyInit, options) {\n          if (!(this instanceof Response)) {\n            throw new TypeError('Please use the \"new\" operator, this DOM object constructor cannot be called as a function.')\n          }\n          if (!options) {\n            options = {};\n          }\n\n          this.type = 'default';\n          this.status = options.status === undefined ? 200 : options.status;\n          this.ok = this.status >= 200 && this.status < 300;\n          this.statusText = 'statusText' in options ? options.statusText : '';\n          this.headers = new Headers(options.headers);\n          this.url = options.url || '';\n          this._initBody(bodyInit);\n        }\n\n        Body.call(Response.prototype);\n\n        Response.prototype.clone = function() {\n          return new Response(this._bodyInit, {\n            status: this.status,\n            statusText: this.statusText,\n            headers: new Headers(this.headers),\n            url: this.url\n          })\n        };\n\n        Response.error = function() {\n          var response = new Response(null, {status: 0, statusText: ''});\n          response.type = 'error';\n          return response\n        };\n\n        var redirectStatuses = [301, 302, 303, 307, 308];\n\n        Response.redirect = function(url, status) {\n          if (redirectStatuses.indexOf(status) === -1) {\n            throw new RangeError('Invalid status code')\n          }\n\n          return new Response(null, {status: status, headers: {location: url}})\n        };\n\n        exports.DOMException = global.DOMException;\n        try {\n          new exports.DOMException();\n        } catch (err) {\n          exports.DOMException = function(message, name) {\n            this.message = message;\n            this.name = name;\n            var error = Error(message);\n            this.stack = error.stack;\n          };\n          exports.DOMException.prototype = Object.create(Error.prototype);\n          exports.DOMException.prototype.constructor = exports.DOMException;\n        }\n\n        function fetch(input, init) {\n          return new Promise(function(resolve, reject) {\n            var request = new Request(input, init);\n\n            if (request.signal && request.signal.aborted) {\n              return reject(new exports.DOMException('Aborted', 'AbortError'))\n            }\n\n            var xhr = new XMLHttpRequest();\n\n            function abortXhr() {\n              xhr.abort();\n            }\n\n            xhr.onload = function() {\n              var options = {\n                status: xhr.status,\n                statusText: xhr.statusText,\n                headers: parseHeaders(xhr.getAllResponseHeaders() || '')\n              };\n              options.url = 'responseURL' in xhr ? xhr.responseURL : options.headers.get('X-Request-URL');\n              var body = 'response' in xhr ? xhr.response : xhr.responseText;\n              setTimeout(function() {\n                resolve(new Response(body, options));\n              }, 0);\n            };\n\n            xhr.onerror = function() {\n              setTimeout(function() {\n                reject(new TypeError('Network request failed'));\n              }, 0);\n            };\n\n            xhr.ontimeout = function() {\n              setTimeout(function() {\n                reject(new TypeError('Network request failed'));\n              }, 0);\n            };\n\n            xhr.onabort = function() {\n              setTimeout(function() {\n                reject(new exports.DOMException('Aborted', 'AbortError'));\n              }, 0);\n            };\n\n            function fixUrl(url) {\n              try {\n                return url === '' && global.location.href ? global.location.href : url\n              } catch (e) {\n                return url\n              }\n            }\n\n            xhr.open(request.method, fixUrl(request.url), true);\n\n            if (request.credentials === 'include') {\n              xhr.withCredentials = true;\n            } else if (request.credentials === 'omit') {\n              xhr.withCredentials = false;\n            }\n\n            if ('responseType' in xhr) {\n              if (support.blob) {\n                xhr.responseType = 'blob';\n              } else if (\n                support.arrayBuffer &&\n                request.headers.get('Content-Type') &&\n                request.headers.get('Content-Type').indexOf('application/octet-stream') !== -1\n              ) {\n                xhr.responseType = 'arraybuffer';\n              }\n            }\n\n            if (init && typeof init.headers === 'object' && !(init.headers instanceof Headers)) {\n              Object.getOwnPropertyNames(init.headers).forEach(function(name) {\n                xhr.setRequestHeader(name, normalizeValue(init.headers[name]));\n              });\n            } else {\n              request.headers.forEach(function(value, name) {\n                xhr.setRequestHeader(name, value);\n              });\n            }\n\n            if (request.signal) {\n              request.signal.addEventListener('abort', abortXhr);\n\n              xhr.onreadystatechange = function() {\n                // DONE (success or failure)\n                if (xhr.readyState === 4) {\n                  request.signal.removeEventListener('abort', abortXhr);\n                }\n              };\n            }\n\n            xhr.send(typeof request._bodyInit === 'undefined' ? null : request._bodyInit);\n          })\n        }\n\n        fetch.polyfill = true;\n\n        if (!global.fetch) {\n          global.fetch = fetch;\n          global.Headers = Headers;\n          global.Request = Request;\n          global.Response = Response;\n        }\n\n        exports.Headers = Headers;\n        exports.Request = Request;\n        exports.Response = Response;\n        exports.fetch = fetch;\n\n        Object.defineProperty(exports, '__esModule', { value: true });\n\n      })));\n\n\n      return {\n        fetch: globalThis.fetch,\n        Headers: globalThis.Headers,\n        Request: globalThis.Request,\n        Response: globalThis.Response,\n        DOMException: globalThis.DOMException\n      };\n    }());\n  }\n\n  if (true) {\n    !(__WEBPACK_AMD_DEFINE_RESULT__ = (function () {\n      return fetchPonyfill;\n    }).call(exports, __webpack_require__, exports, module),\n\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n  } else {}\n}(typeof globalThis !== 'undefined' ? globalThis : typeof self !== 'undefined' ? self : typeof __webpack_require__.g !== 'undefined' ? __webpack_require__.g : this));\n\n\n\n//# sourceURL=webpack://Formio/./node_modules/fetch-ponyfill/build/fetch-browser.js?");

/***/ }),

/***/ "./node_modules/uuid/dist/esm-browser/index.js":
/*!*****************************************************!*\
  !*** ./node_modules/uuid/dist/esm-browser/index.js ***!
  \*****************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"v1\": function() { return /* reexport safe */ _v1_js__WEBPACK_IMPORTED_MODULE_0__.default; },\n/* harmony export */   \"v3\": function() { return /* reexport safe */ _v3_js__WEBPACK_IMPORTED_MODULE_1__.default; },\n/* harmony export */   \"v4\": function() { return /* reexport safe */ _v4_js__WEBPACK_IMPORTED_MODULE_2__.default; },\n/* harmony export */   \"v5\": function() { return /* reexport safe */ _v5_js__WEBPACK_IMPORTED_MODULE_3__.default; },\n/* harmony export */   \"NIL\": function() { return /* reexport safe */ _nil_js__WEBPACK_IMPORTED_MODULE_4__.default; },\n/* harmony export */   \"version\": function() { return /* reexport safe */ _version_js__WEBPACK_IMPORTED_MODULE_5__.default; },\n/* harmony export */   \"validate\": function() { return /* reexport safe */ _validate_js__WEBPACK_IMPORTED_MODULE_6__.default; },\n/* harmony export */   \"stringify\": function() { return /* reexport safe */ _stringify_js__WEBPACK_IMPORTED_MODULE_7__.default; },\n/* harmony export */   \"parse\": function() { return /* reexport safe */ _parse_js__WEBPACK_IMPORTED_MODULE_8__.default; }\n/* harmony export */ });\n/* harmony import */ var _v1_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./v1.js */ \"./node_modules/uuid/dist/esm-browser/v1.js\");\n/* harmony import */ var _v3_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./v3.js */ \"./node_modules/uuid/dist/esm-browser/v3.js\");\n/* harmony import */ var _v4_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./v4.js */ \"./node_modules/uuid/dist/esm-browser/v4.js\");\n/* harmony import */ var _v5_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./v5.js */ \"./node_modules/uuid/dist/esm-browser/v5.js\");\n/* harmony import */ var _nil_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./nil.js */ \"./node_modules/uuid/dist/esm-browser/nil.js\");\n/* harmony import */ var _version_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./version.js */ \"./node_modules/uuid/dist/esm-browser/version.js\");\n/* harmony import */ var _validate_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./validate.js */ \"./node_modules/uuid/dist/esm-browser/validate.js\");\n/* harmony import */ var _stringify_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./stringify.js */ \"./node_modules/uuid/dist/esm-browser/stringify.js\");\n/* harmony import */ var _parse_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./parse.js */ \"./node_modules/uuid/dist/esm-browser/parse.js\");\n\n\n\n\n\n\n\n\n\n\n//# sourceURL=webpack://Formio/./node_modules/uuid/dist/esm-browser/index.js?");

/***/ }),

/***/ "./node_modules/uuid/dist/esm-browser/md5.js":
/*!***************************************************!*\
  !*** ./node_modules/uuid/dist/esm-browser/md5.js ***!
  \***************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": function() { return __WEBPACK_DEFAULT_EXPORT__; }\n/* harmony export */ });\n/*\n * Browser-compatible JavaScript MD5\n *\n * Modification of JavaScript MD5\n * https://github.com/blueimp/JavaScript-MD5\n *\n * Copyright 2011, Sebastian Tschan\n * https://blueimp.net\n *\n * Licensed under the MIT license:\n * https://opensource.org/licenses/MIT\n *\n * Based on\n * A JavaScript implementation of the RSA Data Security, Inc. MD5 Message\n * Digest Algorithm, as defined in RFC 1321.\n * Version 2.2 Copyright (C) Paul Johnston 1999 - 2009\n * Other contributors: Greg Holt, Andrew Kepert, Ydnar, Lostinet\n * Distributed under the BSD License\n * See http://pajhome.org.uk/crypt/md5 for more info.\n */\nfunction md5(bytes) {\n  if (typeof bytes === 'string') {\n    var msg = unescape(encodeURIComponent(bytes)); // UTF8 escape\n\n    bytes = new Uint8Array(msg.length);\n\n    for (var i = 0; i < msg.length; ++i) {\n      bytes[i] = msg.charCodeAt(i);\n    }\n  }\n\n  return md5ToHexEncodedArray(wordsToMd5(bytesToWords(bytes), bytes.length * 8));\n}\n/*\n * Convert an array of little-endian words to an array of bytes\n */\n\n\nfunction md5ToHexEncodedArray(input) {\n  var output = [];\n  var length32 = input.length * 32;\n  var hexTab = '0123456789abcdef';\n\n  for (var i = 0; i < length32; i += 8) {\n    var x = input[i >> 5] >>> i % 32 & 0xff;\n    var hex = parseInt(hexTab.charAt(x >>> 4 & 0x0f) + hexTab.charAt(x & 0x0f), 16);\n    output.push(hex);\n  }\n\n  return output;\n}\n/**\n * Calculate output length with padding and bit length\n */\n\n\nfunction getOutputLength(inputLength8) {\n  return (inputLength8 + 64 >>> 9 << 4) + 14 + 1;\n}\n/*\n * Calculate the MD5 of an array of little-endian words, and a bit length.\n */\n\n\nfunction wordsToMd5(x, len) {\n  /* append padding */\n  x[len >> 5] |= 0x80 << len % 32;\n  x[getOutputLength(len) - 1] = len;\n  var a = 1732584193;\n  var b = -271733879;\n  var c = -1732584194;\n  var d = 271733878;\n\n  for (var i = 0; i < x.length; i += 16) {\n    var olda = a;\n    var oldb = b;\n    var oldc = c;\n    var oldd = d;\n    a = md5ff(a, b, c, d, x[i], 7, -680876936);\n    d = md5ff(d, a, b, c, x[i + 1], 12, -389564586);\n    c = md5ff(c, d, a, b, x[i + 2], 17, 606105819);\n    b = md5ff(b, c, d, a, x[i + 3], 22, -1044525330);\n    a = md5ff(a, b, c, d, x[i + 4], 7, -176418897);\n    d = md5ff(d, a, b, c, x[i + 5], 12, 1200080426);\n    c = md5ff(c, d, a, b, x[i + 6], 17, -1473231341);\n    b = md5ff(b, c, d, a, x[i + 7], 22, -45705983);\n    a = md5ff(a, b, c, d, x[i + 8], 7, 1770035416);\n    d = md5ff(d, a, b, c, x[i + 9], 12, -1958414417);\n    c = md5ff(c, d, a, b, x[i + 10], 17, -42063);\n    b = md5ff(b, c, d, a, x[i + 11], 22, -1990404162);\n    a = md5ff(a, b, c, d, x[i + 12], 7, 1804603682);\n    d = md5ff(d, a, b, c, x[i + 13], 12, -40341101);\n    c = md5ff(c, d, a, b, x[i + 14], 17, -1502002290);\n    b = md5ff(b, c, d, a, x[i + 15], 22, 1236535329);\n    a = md5gg(a, b, c, d, x[i + 1], 5, -165796510);\n    d = md5gg(d, a, b, c, x[i + 6], 9, -1069501632);\n    c = md5gg(c, d, a, b, x[i + 11], 14, 643717713);\n    b = md5gg(b, c, d, a, x[i], 20, -373897302);\n    a = md5gg(a, b, c, d, x[i + 5], 5, -701558691);\n    d = md5gg(d, a, b, c, x[i + 10], 9, 38016083);\n    c = md5gg(c, d, a, b, x[i + 15], 14, -660478335);\n    b = md5gg(b, c, d, a, x[i + 4], 20, -405537848);\n    a = md5gg(a, b, c, d, x[i + 9], 5, 568446438);\n    d = md5gg(d, a, b, c, x[i + 14], 9, -1019803690);\n    c = md5gg(c, d, a, b, x[i + 3], 14, -187363961);\n    b = md5gg(b, c, d, a, x[i + 8], 20, 1163531501);\n    a = md5gg(a, b, c, d, x[i + 13], 5, -1444681467);\n    d = md5gg(d, a, b, c, x[i + 2], 9, -51403784);\n    c = md5gg(c, d, a, b, x[i + 7], 14, 1735328473);\n    b = md5gg(b, c, d, a, x[i + 12], 20, -1926607734);\n    a = md5hh(a, b, c, d, x[i + 5], 4, -378558);\n    d = md5hh(d, a, b, c, x[i + 8], 11, -2022574463);\n    c = md5hh(c, d, a, b, x[i + 11], 16, 1839030562);\n    b = md5hh(b, c, d, a, x[i + 14], 23, -35309556);\n    a = md5hh(a, b, c, d, x[i + 1], 4, -1530992060);\n    d = md5hh(d, a, b, c, x[i + 4], 11, 1272893353);\n    c = md5hh(c, d, a, b, x[i + 7], 16, -155497632);\n    b = md5hh(b, c, d, a, x[i + 10], 23, -1094730640);\n    a = md5hh(a, b, c, d, x[i + 13], 4, 681279174);\n    d = md5hh(d, a, b, c, x[i], 11, -358537222);\n    c = md5hh(c, d, a, b, x[i + 3], 16, -722521979);\n    b = md5hh(b, c, d, a, x[i + 6], 23, 76029189);\n    a = md5hh(a, b, c, d, x[i + 9], 4, -640364487);\n    d = md5hh(d, a, b, c, x[i + 12], 11, -421815835);\n    c = md5hh(c, d, a, b, x[i + 15], 16, 530742520);\n    b = md5hh(b, c, d, a, x[i + 2], 23, -995338651);\n    a = md5ii(a, b, c, d, x[i], 6, -198630844);\n    d = md5ii(d, a, b, c, x[i + 7], 10, 1126891415);\n    c = md5ii(c, d, a, b, x[i + 14], 15, -1416354905);\n    b = md5ii(b, c, d, a, x[i + 5], 21, -57434055);\n    a = md5ii(a, b, c, d, x[i + 12], 6, 1700485571);\n    d = md5ii(d, a, b, c, x[i + 3], 10, -1894986606);\n    c = md5ii(c, d, a, b, x[i + 10], 15, -1051523);\n    b = md5ii(b, c, d, a, x[i + 1], 21, -2054922799);\n    a = md5ii(a, b, c, d, x[i + 8], 6, 1873313359);\n    d = md5ii(d, a, b, c, x[i + 15], 10, -30611744);\n    c = md5ii(c, d, a, b, x[i + 6], 15, -1560198380);\n    b = md5ii(b, c, d, a, x[i + 13], 21, 1309151649);\n    a = md5ii(a, b, c, d, x[i + 4], 6, -145523070);\n    d = md5ii(d, a, b, c, x[i + 11], 10, -1120210379);\n    c = md5ii(c, d, a, b, x[i + 2], 15, 718787259);\n    b = md5ii(b, c, d, a, x[i + 9], 21, -343485551);\n    a = safeAdd(a, olda);\n    b = safeAdd(b, oldb);\n    c = safeAdd(c, oldc);\n    d = safeAdd(d, oldd);\n  }\n\n  return [a, b, c, d];\n}\n/*\n * Convert an array bytes to an array of little-endian words\n * Characters >255 have their high-byte silently ignored.\n */\n\n\nfunction bytesToWords(input) {\n  if (input.length === 0) {\n    return [];\n  }\n\n  var length8 = input.length * 8;\n  var output = new Uint32Array(getOutputLength(length8));\n\n  for (var i = 0; i < length8; i += 8) {\n    output[i >> 5] |= (input[i / 8] & 0xff) << i % 32;\n  }\n\n  return output;\n}\n/*\n * Add integers, wrapping at 2^32. This uses 16-bit operations internally\n * to work around bugs in some JS interpreters.\n */\n\n\nfunction safeAdd(x, y) {\n  var lsw = (x & 0xffff) + (y & 0xffff);\n  var msw = (x >> 16) + (y >> 16) + (lsw >> 16);\n  return msw << 16 | lsw & 0xffff;\n}\n/*\n * Bitwise rotate a 32-bit number to the left.\n */\n\n\nfunction bitRotateLeft(num, cnt) {\n  return num << cnt | num >>> 32 - cnt;\n}\n/*\n * These functions implement the four basic operations the algorithm uses.\n */\n\n\nfunction md5cmn(q, a, b, x, s, t) {\n  return safeAdd(bitRotateLeft(safeAdd(safeAdd(a, q), safeAdd(x, t)), s), b);\n}\n\nfunction md5ff(a, b, c, d, x, s, t) {\n  return md5cmn(b & c | ~b & d, a, b, x, s, t);\n}\n\nfunction md5gg(a, b, c, d, x, s, t) {\n  return md5cmn(b & d | c & ~d, a, b, x, s, t);\n}\n\nfunction md5hh(a, b, c, d, x, s, t) {\n  return md5cmn(b ^ c ^ d, a, b, x, s, t);\n}\n\nfunction md5ii(a, b, c, d, x, s, t) {\n  return md5cmn(c ^ (b | ~d), a, b, x, s, t);\n}\n\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (md5);\n\n//# sourceURL=webpack://Formio/./node_modules/uuid/dist/esm-browser/md5.js?");

/***/ }),

/***/ "./node_modules/uuid/dist/esm-browser/nil.js":
/*!***************************************************!*\
  !*** ./node_modules/uuid/dist/esm-browser/nil.js ***!
  \***************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": function() { return __WEBPACK_DEFAULT_EXPORT__; }\n/* harmony export */ });\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ('00000000-0000-0000-0000-000000000000');\n\n//# sourceURL=webpack://Formio/./node_modules/uuid/dist/esm-browser/nil.js?");

/***/ }),

/***/ "./node_modules/uuid/dist/esm-browser/parse.js":
/*!*****************************************************!*\
  !*** ./node_modules/uuid/dist/esm-browser/parse.js ***!
  \*****************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": function() { return __WEBPACK_DEFAULT_EXPORT__; }\n/* harmony export */ });\n/* harmony import */ var _validate_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./validate.js */ \"./node_modules/uuid/dist/esm-browser/validate.js\");\n\n\nfunction parse(uuid) {\n  if (!(0,_validate_js__WEBPACK_IMPORTED_MODULE_0__.default)(uuid)) {\n    throw TypeError('Invalid UUID');\n  }\n\n  var v;\n  var arr = new Uint8Array(16); // Parse ########-....-....-....-............\n\n  arr[0] = (v = parseInt(uuid.slice(0, 8), 16)) >>> 24;\n  arr[1] = v >>> 16 & 0xff;\n  arr[2] = v >>> 8 & 0xff;\n  arr[3] = v & 0xff; // Parse ........-####-....-....-............\n\n  arr[4] = (v = parseInt(uuid.slice(9, 13), 16)) >>> 8;\n  arr[5] = v & 0xff; // Parse ........-....-####-....-............\n\n  arr[6] = (v = parseInt(uuid.slice(14, 18), 16)) >>> 8;\n  arr[7] = v & 0xff; // Parse ........-....-....-####-............\n\n  arr[8] = (v = parseInt(uuid.slice(19, 23), 16)) >>> 8;\n  arr[9] = v & 0xff; // Parse ........-....-....-....-############\n  // (Use \"/\" to avoid 32-bit truncation when bit-shifting high-order bytes)\n\n  arr[10] = (v = parseInt(uuid.slice(24, 36), 16)) / 0x10000000000 & 0xff;\n  arr[11] = v / 0x100000000 & 0xff;\n  arr[12] = v >>> 24 & 0xff;\n  arr[13] = v >>> 16 & 0xff;\n  arr[14] = v >>> 8 & 0xff;\n  arr[15] = v & 0xff;\n  return arr;\n}\n\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (parse);\n\n//# sourceURL=webpack://Formio/./node_modules/uuid/dist/esm-browser/parse.js?");

/***/ }),

/***/ "./node_modules/uuid/dist/esm-browser/regex.js":
/*!*****************************************************!*\
  !*** ./node_modules/uuid/dist/esm-browser/regex.js ***!
  \*****************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": function() { return __WEBPACK_DEFAULT_EXPORT__; }\n/* harmony export */ });\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (/^(?:[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}|00000000-0000-0000-0000-000000000000)$/i);\n\n//# sourceURL=webpack://Formio/./node_modules/uuid/dist/esm-browser/regex.js?");

/***/ }),

/***/ "./node_modules/uuid/dist/esm-browser/rng.js":
/*!***************************************************!*\
  !*** ./node_modules/uuid/dist/esm-browser/rng.js ***!
  \***************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": function() { return /* binding */ rng; }\n/* harmony export */ });\n// Unique ID creation requires a high quality random # generator. In the browser we therefore\n// require the crypto API and do not support built-in fallback to lower quality random number\n// generators (like Math.random()).\nvar getRandomValues;\nvar rnds8 = new Uint8Array(16);\nfunction rng() {\n  // lazy load so that environments that need to polyfill have a chance to do so\n  if (!getRandomValues) {\n    // getRandomValues needs to be invoked in a context where \"this\" is a Crypto implementation. Also,\n    // find the complete implementation of crypto (msCrypto) on IE11.\n    getRandomValues = typeof crypto !== 'undefined' && crypto.getRandomValues && crypto.getRandomValues.bind(crypto) || typeof msCrypto !== 'undefined' && typeof msCrypto.getRandomValues === 'function' && msCrypto.getRandomValues.bind(msCrypto);\n\n    if (!getRandomValues) {\n      throw new Error('crypto.getRandomValues() not supported. See https://github.com/uuidjs/uuid#getrandomvalues-not-supported');\n    }\n  }\n\n  return getRandomValues(rnds8);\n}\n\n//# sourceURL=webpack://Formio/./node_modules/uuid/dist/esm-browser/rng.js?");

/***/ }),

/***/ "./node_modules/uuid/dist/esm-browser/sha1.js":
/*!****************************************************!*\
  !*** ./node_modules/uuid/dist/esm-browser/sha1.js ***!
  \****************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": function() { return __WEBPACK_DEFAULT_EXPORT__; }\n/* harmony export */ });\n// Adapted from Chris Veness' SHA1 code at\n// http://www.movable-type.co.uk/scripts/sha1.html\nfunction f(s, x, y, z) {\n  switch (s) {\n    case 0:\n      return x & y ^ ~x & z;\n\n    case 1:\n      return x ^ y ^ z;\n\n    case 2:\n      return x & y ^ x & z ^ y & z;\n\n    case 3:\n      return x ^ y ^ z;\n  }\n}\n\nfunction ROTL(x, n) {\n  return x << n | x >>> 32 - n;\n}\n\nfunction sha1(bytes) {\n  var K = [0x5a827999, 0x6ed9eba1, 0x8f1bbcdc, 0xca62c1d6];\n  var H = [0x67452301, 0xefcdab89, 0x98badcfe, 0x10325476, 0xc3d2e1f0];\n\n  if (typeof bytes === 'string') {\n    var msg = unescape(encodeURIComponent(bytes)); // UTF8 escape\n\n    bytes = [];\n\n    for (var i = 0; i < msg.length; ++i) {\n      bytes.push(msg.charCodeAt(i));\n    }\n  } else if (!Array.isArray(bytes)) {\n    // Convert Array-like to Array\n    bytes = Array.prototype.slice.call(bytes);\n  }\n\n  bytes.push(0x80);\n  var l = bytes.length / 4 + 2;\n  var N = Math.ceil(l / 16);\n  var M = new Array(N);\n\n  for (var _i = 0; _i < N; ++_i) {\n    var arr = new Uint32Array(16);\n\n    for (var j = 0; j < 16; ++j) {\n      arr[j] = bytes[_i * 64 + j * 4] << 24 | bytes[_i * 64 + j * 4 + 1] << 16 | bytes[_i * 64 + j * 4 + 2] << 8 | bytes[_i * 64 + j * 4 + 3];\n    }\n\n    M[_i] = arr;\n  }\n\n  M[N - 1][14] = (bytes.length - 1) * 8 / Math.pow(2, 32);\n  M[N - 1][14] = Math.floor(M[N - 1][14]);\n  M[N - 1][15] = (bytes.length - 1) * 8 & 0xffffffff;\n\n  for (var _i2 = 0; _i2 < N; ++_i2) {\n    var W = new Uint32Array(80);\n\n    for (var t = 0; t < 16; ++t) {\n      W[t] = M[_i2][t];\n    }\n\n    for (var _t = 16; _t < 80; ++_t) {\n      W[_t] = ROTL(W[_t - 3] ^ W[_t - 8] ^ W[_t - 14] ^ W[_t - 16], 1);\n    }\n\n    var a = H[0];\n    var b = H[1];\n    var c = H[2];\n    var d = H[3];\n    var e = H[4];\n\n    for (var _t2 = 0; _t2 < 80; ++_t2) {\n      var s = Math.floor(_t2 / 20);\n      var T = ROTL(a, 5) + f(s, b, c, d) + e + K[s] + W[_t2] >>> 0;\n      e = d;\n      d = c;\n      c = ROTL(b, 30) >>> 0;\n      b = a;\n      a = T;\n    }\n\n    H[0] = H[0] + a >>> 0;\n    H[1] = H[1] + b >>> 0;\n    H[2] = H[2] + c >>> 0;\n    H[3] = H[3] + d >>> 0;\n    H[4] = H[4] + e >>> 0;\n  }\n\n  return [H[0] >> 24 & 0xff, H[0] >> 16 & 0xff, H[0] >> 8 & 0xff, H[0] & 0xff, H[1] >> 24 & 0xff, H[1] >> 16 & 0xff, H[1] >> 8 & 0xff, H[1] & 0xff, H[2] >> 24 & 0xff, H[2] >> 16 & 0xff, H[2] >> 8 & 0xff, H[2] & 0xff, H[3] >> 24 & 0xff, H[3] >> 16 & 0xff, H[3] >> 8 & 0xff, H[3] & 0xff, H[4] >> 24 & 0xff, H[4] >> 16 & 0xff, H[4] >> 8 & 0xff, H[4] & 0xff];\n}\n\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (sha1);\n\n//# sourceURL=webpack://Formio/./node_modules/uuid/dist/esm-browser/sha1.js?");

/***/ }),

/***/ "./node_modules/uuid/dist/esm-browser/stringify.js":
/*!*********************************************************!*\
  !*** ./node_modules/uuid/dist/esm-browser/stringify.js ***!
  \*********************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": function() { return __WEBPACK_DEFAULT_EXPORT__; }\n/* harmony export */ });\n/* harmony import */ var _validate_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./validate.js */ \"./node_modules/uuid/dist/esm-browser/validate.js\");\n\n/**\n * Convert array of 16 byte values to UUID string format of the form:\n * XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX\n */\n\nvar byteToHex = [];\n\nfor (var i = 0; i < 256; ++i) {\n  byteToHex.push((i + 0x100).toString(16).substr(1));\n}\n\nfunction stringify(arr) {\n  var offset = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n  // Note: Be careful editing this code!  It's been tuned for performance\n  // and works in ways you may not expect. See https://github.com/uuidjs/uuid/pull/434\n  var uuid = (byteToHex[arr[offset + 0]] + byteToHex[arr[offset + 1]] + byteToHex[arr[offset + 2]] + byteToHex[arr[offset + 3]] + '-' + byteToHex[arr[offset + 4]] + byteToHex[arr[offset + 5]] + '-' + byteToHex[arr[offset + 6]] + byteToHex[arr[offset + 7]] + '-' + byteToHex[arr[offset + 8]] + byteToHex[arr[offset + 9]] + '-' + byteToHex[arr[offset + 10]] + byteToHex[arr[offset + 11]] + byteToHex[arr[offset + 12]] + byteToHex[arr[offset + 13]] + byteToHex[arr[offset + 14]] + byteToHex[arr[offset + 15]]).toLowerCase(); // Consistency check for valid UUID.  If this throws, it's likely due to one\n  // of the following:\n  // - One or more input array values don't map to a hex octet (leading to\n  // \"undefined\" in the uuid)\n  // - Invalid input values for the RFC `version` or `variant` fields\n\n  if (!(0,_validate_js__WEBPACK_IMPORTED_MODULE_0__.default)(uuid)) {\n    throw TypeError('Stringified UUID is invalid');\n  }\n\n  return uuid;\n}\n\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (stringify);\n\n//# sourceURL=webpack://Formio/./node_modules/uuid/dist/esm-browser/stringify.js?");

/***/ }),

/***/ "./node_modules/uuid/dist/esm-browser/v1.js":
/*!**************************************************!*\
  !*** ./node_modules/uuid/dist/esm-browser/v1.js ***!
  \**************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": function() { return __WEBPACK_DEFAULT_EXPORT__; }\n/* harmony export */ });\n/* harmony import */ var _rng_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./rng.js */ \"./node_modules/uuid/dist/esm-browser/rng.js\");\n/* harmony import */ var _stringify_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./stringify.js */ \"./node_modules/uuid/dist/esm-browser/stringify.js\");\n\n // **`v1()` - Generate time-based UUID**\n//\n// Inspired by https://github.com/LiosK/UUID.js\n// and http://docs.python.org/library/uuid.html\n\nvar _nodeId;\n\nvar _clockseq; // Previous uuid creation time\n\n\nvar _lastMSecs = 0;\nvar _lastNSecs = 0; // See https://github.com/uuidjs/uuid for API details\n\nfunction v1(options, buf, offset) {\n  var i = buf && offset || 0;\n  var b = buf || new Array(16);\n  options = options || {};\n  var node = options.node || _nodeId;\n  var clockseq = options.clockseq !== undefined ? options.clockseq : _clockseq; // node and clockseq need to be initialized to random values if they're not\n  // specified.  We do this lazily to minimize issues related to insufficient\n  // system entropy.  See #189\n\n  if (node == null || clockseq == null) {\n    var seedBytes = options.random || (options.rng || _rng_js__WEBPACK_IMPORTED_MODULE_0__.default)();\n\n    if (node == null) {\n      // Per 4.5, create and 48-bit node id, (47 random bits + multicast bit = 1)\n      node = _nodeId = [seedBytes[0] | 0x01, seedBytes[1], seedBytes[2], seedBytes[3], seedBytes[4], seedBytes[5]];\n    }\n\n    if (clockseq == null) {\n      // Per 4.2.2, randomize (14 bit) clockseq\n      clockseq = _clockseq = (seedBytes[6] << 8 | seedBytes[7]) & 0x3fff;\n    }\n  } // UUID timestamps are 100 nano-second units since the Gregorian epoch,\n  // (1582-10-15 00:00).  JSNumbers aren't precise enough for this, so\n  // time is handled internally as 'msecs' (integer milliseconds) and 'nsecs'\n  // (100-nanoseconds offset from msecs) since unix epoch, 1970-01-01 00:00.\n\n\n  var msecs = options.msecs !== undefined ? options.msecs : Date.now(); // Per 4.2.1.2, use count of uuid's generated during the current clock\n  // cycle to simulate higher resolution clock\n\n  var nsecs = options.nsecs !== undefined ? options.nsecs : _lastNSecs + 1; // Time since last uuid creation (in msecs)\n\n  var dt = msecs - _lastMSecs + (nsecs - _lastNSecs) / 10000; // Per 4.2.1.2, Bump clockseq on clock regression\n\n  if (dt < 0 && options.clockseq === undefined) {\n    clockseq = clockseq + 1 & 0x3fff;\n  } // Reset nsecs if clock regresses (new clockseq) or we've moved onto a new\n  // time interval\n\n\n  if ((dt < 0 || msecs > _lastMSecs) && options.nsecs === undefined) {\n    nsecs = 0;\n  } // Per 4.2.1.2 Throw error if too many uuids are requested\n\n\n  if (nsecs >= 10000) {\n    throw new Error(\"uuid.v1(): Can't create more than 10M uuids/sec\");\n  }\n\n  _lastMSecs = msecs;\n  _lastNSecs = nsecs;\n  _clockseq = clockseq; // Per 4.1.4 - Convert from unix epoch to Gregorian epoch\n\n  msecs += 12219292800000; // `time_low`\n\n  var tl = ((msecs & 0xfffffff) * 10000 + nsecs) % 0x100000000;\n  b[i++] = tl >>> 24 & 0xff;\n  b[i++] = tl >>> 16 & 0xff;\n  b[i++] = tl >>> 8 & 0xff;\n  b[i++] = tl & 0xff; // `time_mid`\n\n  var tmh = msecs / 0x100000000 * 10000 & 0xfffffff;\n  b[i++] = tmh >>> 8 & 0xff;\n  b[i++] = tmh & 0xff; // `time_high_and_version`\n\n  b[i++] = tmh >>> 24 & 0xf | 0x10; // include version\n\n  b[i++] = tmh >>> 16 & 0xff; // `clock_seq_hi_and_reserved` (Per 4.2.2 - include variant)\n\n  b[i++] = clockseq >>> 8 | 0x80; // `clock_seq_low`\n\n  b[i++] = clockseq & 0xff; // `node`\n\n  for (var n = 0; n < 6; ++n) {\n    b[i + n] = node[n];\n  }\n\n  return buf || (0,_stringify_js__WEBPACK_IMPORTED_MODULE_1__.default)(b);\n}\n\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (v1);\n\n//# sourceURL=webpack://Formio/./node_modules/uuid/dist/esm-browser/v1.js?");

/***/ }),

/***/ "./node_modules/uuid/dist/esm-browser/v3.js":
/*!**************************************************!*\
  !*** ./node_modules/uuid/dist/esm-browser/v3.js ***!
  \**************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": function() { return __WEBPACK_DEFAULT_EXPORT__; }\n/* harmony export */ });\n/* harmony import */ var _v35_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./v35.js */ \"./node_modules/uuid/dist/esm-browser/v35.js\");\n/* harmony import */ var _md5_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./md5.js */ \"./node_modules/uuid/dist/esm-browser/md5.js\");\n\n\nvar v3 = (0,_v35_js__WEBPACK_IMPORTED_MODULE_0__.default)('v3', 0x30, _md5_js__WEBPACK_IMPORTED_MODULE_1__.default);\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (v3);\n\n//# sourceURL=webpack://Formio/./node_modules/uuid/dist/esm-browser/v3.js?");

/***/ }),

/***/ "./node_modules/uuid/dist/esm-browser/v35.js":
/*!***************************************************!*\
  !*** ./node_modules/uuid/dist/esm-browser/v35.js ***!
  \***************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"DNS\": function() { return /* binding */ DNS; },\n/* harmony export */   \"URL\": function() { return /* binding */ URL; },\n/* harmony export */   \"default\": function() { return /* export default binding */ __WEBPACK_DEFAULT_EXPORT__; }\n/* harmony export */ });\n/* harmony import */ var _stringify_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./stringify.js */ \"./node_modules/uuid/dist/esm-browser/stringify.js\");\n/* harmony import */ var _parse_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./parse.js */ \"./node_modules/uuid/dist/esm-browser/parse.js\");\n\n\n\nfunction stringToBytes(str) {\n  str = unescape(encodeURIComponent(str)); // UTF8 escape\n\n  var bytes = [];\n\n  for (var i = 0; i < str.length; ++i) {\n    bytes.push(str.charCodeAt(i));\n  }\n\n  return bytes;\n}\n\nvar DNS = '6ba7b810-9dad-11d1-80b4-00c04fd430c8';\nvar URL = '6ba7b811-9dad-11d1-80b4-00c04fd430c8';\n/* harmony default export */ function __WEBPACK_DEFAULT_EXPORT__(name, version, hashfunc) {\n  function generateUUID(value, namespace, buf, offset) {\n    if (typeof value === 'string') {\n      value = stringToBytes(value);\n    }\n\n    if (typeof namespace === 'string') {\n      namespace = (0,_parse_js__WEBPACK_IMPORTED_MODULE_0__.default)(namespace);\n    }\n\n    if (namespace.length !== 16) {\n      throw TypeError('Namespace must be array-like (16 iterable integer values, 0-255)');\n    } // Compute hash of namespace and value, Per 4.3\n    // Future: Use spread syntax when supported on all platforms, e.g. `bytes =\n    // hashfunc([...namespace, ... value])`\n\n\n    var bytes = new Uint8Array(16 + value.length);\n    bytes.set(namespace);\n    bytes.set(value, namespace.length);\n    bytes = hashfunc(bytes);\n    bytes[6] = bytes[6] & 0x0f | version;\n    bytes[8] = bytes[8] & 0x3f | 0x80;\n\n    if (buf) {\n      offset = offset || 0;\n\n      for (var i = 0; i < 16; ++i) {\n        buf[offset + i] = bytes[i];\n      }\n\n      return buf;\n    }\n\n    return (0,_stringify_js__WEBPACK_IMPORTED_MODULE_1__.default)(bytes);\n  } // Function#name is not settable on some platforms (#270)\n\n\n  try {\n    generateUUID.name = name; // eslint-disable-next-line no-empty\n  } catch (err) {} // For CommonJS default export support\n\n\n  generateUUID.DNS = DNS;\n  generateUUID.URL = URL;\n  return generateUUID;\n}\n\n//# sourceURL=webpack://Formio/./node_modules/uuid/dist/esm-browser/v35.js?");

/***/ }),

/***/ "./node_modules/uuid/dist/esm-browser/v4.js":
/*!**************************************************!*\
  !*** ./node_modules/uuid/dist/esm-browser/v4.js ***!
  \**************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": function() { return __WEBPACK_DEFAULT_EXPORT__; }\n/* harmony export */ });\n/* harmony import */ var _rng_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./rng.js */ \"./node_modules/uuid/dist/esm-browser/rng.js\");\n/* harmony import */ var _stringify_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./stringify.js */ \"./node_modules/uuid/dist/esm-browser/stringify.js\");\n\n\n\nfunction v4(options, buf, offset) {\n  options = options || {};\n  var rnds = options.random || (options.rng || _rng_js__WEBPACK_IMPORTED_MODULE_0__.default)(); // Per 4.4, set bits for version and `clock_seq_hi_and_reserved`\n\n  rnds[6] = rnds[6] & 0x0f | 0x40;\n  rnds[8] = rnds[8] & 0x3f | 0x80; // Copy bytes to buffer, if provided\n\n  if (buf) {\n    offset = offset || 0;\n\n    for (var i = 0; i < 16; ++i) {\n      buf[offset + i] = rnds[i];\n    }\n\n    return buf;\n  }\n\n  return (0,_stringify_js__WEBPACK_IMPORTED_MODULE_1__.default)(rnds);\n}\n\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (v4);\n\n//# sourceURL=webpack://Formio/./node_modules/uuid/dist/esm-browser/v4.js?");

/***/ }),

/***/ "./node_modules/uuid/dist/esm-browser/v5.js":
/*!**************************************************!*\
  !*** ./node_modules/uuid/dist/esm-browser/v5.js ***!
  \**************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": function() { return __WEBPACK_DEFAULT_EXPORT__; }\n/* harmony export */ });\n/* harmony import */ var _v35_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./v35.js */ \"./node_modules/uuid/dist/esm-browser/v35.js\");\n/* harmony import */ var _sha1_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./sha1.js */ \"./node_modules/uuid/dist/esm-browser/sha1.js\");\n\n\nvar v5 = (0,_v35_js__WEBPACK_IMPORTED_MODULE_0__.default)('v5', 0x50, _sha1_js__WEBPACK_IMPORTED_MODULE_1__.default);\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (v5);\n\n//# sourceURL=webpack://Formio/./node_modules/uuid/dist/esm-browser/v5.js?");

/***/ }),

/***/ "./node_modules/uuid/dist/esm-browser/validate.js":
/*!********************************************************!*\
  !*** ./node_modules/uuid/dist/esm-browser/validate.js ***!
  \********************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": function() { return __WEBPACK_DEFAULT_EXPORT__; }\n/* harmony export */ });\n/* harmony import */ var _regex_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./regex.js */ \"./node_modules/uuid/dist/esm-browser/regex.js\");\n\n\nfunction validate(uuid) {\n  return typeof uuid === 'string' && _regex_js__WEBPACK_IMPORTED_MODULE_0__.default.test(uuid);\n}\n\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (validate);\n\n//# sourceURL=webpack://Formio/./node_modules/uuid/dist/esm-browser/validate.js?");

/***/ }),

/***/ "./node_modules/uuid/dist/esm-browser/version.js":
/*!*******************************************************!*\
  !*** ./node_modules/uuid/dist/esm-browser/version.js ***!
  \*******************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": function() { return __WEBPACK_DEFAULT_EXPORT__; }\n/* harmony export */ });\n/* harmony import */ var _validate_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./validate.js */ \"./node_modules/uuid/dist/esm-browser/validate.js\");\n\n\nfunction version(uuid) {\n  if (!(0,_validate_js__WEBPACK_IMPORTED_MODULE_0__.default)(uuid)) {\n    throw TypeError('Invalid UUID');\n  }\n\n  return parseInt(uuid.substr(14, 1), 16);\n}\n\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (version);\n\n//# sourceURL=webpack://Formio/./node_modules/uuid/dist/esm-browser/version.js?");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	// The module cache
/******/ 	var __webpack_module_cache__ = {};
/******/ 	
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/ 		// Check if module is in cache
/******/ 		var cachedModule = __webpack_module_cache__[moduleId];
/******/ 		if (cachedModule !== undefined) {
/******/ 			return cachedModule.exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = __webpack_module_cache__[moduleId] = {
/******/ 			// no module.id needed
/******/ 			// no module.loaded needed
/******/ 			exports: {}
/******/ 		};
/******/ 	
/******/ 		// Execute the module function
/******/ 		__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/ 	
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/ 	
/************************************************************************/
/******/ 	/* webpack/runtime/define property getters */
/******/ 	!function() {
/******/ 		// define getter functions for harmony exports
/******/ 		__webpack_require__.d = function(exports, definition) {
/******/ 			for(var key in definition) {
/******/ 				if(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {
/******/ 					Object.defineProperty(exports, key, { enumerable: true, get: definition[key] });
/******/ 				}
/******/ 			}
/******/ 		};
/******/ 	}();
/******/ 	
/******/ 	/* webpack/runtime/global */
/******/ 	!function() {
/******/ 		__webpack_require__.g = (function() {
/******/ 			if (typeof globalThis === 'object') return globalThis;
/******/ 			try {
/******/ 				return this || new Function('return this')();
/******/ 			} catch (e) {
/******/ 				if (typeof window === 'object') return window;
/******/ 			}
/******/ 		})();
/******/ 	}();
/******/ 	
/******/ 	/* webpack/runtime/hasOwnProperty shorthand */
/******/ 	!function() {
/******/ 		__webpack_require__.o = function(obj, prop) { return Object.prototype.hasOwnProperty.call(obj, prop); }
/******/ 	}();
/******/ 	
/******/ 	/* webpack/runtime/make namespace object */
/******/ 	!function() {
/******/ 		// define __esModule on exports
/******/ 		__webpack_require__.r = function(exports) {
/******/ 			if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 				Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 			}
/******/ 			Object.defineProperty(exports, '__esModule', { value: true });
/******/ 		};
/******/ 	}();
/******/ 	
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module is referenced by other modules so it can't be inlined
/******/ 	var __webpack_exports__ = __webpack_require__("./lib/Formio.js");
/******/ 	__webpack_exports__ = __webpack_exports__.Formio;
/******/ 	
/******/ 	return __webpack_exports__;
/******/ })()
;
});