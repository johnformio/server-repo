version: 2
jobs:
  build_js:
    docker:
      - image: circleci/node:8.11.3
    steps:
      - checkout
      - restore_cache:
          key: dependency-cache-{{ checksum "package.json" }}
      - run:
          name: Install npm modules
          command: npm install
      - save_cache:
          key: dependency-cache-{{ checksum "package.json" }}
          paths:
            - node_modules
      - run:
          name: Lint
          command: npm run lint
      - run:
          name: Clean
          command: npm run clean
      - run:
          name: Build
          command: npm run compile
      - persist_to_workspace:
          root: build
          paths:
            - favicon.ico
            - main.js
            - package.json
            - package-lock.json
  test_js:
    environment:
      MONGO: "mongodb://localhost:27017/formio"
      REDIS_ADDR: localhost
      REDIS_PORT: 6379
    docker:
      - image: circleci/node:8.11.3
      - image: mongo:3.4.16
      - image: redis:4.0.11
    steps:
      - checkout
      - restore_cache:
          key: dependency-cache-{{ checksum "package.json" }}
      - run:
          name: Setup hostnames
          command: |
            sudo bash -c "echo \"127.0.0.1 formio.localhost\" >> /etc/hosts"
            sudo bash -c "echo \"127.0.0.1 api.localhost\" >> /etc/hosts"
      - run:
          name: Test
          command: npm test
  docker:
    environment:
      IMAGE_PATH: formio/formio-server
    machine:
      enabled: true
    steps:
      - checkout
      - restore_cache:
          key: dependency-cache-{{ checksum "package.json" }}
      - attach_workspace:
          at:
            build
      - run:
          name: Setup hostnames
          command: |
            sudo bash -c "echo \"127.0.0.1 formio.localhost\" >> /etc/hosts"
            sudo bash -c "echo \"127.0.0.1 api.localhost\" >> /etc/hosts"
      - run: cp -r node_modules build/
      - run: docker build --no-cache -t $IMAGE_PATH -f deployment/docker/formio-server/Dockerfile .
      - run: docker network create formio
      - run: docker network ls
      - run: docker run -itd --name formio-mongo --net formio -p 27017:27017 mongo
      - run: docker run -itd --name formio-redis --net formio -p 6380 redis
      - run: docker run -itd --name formio-server --net formio -e "DEBUG=formio:*" -e "PROJECT_PLAN=basic" -e "PROTOCOL=http" -e "DOMAIN=localhost" -e "PORT=3000" -e "JWT_SECRET=CHANGEME" -e "JWT_EXPIRE_TIME=240" -e "DB_SECRET=CHANGEME" -e "ADMIN_KEY=dockertest" --link formio-redis:redis --link formio-mongo:mongo -p 127.0.0.1:3000:3000 $IMAGE_PATH
      - run: docker ps -a
      - run: sleep 5
      - run: ADMIN_KEY=dockertest node install
      - run: curl -f --retry 10 http://api.localhost:3000/health
      - run: npm run docker
  deploy_npm:
    docker:
      - image: circleci/node:8.11.3
    steps:
      - checkout
      - attach_workspace:
          at:
            build
      - run: echo 'deploy_npm';
#https://circleci.com/docs/2.0/deployment-integrations/#npm
#      - run: echo "//registry.npmjs.org/:_authToken=$NPM_TOKEN" >> ~/.npmrc
#      - run: npm publish

workflows:
  version: 2
  do-build:
    jobs:
      - build_js
      - test_js:
          requires:
            - build_js
      - docker:
          requires:
            - build_js
          filters:
            tags:
              # Regex for semver. See https://github.com/semver/semver.org/issues/59
              only: /^(?<major>0|[1-9]\d*)\.(?<minor>0|[1-9]\d*)\.(?<patch>0|[1-9]\d*)(?:-(?<prerelease>(?:0|[1-9]\d*|\d*[a-zA-Z-][0-9a-zA-Z-]*)(?:\.(?:0|[1-9]\d*|\d*[a-zA-Z-][0-9a-zA-Z-]*))*))?(?:\+(?<buildmetadata>[0-9a-zA-Z-]+(?:\.[0-9a-zA-Z-]+)*))?$/
      - deploy_npm:
          requires:
            - test_js
            - docker
          filters:
            tags:
              # Regex for semver. See https://github.com/semver/semver.org/issues/59
              only: /^(?<major>0|[1-9]\d*)\.(?<minor>0|[1-9]\d*)\.(?<patch>0|[1-9]\d*)(?:-(?<prerelease>(?:0|[1-9]\d*|\d*[a-zA-Z-][0-9a-zA-Z-]*)(?:\.(?:0|[1-9]\d*|\d*[a-zA-Z-][0-9a-zA-Z-]*))*))?(?:\+(?<buildmetadata>[0-9a-zA-Z-]+(?:\.[0-9a-zA-Z-]+)*))?$/
