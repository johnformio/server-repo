packages:
  yum:
    aws-kinesis-agent: []
container_commands:
  01_start_kinesis_agent:
    command: |
      AWSENV=`aws ec2 describe-tags   --output text   --filters "Name=resource-id,Values=$(/opt/aws/bin/ec2-metadata -i | awk '{print $2}')"             "Name=key,Values=elasticbeanstalk:environment-name"   --region "$(/opt/aws/bin/ec2-metadata -z | awk '{print substr($2, 0, length($2)-1)}')"   --query "Tags[*].Value"`
      sudo sed -i "s/ENVIRONMENT/$AWSENV/g" /etc/aws-kinesis/agent.json
  02_start_kinesis_agent:
    command: sudo service aws-kinesis-agent restart
  03_check_kinesis_agent_startup:
    command: sudo chkconfig aws-kinesis-agent on
option_settings:
  - namespace: aws:elasticbeanstalk:application:environment
    option_name: HTTPS
    value: false
  - namespace: aws:elb:loadbalancer
    option_name: LoadBalancerHTTPPort
    value: 80
  - namespace: aws:elb:loadbalancer
    option_name: LoadBalancerHTTPSPort
    value: 443
  - namespace: aws:elb:loadbalancer
    option_name: SSLCertificateId
    value: arn:aws:iam::551091399009:server-certificate/develop-form.io
  - namespace: aws:elb:loadbalancer
    option_name: LoadBalancerPortProtocol
    value: HTTP
  - namespace: aws:elb:loadbalancer
    option_name: LoadBalancerSSLPortProtocol
    value: HTTPS
  - namespace: aws:elasticbeanstalk:application
    option_name: Application Healthcheck URL
    value: /health
  - namespace: aws:elb:healthcheck
    option_name: Interval
    value: 30
  - namespace: aws:elb:healthcheck
    option_name: Timeout
    value: 5
  - namespace: aws:elb:healthcheck
    option_name: HealthyThreshold
    value: 2
  - namespace: aws:elb:healthcheck
    option_name: UnhealthyThreshold
    value: 2
  - namespace: aws:autoscaling:launchconfiguration
    option_name: SecurityGroups
    value: appserver
  - namespace: aws:autoscaling:asg
    option_name: MinSize
    value: 1
  - namespace: aws:autoscaling:asg
    option_name: MinSize
    value: 1
  - namespace: aws:autoscaling:asg
    option_name: MaxSize
    value: 1
files:
  "/etc/nginx/sites-enabled/elasticbeanstalk-nginx-docker-proxy.conf" :
    mode: "000755"
    owner: root
    group: root
    content: |
      map $http_upgrade $connection_upgrade {
        default        "upgrade";
        ""            "";
      }

      server {
        listen 80;

        gzip on;
        gzip_comp_level 4;
        gzip_types text/html text/plain text/css application/json application/x-javascript text/xml application/xml application/xml+rss text/javascript;

        if ($time_iso8601 ~ "^(\d{4})-(\d{2})-(\d{2})T(\d{2})") {
          set $year $1;
          set $month $2;
          set $day $3;
          set $hour $4;
        }
        access_log /var/log/nginx/healthd/application.log.$year-$month-$day-$hour healthd;

        access_log    /var/log/nginx/access.log;

        location / {
          client_max_body_size 8M;
          proxy_pass            http://docker;
          proxy_http_version    1.1;

          proxy_set_header    Connection            $connection_upgrade;
          proxy_set_header    Upgrade                $http_upgrade;
          proxy_set_header    Host                $host;
          proxy_set_header    X-Real-IP            $remote_addr;
          proxy_set_header    X-Forwarded-For        $proxy_add_x_forwarded_for;
        }

        location ~* \/storage\/dropbox {
          client_max_body_size 150M;
          proxy_pass            http://docker;
          proxy_http_version    1.1;

          proxy_set_header    Connection            $connection_upgrade;
          proxy_set_header    Upgrade                $http_upgrade;
          proxy_set_header    Host                $host;
          proxy_set_header    X-Real-IP            $remote_addr;
          proxy_set_header    X-Forwarded-For        $proxy_add_x_forwarded_for;
        }
      }
  "/etc/aws-kinesis/agent.json":
    mode: "000755"
    owner: root
    group: root
    content: |
      {
        "cloudwatch.endpoint": "https://monitoring.us-west-2.amazonaws.com",
        "kinesis.endpoint": "https://kinesis.us-west-2.amazonaws.com",
        "firehose.endpoint": "https://firehose.us-west-2.amazonaws.com",
        "awsAccessKeyId": "AKIAJBKFNUPC3LIO425A",
        "awsSecretAccessKey": "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",
        "flows": [
          {
            "filePattern": "/var/log/eb-docker/containers/eb-current-app/*.log",
            "deliveryStream": "ENVIRONMENT",
            "dataProcessingOptions": [
              {
                "optionName": "LOGTOJSON",
                "logFormat": "COMMONAPACHELOG",
                "matchPattern": "^([\\d-T:Z.]+) formio:log ([0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}) ([0-9a-f]{24}|NoProject) (\\w+) (.*)$",
                "customFieldNames": ["datetime", "id", "projectId", "type", "info"]
              }
            ]
          }
        ]
      }
